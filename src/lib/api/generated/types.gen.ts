// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
	baseUrl: 'http://localhost:8000' | (string & {});
};

/**
 * VersionResponse
 */
export type VersionResponse = {
	/**
	 * Version
	 */
	version: string;
};

/**
 * ResponseOk
 */
export type ResponseOk = {
	/**
	 * Status
	 */
	status?: 'ok';
};

/**
 * TempToken
 */
export type TempToken = {
	/**
	 * Token
	 *
	 * The temporary token to be used with OTP.
	 */
	token: string;
	/**
	 * Type
	 */
	type?: 'otp';
};

/**
 * TokenObtainPairOutputSchema
 */
export type TokenObtainPairOutputSchema = {
	/**
	 * Username
	 *
	 * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
	 */
	username: string;
	/**
	 * Refresh
	 */
	refresh: string;
	/**
	 * Access
	 */
	access: string;
};

/**
 * TokenObtainPairInputSchema
 */
export type TokenObtainPairInputSchema = {
	/**
	 * Password
	 */
	password: string;
	/**
	 * Username
	 *
	 * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
	 */
	username: string;
};

/**
 * TokenRefreshOutputSchema
 */
export type TokenRefreshOutputSchema = {
	/**
	 * Refresh
	 */
	refresh: string;
	/**
	 * Access
	 */
	access: string | null;
};

/**
 * TokenRefreshInputSchema
 */
export type TokenRefreshInputSchema = {
	/**
	 * Refresh
	 */
	refresh: string;
};

/**
 * DemoLoginSchema
 */
export type DemoLoginSchema = {
	/**
	 * Username
	 */
	username: string;
	/**
	 * Password
	 */
	password: string;
};

/**
 * TempTokenWithTOTP
 */
export type TempTokenWithTotp = {
	/**
	 * Token
	 */
	token: string;
	/**
	 * Otp
	 *
	 * The one-time password to verify.
	 */
	otp: string;
};

/**
 * GoogleIDTokenSchema
 */
export type GoogleIdTokenSchema = {
	/**
	 * Id Token
	 *
	 * The Google ID token to verify.
	 */
	id_token: string;
};

/**
 * TOTPProvisioningUriSchema
 */
export type TotpProvisioningUriSchema = {
	/**
	 * Uri
	 *
	 * The provisioning URI for the TOTP app, to be rendered in a QR code.
	 */
	uri: string;
};

/**
 * RevelUserSchema
 */
export type RevelUserSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Email
	 */
	email: string;
	/**
	 * Email Verified
	 */
	email_verified: boolean;
	/**
	 * Preferred Name
	 */
	preferred_name: string;
	/**
	 * Pronouns
	 */
	pronouns: string;
	/**
	 * Is Active
	 */
	is_active: boolean;
	/**
	 * First Name
	 */
	first_name: string;
	/**
	 * Last Name
	 */
	last_name: string;
	/**
	 * Totp Active
	 */
	totp_active: boolean;
};

/**
 * OTPVerifySchema
 */
export type OtpVerifySchema = {
	/**
	 * Otp
	 *
	 * The one-time password to verify.
	 */
	otp: string;
};

/**
 * ResponseMessage
 */
export type ResponseMessage = {
	/**
	 * Message
	 */
	message: string;
};

/**
 * ProfileUpdateSchema
 *
 * Schema for updating user profile information.
 */
export type ProfileUpdateSchema = {
	/**
	 * Preferred Name
	 *
	 * User's preferred name
	 */
	preferred_name: string;
	/**
	 * Pronouns
	 *
	 * User's pronouns
	 */
	pronouns: string;
	/**
	 * First Name
	 *
	 * User's first name
	 */
	first_name: string;
	/**
	 * Last Name
	 *
	 * User's last name
	 */
	last_name: string;
};

/**
 * RegisterUserSchema
 */
export type RegisterUserSchema = {
	/**
	 * Password1
	 *
	 * Password
	 */
	password1: string;
	/**
	 * Password2
	 *
	 * Password confirmation
	 */
	password2: string;
	/**
	 * Email
	 */
	email: string;
	/**
	 * First Name
	 */
	first_name?: string;
	/**
	 * Last Name
	 */
	last_name?: string;
};

/**
 * VerifyEmailResponseSchema
 */
export type VerifyEmailResponseSchema = {
	user: RevelUserSchema;
	token: TokenObtainPairOutputSchema;
};

/**
 * VerifyEmailSchema
 */
export type VerifyEmailSchema = {
	/**
	 * Token
	 */
	token: string;
};

/**
 * DeleteAccountConfirmSchema
 */
export type DeleteAccountConfirmSchema = {
	/**
	 * Token
	 */
	token: string;
};

/**
 * PasswordResetRequestSchema
 */
export type PasswordResetRequestSchema = {
	/**
	 * Email
	 */
	email: string;
};

/**
 * PasswordResetSchema
 */
export type PasswordResetSchema = {
	/**
	 * Password1
	 *
	 * Password
	 */
	password1: string;
	/**
	 * Password2
	 *
	 * Password confirmation
	 */
	password2: string;
	/**
	 * Token
	 */
	token: string;
};

/**
 * DashboardOrganizationsFiltersSchema
 */
export type DashboardOrganizationsFiltersSchema = {
	/**
	 * Owner
	 */
	owner?: boolean;
	/**
	 * Staff
	 */
	staff?: boolean;
	/**
	 * Member
	 */
	member?: boolean;
	/**
	 * Subscriber
	 */
	subscriber?: boolean;
};

/**
 * DynamicInput
 */
export type DynamicInput = {
	/**
	 * Page
	 */
	page?: number;
	/**
	 * Page Size
	 */
	page_size?: number;
};

/**
 * Input
 */
export type Input = {
	/**
	 * Search
	 */
	search?: string | null;
};

/**
 * CitySchema
 */
export type CitySchema = {
	/**
	 * ID
	 */
	id?: number | null;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Country
	 */
	country: string;
	/**
	 * Admin Name
	 */
	admin_name?: string | null;
};

/**
 * OrganizationRetrieveSchema
 */
export type OrganizationRetrieveSchema = {
	/**
	 * Tags
	 */
	tags?: Array<string>;
	city?: CitySchema | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Id
	 */
	id: string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Slug
	 */
	slug: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Logo
	 */
	logo?: string | null;
	/**
	 * Cover Art
	 */
	cover_art?: string | null;
	visibility: Visibility;
	/**
	 * Is Stripe Connected
	 */
	is_stripe_connected: boolean;
};

/**
 * PaginatedResponseSchema[OrganizationRetrieveSchema]
 */
export type PaginatedResponseSchemaOrganizationRetrieveSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<OrganizationRetrieveSchema>;
};

/**
 * Visibility
 */
export type Visibility = 'public' | 'private' | 'members-only' | 'staff-only';

/**
 * DashboardEventsFiltersSchema
 */
export type DashboardEventsFiltersSchema = {
	/**
	 * Owner
	 */
	owner?: boolean;
	/**
	 * Staff
	 */
	staff?: boolean;
	/**
	 * Member
	 */
	member?: boolean;
	/**
	 * Rsvp Yes
	 */
	rsvp_yes?: boolean;
	/**
	 * Rsvp No
	 */
	rsvp_no?: boolean;
	/**
	 * Rsvp Maybe
	 */
	rsvp_maybe?: boolean;
	/**
	 * Got Ticket
	 */
	got_ticket?: boolean;
	/**
	 * Got Invitation
	 */
	got_invitation?: boolean;
	/**
	 * Subscriber
	 */
	subscriber?: boolean;
};

/**
 * EventInListSchema
 */
export type EventInListSchema = {
	/**
	 * Tags
	 */
	tags?: Array<string>;
	city?: CitySchema | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Id
	 */
	id: string;
	event_type: Types;
	visibility: Visibility;
	organization: OrganizationRetrieveSchema;
	status: Status;
	event_series?: EventSeriesRetrieveSchema | null;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Slug
	 */
	slug: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Invitation Message
	 */
	invitation_message?: string | null;
	/**
	 * Invitation Message Html
	 */
	invitation_message_html?: string;
	/**
	 * Max Attendees
	 */
	max_attendees?: number;
	/**
	 * Waitlist Open
	 */
	waitlist_open?: boolean | null;
	/**
	 * Start
	 */
	start: string;
	/**
	 * End
	 */
	end: string;
	/**
	 * Rsvp Before
	 */
	rsvp_before?: string | null;
	/**
	 * Logo
	 */
	logo?: string | null;
	/**
	 * Cover Art
	 */
	cover_art?: string | null;
	/**
	 * Free For Members
	 */
	free_for_members: boolean;
	/**
	 * Free For Staff
	 */
	free_for_staff: boolean;
	/**
	 * Requires Ticket
	 */
	requires_ticket: boolean;
	/**
	 * Potluck Open
	 */
	potluck_open: boolean;
	/**
	 * Attendee Count
	 */
	attendee_count: number;
};

/**
 * EventSeriesRetrieveSchema
 */
export type EventSeriesRetrieveSchema = {
	/**
	 * Tags
	 */
	tags?: Array<string>;
	/**
	 * Id
	 */
	id: string;
	organization: OrganizationRetrieveSchema;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Slug
	 */
	slug: string;
	/**
	 * Logo
	 */
	logo?: string | null;
	/**
	 * Cover Art
	 */
	cover_art?: string | null;
};

/**
 * PaginatedResponseSchema[EventInListSchema]
 */
export type PaginatedResponseSchemaEventInListSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<EventInListSchema>;
};

/**
 * Status
 */
export type Status = 'approved' | 'rejected' | 'pending review';

/**
 * Types
 */
export type Types = 'public' | 'private' | 'members-only';

/**
 * DashboardEventSeriesFiltersSchema
 */
export type DashboardEventSeriesFiltersSchema = {
	/**
	 * Owner
	 */
	owner?: boolean;
	/**
	 * Staff
	 */
	staff?: boolean;
	/**
	 * Member
	 */
	member?: boolean;
	/**
	 * Subscriber
	 */
	subscriber?: boolean;
};

/**
 * InvitationSchema
 */
export type InvitationSchema = {
	/**
	 * Waives Questionnaire
	 */
	waives_questionnaire?: boolean;
	/**
	 * Waives Purchase
	 */
	waives_purchase?: boolean;
	/**
	 * Overrides Max Attendees
	 */
	overrides_max_attendees?: boolean;
	/**
	 * Waives Membership Required
	 */
	waives_membership_required?: boolean;
	/**
	 * Waives Rsvp Deadline
	 */
	waives_rsvp_deadline?: boolean;
	/**
	 * Custom Message
	 */
	custom_message?: string | null;
	event: EventInListSchema;
	tier?: TierSchema | null;
	/**
	 * User Id
	 */
	user_id: string;
};

/**
 * PaginatedResponseSchema[InvitationSchema]
 */
export type PaginatedResponseSchemaInvitationSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<InvitationSchema>;
};

/**
 * TierSchema
 */
export type TierSchema = {
	/**
	 * Event Id
	 */
	event_id: string;
	/**
	 * Price
	 */
	price: number | string;
	/**
	 * Currency
	 */
	currency: string;
	/**
	 * Total Available
	 */
	total_available: number | null;
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Price Type
	 *
	 * Whether this tier has a fixed price or allows pay-what-you-can pricing
	 */
	price_type?: string;
	/**
	 * Pwyc Min
	 *
	 * Minimum amount for pay-what-you-can pricing
	 */
	pwyc_min?: number | string;
	/**
	 * Pwyc Max
	 *
	 * Maximum amount for pay-what-you-can pricing (optional)
	 */
	pwyc_max?: number | string | null;
	/**
	 * Sales Start At
	 *
	 * When ticket sales begin for this tier
	 */
	sales_start_at?: string | null;
	/**
	 * Sales End At
	 *
	 * When ticket sales end for this tier
	 */
	sales_end_at?: string | null;
	/**
	 * Purchasable By
	 */
	purchasable_by?: string;
	/**
	 * Payment Method
	 */
	payment_method?: string;
};

/**
 * OrganizationFilterSchema
 */
export type OrganizationFilterSchema = {
	/**
	 * Country
	 */
	country?: string | null;
	/**
	 * City Id
	 */
	city_id?: number | null;
	/**
	 * Tags
	 */
	tags?: Array<string> | null;
};

/**
 * ResourceFilterSchema
 */
export type ResourceFilterSchema = {
	resource_type?: ResourceTypes | null;
};

/**
 * ResourceTypes
 */
export type ResourceTypes = 'file' | 'link' | 'text';

/**
 * AdditionalResourceSchema
 */
export type AdditionalResourceSchema = {
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Text Html
	 */
	text_html?: string;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Resource Type
	 */
	resource_type: string;
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * File
	 */
	file?: string | null;
	/**
	 * Link
	 */
	link?: string | null;
	/**
	 * Text
	 */
	text?: string | null;
	/**
	 * Visibility
	 */
	visibility?: string;
	/**
	 * Display On Organization Page
	 *
	 * Whether the resource should be displayed on organization pages.
	 */
	display_on_organization_page?: boolean;
};

/**
 * PaginatedResponseSchema[AdditionalResourceSchema]
 */
export type PaginatedResponseSchemaAdditionalResourceSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<AdditionalResourceSchema>;
};

/**
 * MinimalRevelUserSchema
 */
export type MinimalRevelUserSchema = {
	/**
	 * Preferred Name
	 *
	 * Preferred name
	 */
	preferred_name?: string | null;
	/**
	 * Pronouns
	 *
	 * Pronouns
	 */
	pronouns?: string | null;
	/**
	 * First Name
	 */
	first_name?: string | null;
	/**
	 * Last Name
	 */
	last_name?: string | null;
};

/**
 * OrganizationMembershipRequestRetrieve
 */
export type OrganizationMembershipRequestRetrieve = {
	user: MinimalRevelUserSchema;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Status
	 */
	status?: string;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * OrganizationEditSchema
 */
export type OrganizationEditSchema = {
	/**
	 * City Id
	 */
	city_id?: number | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Description
	 */
	description?: string;
	visibility: Visibility;
	/**
	 * Platform Fee Percent
	 */
	platform_fee_percent?: number | string | null;
};

/**
 * StripeOnboardingLinkSchema
 */
export type StripeOnboardingLinkSchema = {
	/**
	 * Onboarding Url
	 */
	onboarding_url: string;
};

/**
 * StripeAccountStatusSchema
 */
export type StripeAccountStatusSchema = {
	/**
	 * Is Connected
	 */
	is_connected: boolean;
	/**
	 * Charges Enabled
	 */
	charges_enabled?: boolean;
	/**
	 * Details Submitted
	 */
	details_submitted?: boolean;
};

/**
 * ValidationErrorResponse
 */
export type ValidationErrorResponse = {
	/**
	 * Errors
	 */
	errors: {
		[key: string]: string | Array<string>;
	};
};

/**
 * EventSeriesEditSchema
 */
export type EventSeriesEditSchema = {
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
};

/**
 * EventDetailSchema
 */
export type EventDetailSchema = {
	/**
	 * Tags
	 */
	tags?: Array<string>;
	city?: CitySchema | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Id
	 */
	id: string;
	event_type: Types;
	visibility: Visibility;
	organization: OrganizationRetrieveSchema;
	status: Status;
	event_series?: EventSeriesRetrieveSchema | null;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Slug
	 */
	slug: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Invitation Message
	 */
	invitation_message?: string | null;
	/**
	 * Invitation Message Html
	 */
	invitation_message_html?: string;
	/**
	 * Max Attendees
	 */
	max_attendees?: number;
	/**
	 * Waitlist Open
	 */
	waitlist_open?: boolean | null;
	/**
	 * Start
	 */
	start: string;
	/**
	 * End
	 */
	end: string;
	/**
	 * Rsvp Before
	 */
	rsvp_before?: string | null;
	/**
	 * Logo
	 */
	logo?: string | null;
	/**
	 * Cover Art
	 */
	cover_art?: string | null;
	/**
	 * Free For Members
	 */
	free_for_members: boolean;
	/**
	 * Free For Staff
	 */
	free_for_staff: boolean;
	/**
	 * Requires Ticket
	 */
	requires_ticket: boolean;
	/**
	 * Potluck Open
	 */
	potluck_open: boolean;
	/**
	 * Attendee Count
	 */
	attendee_count: number;
};

/**
 * EventCreateSchema
 */
export type EventCreateSchema = {
	/**
	 * City Id
	 */
	city_id?: number | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
	event_type?: Types | null;
	status?: Status;
	visibility?: Visibility | null;
	/**
	 * Invitation Message
	 *
	 * Invitation message
	 */
	invitation_message?: string | null;
	/**
	 * Max Attendees
	 */
	max_attendees?: number;
	/**
	 * Waitlist Open
	 */
	waitlist_open?: boolean | null;
	/**
	 * Start
	 */
	start: string;
	/**
	 * End
	 */
	end?: string | null;
	/**
	 * Rsvp Before
	 *
	 * RSVP deadline for events that do not require tickets
	 */
	rsvp_before?: string | null;
	/**
	 * Check In Starts At
	 *
	 * When check-in opens for this event
	 */
	check_in_starts_at?: string | null;
	/**
	 * Check In Ends At
	 *
	 * When check-in closes for this event
	 */
	check_in_ends_at?: string | null;
	/**
	 * Event Series Id
	 */
	event_series_id?: string | null;
	/**
	 * Free For Members
	 */
	free_for_members?: boolean;
	/**
	 * Free For Staff
	 */
	free_for_staff?: boolean;
	/**
	 * Requires Ticket
	 */
	requires_ticket?: boolean;
	/**
	 * Potluck Open
	 */
	potluck_open?: boolean;
};

/**
 * OrganizationTokenFilterSchema
 */
export type OrganizationTokenFilterSchema = {
	/**
	 * Is Active
	 */
	is_active?: boolean | null;
	/**
	 * Organization Id
	 */
	organization_id?: string | null;
	/**
	 * Membership Pass
	 */
	membership_pass?: boolean | null;
};

/**
 * OrganizationTokenSchema
 */
export type OrganizationTokenSchema = {
	/**
	 * Created At
	 */
	created_at: string;
	/**
	 * Updated At
	 */
	updated_at: string;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Issuer
	 */
	issuer: string;
	/**
	 * Expires At
	 */
	expires_at?: string | null;
	/**
	 * Uses
	 */
	uses?: number;
	/**
	 * Max Uses
	 *
	 * The maximum number of invites allowed for this token. 0 Means unlimited.
	 */
	max_uses?: number;
	/**
	 * Organization
	 */
	organization: string;
	/**
	 * Grants Membership
	 */
	grants_membership?: boolean;
	/**
	 * Grants Staff Status
	 */
	grants_staff_status?: boolean;
};

/**
 * PaginatedResponseSchema[OrganizationTokenSchema]
 */
export type PaginatedResponseSchemaOrganizationTokenSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<OrganizationTokenSchema>;
};

/**
 * OrganizationTokenCreateSchema
 */
export type OrganizationTokenCreateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Max Uses
	 */
	max_uses?: number;
	/**
	 * Grants Membership
	 */
	grants_membership?: boolean;
	/**
	 * Grants Staff Status
	 */
	grants_staff_status?: boolean;
	/**
	 * Duration
	 */
	duration?: number;
};

/**
 * OrganizationTokenUpdateSchema
 */
export type OrganizationTokenUpdateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Max Uses
	 */
	max_uses?: number;
	/**
	 * Grants Membership
	 */
	grants_membership?: boolean;
	/**
	 * Grants Staff Status
	 */
	grants_staff_status?: boolean;
	/**
	 * Expires At
	 */
	expires_at?: string | null;
};

/**
 * PaginatedResponseSchema[OrganizationMembershipRequestRetrieve]
 */
export type PaginatedResponseSchemaOrganizationMembershipRequestRetrieve = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<OrganizationMembershipRequestRetrieve>;
};

/**
 * AdditionalResourceCreateSchema
 */
export type AdditionalResourceCreateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Description
	 */
	description?: string | null;
	resource_type: ResourceTypes;
	visibility?: Visibility;
	/**
	 * Display On Organization Page
	 */
	display_on_organization_page?: boolean;
	/**
	 * Link
	 */
	link?: string | null;
	/**
	 * Text
	 */
	text?: string | null;
	/**
	 * Event Series Ids
	 */
	event_series_ids?: Array<string>;
	/**
	 * Event Ids
	 */
	event_ids?: Array<string>;
};

/**
 * AdditionalResourceUpdateSchema
 */
export type AdditionalResourceUpdateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Description
	 */
	description?: string | null;
	visibility?: Visibility | null;
	/**
	 * Display On Organization Page
	 */
	display_on_organization_page?: boolean | null;
	/**
	 * Link
	 */
	link?: string | null;
	/**
	 * Text
	 */
	text?: string | null;
	/**
	 * Event Series Ids
	 */
	event_series_ids?: Array<string> | null;
	/**
	 * Event Ids
	 */
	event_ids?: Array<string> | null;
};

/**
 * MemberUserSchema
 */
export type MemberUserSchema = {
	/**
	 * Email Address
	 */
	email?: string | null;
	/**
	 * Phone Number
	 *
	 * Phone number
	 */
	phone_number?: string | null;
	/**
	 * Preferred Name
	 *
	 * Preferred name
	 */
	preferred_name?: string | null;
	/**
	 * Pronouns
	 *
	 * Pronouns
	 */
	pronouns?: string | null;
	/**
	 * First Name
	 */
	first_name?: string | null;
	/**
	 * Last Name
	 */
	last_name?: string | null;
};

/**
 * OrganizationMemberSchema
 */
export type OrganizationMemberSchema = {
	user: MemberUserSchema;
	/**
	 * Member Since
	 */
	member_since: string;
};

/**
 * PaginatedResponseSchema[OrganizationMemberSchema]
 */
export type PaginatedResponseSchemaOrganizationMemberSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<OrganizationMemberSchema>;
};

/**
 * OrganizationStaffSchema
 */
export type OrganizationStaffSchema = {
	user: MemberUserSchema;
	/**
	 * Staff Since
	 */
	staff_since: string;
	permissions: PermissionsSchema;
};

/**
 * PaginatedResponseSchema[OrganizationStaffSchema]
 */
export type PaginatedResponseSchemaOrganizationStaffSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<OrganizationStaffSchema>;
};

/**
 * PermissionMap
 */
export type PermissionMap = {
	/**
	 * Create Event
	 */
	create_event?: boolean;
	/**
	 * Create Event Series
	 */
	create_event_series?: boolean;
	/**
	 * Edit Event Series
	 */
	edit_event_series?: boolean;
	/**
	 * Delete Event Series
	 */
	delete_event_series?: boolean;
	/**
	 * Edit Event
	 */
	edit_event?: boolean;
	/**
	 * Delete Event
	 */
	delete_event?: boolean;
	/**
	 * Open Event
	 */
	open_event?: boolean;
	/**
	 * Manage Tickets
	 */
	manage_tickets?: boolean;
	/**
	 * Close Event
	 */
	close_event?: boolean;
	/**
	 * Manage Event
	 */
	manage_event?: boolean;
	/**
	 * Check In Attendees
	 */
	check_in_attendees?: boolean;
	/**
	 * Invite To Event
	 */
	invite_to_event?: boolean;
	/**
	 * Edit Organization
	 */
	edit_organization?: boolean;
	/**
	 * Manage Members
	 */
	manage_members?: boolean;
	/**
	 * Manage Potluck
	 */
	manage_potluck?: boolean;
	/**
	 * Create Questionnaire
	 */
	create_questionnaire?: boolean;
	/**
	 * Edit Questionnaire
	 */
	edit_questionnaire?: boolean;
	/**
	 * Delete Questionnaire
	 */
	delete_questionnaire?: boolean;
	/**
	 * Evaluate Questionnaire
	 */
	evaluate_questionnaire?: boolean;
	/**
	 * Manage Membership
	 */
	manage_membership?: boolean;
};

/**
 * PermissionsSchema
 */
export type PermissionsSchema = {
	default?: PermissionMap;
	/**
	 * Event Overrides
	 */
	event_overrides?: {
		[key: string]: PermissionMap;
	};
};

/**
 * TagSchema
 */
export type TagSchema = {
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Color
	 *
	 * Hex color (e.g. #FF0099)
	 */
	color?: string | null;
	/**
	 * Icon
	 *
	 * Optional icon name
	 */
	icon?: string | null;
};

/**
 * TagUpdateSchema
 */
export type TagUpdateSchema = {
	/**
	 * Tags
	 *
	 * A list of tag names to add or remove.
	 */
	tags: Array<string>;
};

/**
 * EventFilterSchema
 */
export type EventFilterSchema = {
	/**
	 * Country
	 */
	country?: string | null;
	/**
	 * City Id
	 */
	city_id?: number | null;
	/**
	 * Organization
	 */
	organization?: string | null;
	event_type?: Types | null;
	visibility?: Visibility | null;
	/**
	 * Event Series
	 */
	event_series?: string | null;
	/**
	 * Next Events
	 */
	next_events?: boolean | null;
	/**
	 * Past Events
	 */
	past_events?: boolean | null;
	status?: Status | null;
	/**
	 * Tags
	 */
	tags?: Array<string> | null;
};

/**
 * MinimalEventSchema
 */
export type MinimalEventSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Slug
	 */
	slug: string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Start
	 */
	start?: string | null;
	/**
	 * Logo
	 */
	logo?: string | null;
};

/**
 * PaginatedResponseSchema[MinimalRevelUserSchema]
 */
export type PaginatedResponseSchemaMinimalRevelUserSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<MinimalRevelUserSchema>;
};

/**
 * EventRSVPSchema
 */
export type EventRsvpSchema = {
	/**
	 * Event Id
	 */
	event_id: string;
	status: Status;
};

/**
 * EventTicketSchema
 */
export type EventTicketSchema = {
	/**
	 * Event Id
	 */
	event_id: string | null;
	tier?: TierSchema | null;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Status
	 */
	status?: string;
	/**
	 * Checked In At
	 */
	checked_in_at?: string | null;
};

/**
 * EventUserEligibility
 */
export type EventUserEligibility = {
	/**
	 * Allowed
	 */
	allowed: boolean;
	/**
	 * Event Id
	 */
	event_id: string;
	/**
	 * Reason
	 */
	reason?: string | null;
	next_step?: NextStep | null;
	/**
	 * Questionnaires Missing
	 */
	questionnaires_missing?: Array<string> | null;
	/**
	 * Questionnaires Pending Review
	 */
	questionnaires_pending_review?: Array<string> | null;
	/**
	 * Questionnaires Failed
	 */
	questionnaires_failed?: Array<string> | null;
	/**
	 * Retry On
	 */
	retry_on?: string | null;
};

/**
 * NextStep
 */
export type NextStep =
	| 'request_invitation'
	| 'become_member'
	| 'complete_questionnaire'
	| 'wait_for_questionnaire_evaluation'
	| 'wait_to_retake_questionnaire'
	| 'wait_for_event_to_open'
	| 'join_waitlist'
	| 'purchase_ticket'
	| 'rsvp';

/**
 * EventInvitationRequestSchema
 */
export type EventInvitationRequestSchema = {
	user: MinimalRevelUserSchema;
	event: EventInListSchema;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Message
	 */
	message?: string | null;
	/**
	 * Status
	 */
	status?: string;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * EventInvitationRequestCreateSchema
 */
export type EventInvitationRequestCreateSchema = {
	/**
	 * Message
	 */
	message?: string | null;
};

/**
 * PaginatedResponseSchema[EventInvitationRequestSchema]
 */
export type PaginatedResponseSchemaEventInvitationRequestSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<EventInvitationRequestSchema>;
};

/**
 * StripeCheckoutSessionSchema
 */
export type StripeCheckoutSessionSchema = {
	/**
	 * Checkout Url
	 */
	checkout_url: string;
};

/**
 * PWYCCheckoutPayloadSchema
 *
 * Schema for Pay What You Can checkout payload.
 */
export type PwycCheckoutPayloadSchema = {
	/**
	 * Pwyc
	 *
	 * Pay what you can amount, minimum 1
	 */
	pwyc: number | string;
};

/**
 * FreeTextQuestionSchema
 */
export type FreeTextQuestionSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Question
	 */
	question: string;
	/**
	 * Is Mandatory
	 */
	is_mandatory: boolean;
	/**
	 * Order
	 */
	order: number;
};

/**
 * MultipleChoiceOptionSchema
 */
export type MultipleChoiceOptionSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Option
	 */
	option: string;
	/**
	 * Order
	 */
	order: number;
};

/**
 * MultipleChoiceQuestionSchema
 */
export type MultipleChoiceQuestionSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Question
	 */
	question: string;
	/**
	 * Is Mandatory
	 */
	is_mandatory: boolean;
	/**
	 * Order
	 */
	order: number;
	/**
	 * Allow Multiple Answers
	 */
	allow_multiple_answers: boolean;
	/**
	 * Options
	 */
	options: Array<MultipleChoiceOptionSchema>;
};

/**
 * QuestionnaireSchema
 */
export type QuestionnaireSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Multiple Choice Questions
	 */
	multiple_choice_questions?: Array<MultipleChoiceQuestionSchema>;
	/**
	 * Free Text Questions
	 */
	free_text_questions?: Array<FreeTextQuestionSchema>;
	/**
	 * Sections
	 */
	sections?: Array<SectionSchema>;
};

/**
 * SectionSchema
 */
export type SectionSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Multiple Choice Questions
	 */
	multiple_choice_questions?: Array<MultipleChoiceQuestionSchema>;
	/**
	 * Free Text Questions
	 */
	free_text_questions?: Array<FreeTextQuestionSchema>;
	/**
	 * Order
	 */
	order: number;
};

/**
 * QuestionnaireEvaluationForUserSchema
 */
export type QuestionnaireEvaluationForUserSchema = {
	submission: QuestionnaireSubmissionResponseSchema;
	/**
	 * Score
	 */
	score: number | string;
	status: QuestionnairesModelsQuestionnaireEvaluationStatus;
};

/**
 * QuestionnaireSubmissionResponseSchema
 */
export type QuestionnaireSubmissionResponseSchema = {
	/**
	 * Questionnaire Id
	 */
	questionnaire_id: string;
	status: QuestionnairesModelsQuestionnaireSubmissionStatus;
	/**
	 * Submitted At
	 */
	submitted_at: string;
};

/**
 * Status
 */
export type QuestionnairesModelsQuestionnaireEvaluationStatus =
	| 'approved'
	| 'rejected'
	| 'pending review';

/**
 * Status
 */
export type QuestionnairesModelsQuestionnaireSubmissionStatus = 'draft' | 'ready';

/**
 * FreeTextSubmissionSchema
 */
export type FreeTextSubmissionSchema = {
	/**
	 * Question Id
	 */
	question_id: string;
	/**
	 * Answer
	 */
	answer: string;
};

/**
 * MultipleChoiceSubmissionSchema
 */
export type MultipleChoiceSubmissionSchema = {
	/**
	 * Question Id
	 */
	question_id: string;
	/**
	 * Options Id
	 */
	options_id: Array<string>;
};

/**
 * QuestionnaireSubmissionSchema
 */
export type QuestionnaireSubmissionSchema = {
	/**
	 * Questionnaire Id
	 */
	questionnaire_id: string;
	/**
	 * Multiple Choice Answers
	 */
	multiple_choice_answers?: Array<MultipleChoiceSubmissionSchema>;
	/**
	 * Free Text Answers
	 */
	free_text_answers?: Array<FreeTextSubmissionSchema>;
	status: Status;
};

/**
 * EventTokenSchema
 */
export type EventTokenSchema = {
	/**
	 * Created At
	 */
	created_at: string;
	/**
	 * Updated At
	 */
	updated_at: string;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Issuer
	 */
	issuer: string;
	/**
	 * Expires At
	 */
	expires_at?: string | null;
	/**
	 * Uses
	 */
	uses?: number;
	/**
	 * Max Uses
	 *
	 * The maximum number of invites allowed for this token. 0 Means unlimited.
	 */
	max_uses?: number;
	/**
	 * Event
	 */
	event: string;
	/**
	 * Grants Invitation
	 */
	grants_invitation?: boolean;
	/**
	 * Invitation Tier
	 */
	invitation_tier?: string | null;
	/**
	 * Invitation Payload
	 *
	 * If provided, the token will we viable to claim invitations.
	 */
	invitation_payload?: {
		[key: string]: unknown;
	} | null;
};

/**
 * EventTokenUpdateSchema
 */
export type EventTokenUpdateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Max Uses
	 */
	max_uses?: number;
	invitation?: InvitationBaseSchema | null;
	/**
	 * Invitation Tier Id
	 */
	invitation_tier_id?: string | null;
	/**
	 * Expires At
	 */
	expires_at?: string | null;
};

/**
 * InvitationBaseSchema
 */
export type InvitationBaseSchema = {
	/**
	 * Waives Questionnaire
	 */
	waives_questionnaire?: boolean;
	/**
	 * Waives Purchase
	 */
	waives_purchase?: boolean;
	/**
	 * Overrides Max Attendees
	 */
	overrides_max_attendees?: boolean;
	/**
	 * Waives Membership Required
	 */
	waives_membership_required?: boolean;
	/**
	 * Waives Rsvp Deadline
	 */
	waives_rsvp_deadline?: boolean;
	/**
	 * Custom Message
	 */
	custom_message?: string | null;
};

/**
 * EventTokenFilterSchema
 */
export type EventTokenFilterSchema = {
	/**
	 * Is Active
	 */
	is_active?: boolean | null;
	/**
	 * Event Id
	 */
	event_id?: string | null;
	/**
	 * Has Invitation
	 */
	has_invitation?: boolean | null;
};

/**
 * PaginatedResponseSchema[EventTokenSchema]
 */
export type PaginatedResponseSchemaEventTokenSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<EventTokenSchema>;
};

/**
 * EventTokenCreateSchema
 */
export type EventTokenCreateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Max Uses
	 */
	max_uses?: number;
	invitation?: InvitationBaseSchema | null;
	/**
	 * Invitation Tier Id
	 */
	invitation_tier_id?: string | null;
	/**
	 * Duration
	 */
	duration?: number;
};

/**
 * EventInvitationRequestInternalSchema
 */
export type EventInvitationRequestInternalSchema = {
	user: MinimalRevelUserSchema;
	event: EventInListSchema;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Message
	 */
	message?: string | null;
	/**
	 * Status
	 */
	status?: string;
	/**
	 * Created At
	 */
	created_at: string;
	decided_by?: MinimalRevelUserSchema | null;
};

/**
 * PaginatedResponseSchema[EventInvitationRequestInternalSchema]
 */
export type PaginatedResponseSchemaEventInvitationRequestInternalSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<EventInvitationRequestInternalSchema>;
};

/**
 * EventEditSchema
 */
export type EventEditSchema = {
	/**
	 * City Id
	 */
	city_id?: number | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Description
	 */
	description?: string | null;
	event_type?: Types | null;
	status?: Status;
	visibility?: Visibility | null;
	/**
	 * Invitation Message
	 *
	 * Invitation message
	 */
	invitation_message?: string | null;
	/**
	 * Max Attendees
	 */
	max_attendees?: number;
	/**
	 * Waitlist Open
	 */
	waitlist_open?: boolean | null;
	/**
	 * Start
	 */
	start?: string | null;
	/**
	 * End
	 */
	end?: string | null;
	/**
	 * Rsvp Before
	 *
	 * RSVP deadline for events that do not require tickets
	 */
	rsvp_before?: string | null;
	/**
	 * Check In Starts At
	 *
	 * When check-in opens for this event
	 */
	check_in_starts_at?: string | null;
	/**
	 * Check In Ends At
	 *
	 * When check-in closes for this event
	 */
	check_in_ends_at?: string | null;
	/**
	 * Event Series Id
	 */
	event_series_id?: string | null;
	/**
	 * Free For Members
	 */
	free_for_members?: boolean;
	/**
	 * Free For Staff
	 */
	free_for_staff?: boolean;
	/**
	 * Requires Ticket
	 */
	requires_ticket?: boolean;
	/**
	 * Potluck Open
	 */
	potluck_open?: boolean;
};

/**
 * PaginatedResponseSchema[TicketTierDetailSchema]
 */
export type PaginatedResponseSchemaTicketTierDetailSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<TicketTierDetailSchema>;
};

/**
 * TicketTierDetailSchema
 */
export type TicketTierDetailSchema = {
	/**
	 * Event Id
	 */
	event_id: string;
	/**
	 * Total Available
	 */
	total_available?: number | null;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Visibility
	 */
	visibility?: string;
	/**
	 * Payment Method
	 */
	payment_method?: string;
	/**
	 * Purchasable By
	 */
	purchasable_by?: string;
	/**
	 * Price
	 */
	price?: number | string;
	/**
	 * Price Type
	 *
	 * Whether this tier has a fixed price or allows pay-what-you-can pricing
	 */
	price_type?: string;
	/**
	 * Pwyc Min
	 *
	 * Minimum amount for pay-what-you-can pricing
	 */
	pwyc_min?: number | string;
	/**
	 * Pwyc Max
	 *
	 * Maximum amount for pay-what-you-can pricing (optional)
	 */
	pwyc_max?: number | string | null;
	/**
	 * Currency
	 *
	 * ISO 4217 currency code
	 */
	currency?: string;
	/**
	 * Sales Start At
	 *
	 * When ticket sales begin for this tier
	 */
	sales_start_at?: string | null;
	/**
	 * Sales End At
	 *
	 * When ticket sales end for this tier
	 */
	sales_end_at?: string | null;
	/**
	 * Created At
	 */
	created_at: string;
	/**
	 * Updated At
	 */
	updated_at: string;
	/**
	 * Total Quantity
	 */
	total_quantity?: number | null;
	/**
	 * Quantity Sold
	 */
	quantity_sold?: number;
	/**
	 * Manual Payment Instructions
	 */
	manual_payment_instructions?: string | null;
};

/**
 * PaymentMethod
 */
export type PaymentMethod = 'online' | 'offline' | 'at_the_door' | 'free';

/**
 * PriceType
 */
export type PriceType = 'fixed' | 'pwyc';

/**
 * PurchasableBy
 */
export type PurchasableBy = 'public' | 'members' | 'invited' | 'invited_and_members';

/**
 * TicketTierCreateSchema
 */
export type TicketTierCreateSchema = {
	payment_method?: PaymentMethod;
	/**
	 * Price
	 */
	price?: number | string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
	visibility?: Visibility;
	purchasable_by?: PurchasableBy;
	price_type?: PriceType;
	/**
	 * Pwyc Min
	 */
	pwyc_min?: number | string;
	/**
	 * Pwyc Max
	 */
	pwyc_max?: number | string | null;
	/**
	 * Currency
	 */
	currency?: string;
	/**
	 * Sales Start At
	 */
	sales_start_at?: string | null;
	/**
	 * Sales End At
	 */
	sales_end_at?: string | null;
	/**
	 * Total Quantity
	 */
	total_quantity?: number | null;
};

/**
 * TicketTierUpdateSchema
 */
export type TicketTierUpdateSchema = {
	payment_method?: PaymentMethod;
	/**
	 * Price
	 */
	price?: number | string;
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Description
	 */
	description?: string | null;
	visibility?: Visibility | null;
	purchasable_by?: PurchasableBy | null;
	price_type?: PriceType | null;
	/**
	 * Pwyc Min
	 */
	pwyc_min?: number | string | null;
	/**
	 * Pwyc Max
	 */
	pwyc_max?: number | string | null;
	/**
	 * Currency
	 */
	currency?: string | null;
	/**
	 * Sales Start At
	 */
	sales_start_at?: string | null;
	/**
	 * Sales End At
	 */
	sales_end_at?: string | null;
	/**
	 * Total Quantity
	 */
	total_quantity?: number | null;
};

/**
 * PaginatedResponseSchema[PendingTicketSchema]
 */
export type PaginatedResponseSchemaPendingTicketSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<PendingTicketSchema>;
};

/**
 * PendingTicketSchema
 *
 * Schema for pending tickets in admin interface.
 */
export type PendingTicketSchema = {
	user: MemberUserSchema;
	tier: TierSchema;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Status
	 */
	status?: string;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * CheckInResponseSchema
 *
 * Schema for ticket check-in response.
 */
export type CheckInResponseSchema = {
	user: MinimalRevelUserSchema;
	tier?: TierSchema | null;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Status
	 */
	status?: string;
	/**
	 * Checked In At
	 */
	checked_in_at?: string | null;
};

/**
 * CheckInRequestSchema
 *
 * Schema for ticket check-in requests.
 */
export type CheckInRequestSchema = {
	/**
	 * Ticket Id
	 */
	ticket_id: string;
};

/**
 * DirectInvitationResponseSchema
 *
 * Response schema for direct invitation creation.
 */
export type DirectInvitationResponseSchema = {
	/**
	 * Created Invitations
	 *
	 * Number of EventInvitation objects created
	 */
	created_invitations: number;
	/**
	 * Pending Invitations
	 *
	 * Number of PendingEventInvitation objects created
	 */
	pending_invitations: number;
	/**
	 * Total Invited
	 *
	 * Total number of users invited
	 */
	total_invited: number;
};

/**
 * DirectInvitationCreateSchema
 *
 * Schema for creating direct invitations to events.
 */
export type DirectInvitationCreateSchema = {
	/**
	 * Waives Questionnaire
	 */
	waives_questionnaire?: boolean;
	/**
	 * Waives Purchase
	 */
	waives_purchase?: boolean;
	/**
	 * Overrides Max Attendees
	 */
	overrides_max_attendees?: boolean;
	/**
	 * Waives Membership Required
	 */
	waives_membership_required?: boolean;
	/**
	 * Waives Rsvp Deadline
	 */
	waives_rsvp_deadline?: boolean;
	/**
	 * Custom Message
	 */
	custom_message?: string | null;
	/**
	 * Emails
	 *
	 * List of email addresses to invite
	 */
	emails: Array<string>;
	/**
	 * Tier Id
	 *
	 * Ticket tier to assign to invitations
	 */
	tier_id: string;
	/**
	 * Send Notification
	 *
	 * Whether to send notification emails
	 */
	send_notification?: boolean;
};

/**
 * EventInvitationListSchema
 *
 * Schema for listing EventInvitation objects.
 */
export type EventInvitationListSchema = {
	/**
	 * Id
	 */
	id: string;
	user: MinimalRevelUserSchema;
	tier?: TierSchema | null;
	/**
	 * Waives Questionnaire
	 */
	waives_questionnaire: boolean;
	/**
	 * Waives Purchase
	 */
	waives_purchase: boolean;
	/**
	 * Overrides Max Attendees
	 */
	overrides_max_attendees: boolean;
	/**
	 * Waives Membership Required
	 */
	waives_membership_required: boolean;
	/**
	 * Waives Rsvp Deadline
	 */
	waives_rsvp_deadline: boolean;
	/**
	 * Custom Message
	 */
	custom_message?: string | null;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * PaginatedResponseSchema[EventInvitationListSchema]
 */
export type PaginatedResponseSchemaEventInvitationListSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<EventInvitationListSchema>;
};

/**
 * PaginatedResponseSchema[PendingEventInvitationListSchema]
 */
export type PaginatedResponseSchemaPendingEventInvitationListSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<PendingEventInvitationListSchema>;
};

/**
 * PendingEventInvitationListSchema
 *
 * Schema for listing PendingEventInvitation objects.
 */
export type PendingEventInvitationListSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Email
	 */
	email: string;
	tier?: TierSchema | null;
	/**
	 * Waives Questionnaire
	 */
	waives_questionnaire: boolean;
	/**
	 * Waives Purchase
	 */
	waives_purchase: boolean;
	/**
	 * Overrides Max Attendees
	 */
	overrides_max_attendees: boolean;
	/**
	 * Waives Membership Required
	 */
	waives_membership_required: boolean;
	/**
	 * Waives Rsvp Deadline
	 */
	waives_rsvp_deadline: boolean;
	/**
	 * Custom Message
	 */
	custom_message?: string | null;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * OrganizationPermissionsSchema
 */
export type OrganizationPermissionsSchema = {
	/**
	 * Organization Permissions
	 */
	organization_permissions?: {
		[key: string]: PermissionsSchema | 'owner';
	} | null;
};

/**
 * EventSeriesFilterSchema
 */
export type EventSeriesFilterSchema = {
	/**
	 * Organization
	 */
	organization?: string | null;
	/**
	 * Tags
	 */
	tags?: Array<string> | null;
};

/**
 * PaginatedResponseSchema[EventSeriesRetrieveSchema]
 */
export type PaginatedResponseSchemaEventSeriesRetrieveSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<EventSeriesRetrieveSchema>;
};

/**
 * PotluckItemRetrieveSchema
 */
export type PotluckItemRetrieveSchema = {
	/**
	 * Is Assigned
	 */
	is_assigned?: boolean;
	/**
	 * Is Owned
	 */
	is_owned?: boolean;
	/**
	 * Note Html
	 */
	note_html?: string;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Item Type
	 */
	item_type: string;
	/**
	 * Quantity
	 */
	quantity?: string | null;
	/**
	 * Note
	 */
	note?: string | null;
};

/**
 * ItemTypes
 */
export type ItemTypes =
	| 'food'
	| 'main_course'
	| 'side_dish'
	| 'dessert'
	| 'drink'
	| 'alcohol'
	| 'non_alcoholic'
	| 'supplies'
	| 'labor'
	| 'entertainment'
	| 'sexual_health'
	| 'toys'
	| 'care'
	| 'transport'
	| 'misc';

/**
 * PotluckItemCreateSchema
 */
export type PotluckItemCreateSchema = {
	item_type: ItemTypes;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Quantity
	 */
	quantity?: string | null;
	/**
	 * Note
	 */
	note?: string | null;
};

/**
 * EvaluationMode
 */
export type EvaluationMode = 'automatic' | 'manual' | 'hybrid';

/**
 * OrganizationQuestionnaireInListSchema
 */
export type OrganizationQuestionnaireInListSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Events
	 */
	events?: Array<MinimalEventSchema>;
	/**
	 * Event Series
	 */
	event_series?: Array<EventSeriesRetrieveSchema>;
	/**
	 * Max Submission Age
	 */
	max_submission_age?: number | null;
	questionnaire: QuestionnaireInListSchema;
};

/**
 * PaginatedResponseSchema[OrganizationQuestionnaireInListSchema]
 */
export type PaginatedResponseSchemaOrganizationQuestionnaireInListSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<OrganizationQuestionnaireInListSchema>;
};

/**
 * QuestionnaireInListSchema
 */
export type QuestionnaireInListSchema = {
	/**
	 * Name
	 */
	name: string;
	/**
	 * Min Score
	 */
	min_score: number | string;
	/**
	 * Shuffle Questions
	 */
	shuffle_questions?: boolean;
	/**
	 * Shuffle Sections
	 */
	shuffle_sections?: boolean;
	evaluation_mode: EvaluationMode;
	/**
	 * Id
	 */
	id: string;
};

/**
 * FreeTextQuestionCreateSchema
 *
 * Schema for creating a FreeTextQuestion.
 */
export type FreeTextQuestionCreateSchema = {
	/**
	 * Section Id
	 */
	section_id?: string | null;
	/**
	 * Question
	 */
	question: string;
	/**
	 * Is Mandatory
	 */
	is_mandatory?: boolean;
	/**
	 * Order
	 */
	order?: number;
	/**
	 * Positive Weight
	 */
	positive_weight?: number | string;
	/**
	 * Negative Weight
	 */
	negative_weight?: number | string;
	/**
	 * Is Fatal
	 */
	is_fatal?: boolean;
	/**
	 * Llm Guidelines
	 */
	llm_guidelines?: string | null;
};

/**
 * MultipleChoiceOptionCreateSchema
 *
 * Schema for creating a MultipleChoiceOption.
 */
export type MultipleChoiceOptionCreateSchema = {
	/**
	 * Option
	 */
	option: string;
	/**
	 * Is Correct
	 */
	is_correct?: boolean;
	/**
	 * Order
	 */
	order?: number;
};

/**
 * MultipleChoiceQuestionCreateSchema
 *
 * Schema for creating a MultipleChoiceQuestion.
 */
export type MultipleChoiceQuestionCreateSchema = {
	/**
	 * Section Id
	 */
	section_id?: string | null;
	/**
	 * Question
	 */
	question: string;
	/**
	 * Is Mandatory
	 */
	is_mandatory?: boolean;
	/**
	 * Order
	 */
	order?: number;
	/**
	 * Positive Weight
	 */
	positive_weight?: number | string;
	/**
	 * Negative Weight
	 */
	negative_weight?: number | string;
	/**
	 * Is Fatal
	 */
	is_fatal?: boolean;
	/**
	 * Allow Multiple Answers
	 */
	allow_multiple_answers?: boolean;
	/**
	 * Shuffle Options
	 */
	shuffle_options?: boolean;
	/**
	 * Options
	 */
	options: Array<MultipleChoiceOptionCreateSchema>;
};

/**
 * OrganizationQuestionnaireSchema
 */
export type OrganizationQuestionnaireSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Events
	 */
	events?: Array<MinimalEventSchema>;
	/**
	 * Event Series
	 */
	event_series?: Array<EventSeriesRetrieveSchema>;
	/**
	 * Max Submission Age
	 */
	max_submission_age?: number | null;
	questionnaire: QuestionnaireCreateSchema;
};

/**
 * QuestionnaireCreateSchema
 *
 * Schema for creating a new Questionnaire with its sections and questions.
 */
export type QuestionnaireCreateSchema = {
	/**
	 * Name
	 */
	name: string;
	/**
	 * Min Score
	 */
	min_score: number | string;
	/**
	 * Shuffle Questions
	 */
	shuffle_questions?: boolean;
	/**
	 * Shuffle Sections
	 */
	shuffle_sections?: boolean;
	evaluation_mode: EvaluationMode;
	/**
	 * Sections
	 */
	sections?: Array<SectionCreateSchema>;
	/**
	 * Multiplechoicequestion Questions
	 */
	multiplechoicequestion_questions?: Array<MultipleChoiceQuestionCreateSchema>;
	/**
	 * Freetextquestion Questions
	 */
	freetextquestion_questions?: Array<FreeTextQuestionCreateSchema>;
	/**
	 * Llm Guidelines
	 */
	llm_guidelines?: string | null;
	/**
	 * Can Retake After
	 */
	can_retake_after?: number | null;
};

/**
 * SectionCreateSchema
 *
 * Schema for creating a QuestionnaireSection.
 */
export type SectionCreateSchema = {
	/**
	 * Name
	 */
	name: string;
	/**
	 * Order
	 */
	order?: number;
	/**
	 * Multiplechoicequestion Questions
	 */
	multiplechoicequestion_questions?: Array<MultipleChoiceQuestionCreateSchema>;
	/**
	 * Freetextquestion Questions
	 */
	freetextquestion_questions?: Array<FreeTextQuestionCreateSchema>;
};

/**
 * SectionUpdateSchema
 *
 * Schema for updating a Section.
 */
export type SectionUpdateSchema = {
	/**
	 * Name
	 */
	name: string;
	/**
	 * Order
	 */
	order?: number;
	/**
	 * Multiplechoicequestion Questions
	 */
	multiplechoicequestion_questions?: Array<MultipleChoiceQuestionCreateSchema>;
	/**
	 * Freetextquestion Questions
	 */
	freetextquestion_questions?: Array<FreeTextQuestionCreateSchema>;
};

/**
 * MultipleChoiceQuestionUpdateSchema
 *
 * Schema for updating a MultipleChoiceQuestion.
 */
export type MultipleChoiceQuestionUpdateSchema = {
	/**
	 * Section Id
	 */
	section_id?: string | null;
	/**
	 * Question
	 */
	question: string;
	/**
	 * Is Mandatory
	 */
	is_mandatory?: boolean;
	/**
	 * Order
	 */
	order?: number;
	/**
	 * Positive Weight
	 */
	positive_weight?: number | string;
	/**
	 * Negative Weight
	 */
	negative_weight?: number | string;
	/**
	 * Is Fatal
	 */
	is_fatal?: boolean;
	/**
	 * Allow Multiple Answers
	 */
	allow_multiple_answers?: boolean;
	/**
	 * Shuffle Options
	 */
	shuffle_options?: boolean;
	/**
	 * Options
	 */
	options: Array<MultipleChoiceOptionCreateSchema>;
};

/**
 * MultipleChoiceOptionUpdateSchema
 *
 * Schema for updating a MultipleChoiceOption.
 */
export type MultipleChoiceOptionUpdateSchema = {
	/**
	 * Option
	 */
	option: string;
	/**
	 * Is Correct
	 */
	is_correct?: boolean;
	/**
	 * Order
	 */
	order?: number;
};

/**
 * FreeTextQuestionUpdateSchema
 *
 * Schema for updating a FreeTextQuestion.
 */
export type FreeTextQuestionUpdateSchema = {
	/**
	 * Section Id
	 */
	section_id?: string | null;
	/**
	 * Question
	 */
	question: string;
	/**
	 * Is Mandatory
	 */
	is_mandatory?: boolean;
	/**
	 * Order
	 */
	order?: number;
	/**
	 * Positive Weight
	 */
	positive_weight?: number | string;
	/**
	 * Negative Weight
	 */
	negative_weight?: number | string;
	/**
	 * Is Fatal
	 */
	is_fatal?: boolean;
	/**
	 * Llm Guidelines
	 */
	llm_guidelines?: string | null;
};

/**
 * PaginatedResponseSchema[SubmissionListItemSchema]
 */
export type PaginatedResponseSchemaSubmissionListItemSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<SubmissionListItemSchema>;
};

/**
 * SubmissionListItemSchema
 *
 * Schema for listing submissions for organization staff.
 */
export type SubmissionListItemSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * User Email
	 */
	user_email: string;
	/**
	 * User Name
	 */
	user_name: string;
	/**
	 * Questionnaire Name
	 */
	questionnaire_name: string;
	evaluation_status?: Status | null;
	/**
	 * Evaluation Score
	 */
	evaluation_score?: number | string | null;
	/**
	 * Status
	 *
	 * The status of the submission.
	 */
	status?: string;
	/**
	 * Submitted At
	 */
	submitted_at?: string | null;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * EvaluationResponseSchema
 *
 * Schema for evaluation response.
 */
export type EvaluationResponseSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Submission Id
	 */
	submission_id: string;
	status: Status;
	/**
	 * Score
	 */
	score: number | string | null;
	/**
	 * Comments
	 */
	comments: string | null;
	/**
	 * Evaluator Id
	 */
	evaluator_id: string | null;
	/**
	 * Created At
	 */
	created_at: string;
	/**
	 * Updated At
	 */
	updated_at: string;
};

/**
 * QuestionAnswerDetailSchema
 *
 * Schema for question and answer details.
 */
export type QuestionAnswerDetailSchema = {
	/**
	 * Question Id
	 */
	question_id: string;
	/**
	 * Question Text
	 */
	question_text: string;
	/**
	 * Question Type
	 */
	question_type: string;
	/**
	 * Answer Content
	 */
	answer_content: {
		[key: string]: unknown;
	};
};

/**
 * SubmissionDetailSchema
 *
 * Schema for detailed view of a submission.
 */
export type SubmissionDetailSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * User Email
	 */
	user_email: string;
	/**
	 * User Name
	 */
	user_name: string;
	questionnaire: QuestionnaireInListSchema;
	status: QuestionnairesModelsQuestionnaireSubmissionStatus;
	/**
	 * Submitted At
	 */
	submitted_at: string | null;
	evaluation?: EvaluationResponseSchema | null;
	/**
	 * Answers
	 */
	answers: Array<QuestionAnswerDetailSchema>;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * EvaluationCreateSchema
 *
 * Schema for creating/updating an evaluation.
 */
export type EvaluationCreateSchema = {
	status: Status;
	/**
	 * Score
	 */
	score?: number | string | null;
	/**
	 * Comments
	 */
	comments?: string | null;
};

/**
 * GeneralUserPreferencesSchema
 */
export type GeneralUserPreferencesSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	city?: CitySchema | null;
};

/**
 * VisibilityPreference
 */
export type VisibilityPreference = 'always' | 'never' | 'to_members' | 'to_invitees' | 'to_both';

/**
 * GeneralUserPreferencesUpdateSchema
 */
export type GeneralUserPreferencesUpdateSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * City Id
	 */
	city_id?: number | null;
};

/**
 * UserOrganizationPreferencesSchema
 */
export type UserOrganizationPreferencesSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * Is Subscribed
	 */
	is_subscribed: boolean;
	/**
	 * Notify On New Events
	 */
	notify_on_new_events: boolean;
};

/**
 * UserOrganizationPreferencesUpdateSchema
 */
export type UserOrganizationPreferencesUpdateSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * Is Subscribed
	 */
	is_subscribed?: boolean;
	/**
	 * Notify On New Events
	 */
	notify_on_new_events?: boolean;
};

/**
 * UserEventSeriesPreferencesSchema
 */
export type UserEventSeriesPreferencesSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * Is Subscribed
	 */
	is_subscribed: boolean;
	/**
	 * Notify On New Events
	 */
	notify_on_new_events: boolean;
};

/**
 * UserEventSeriesPreferencesUpdateSchema
 */
export type UserEventSeriesPreferencesUpdateSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * Is Subscribed
	 */
	is_subscribed?: boolean;
	/**
	 * Notify On New Events
	 */
	notify_on_new_events?: boolean;
};

/**
 * UserEventPreferencesSchema
 */
export type UserEventPreferencesSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * Is Subscribed
	 */
	is_subscribed: boolean;
	/**
	 * Notify On Potluck Updates
	 */
	notify_on_potluck_updates: boolean;
};

/**
 * UserEventPreferencesUpdateSchema
 */
export type UserEventPreferencesUpdateSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * Is Subscribed
	 */
	is_subscribed?: boolean;
	/**
	 * Notify On Potluck Updates
	 */
	notify_on_potluck_updates?: boolean;
};

/**
 * PaginatedResponseSchema[TagSchema]
 */
export type PaginatedResponseSchemaTagSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<TagSchema>;
};

/**
 * CityFilterSchema
 */
export type CityFilterSchema = {
	/**
	 * Country
	 */
	country?: string | null;
};

/**
 * PaginatedResponseSchema[CitySchema]
 */
export type PaginatedResponseSchemaCitySchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<CitySchema>;
};

export type ApiApiVersionData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/version';
};

export type ApiApiVersionResponses = {
	/**
	 * OK
	 */
	200: VersionResponse;
};

export type ApiApiVersionResponse = ApiApiVersionResponses[keyof ApiApiVersionResponses];

export type ApiApiHealthcheckData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/healthcheck';
};

export type ApiApiHealthcheckResponses = {
	/**
	 * OK
	 */
	200: ResponseOk;
};

export type ApiApiHealthcheckResponse =
	ApiApiHealthcheckResponses[keyof ApiApiHealthcheckResponses];

export type AuthObtainToken88D8C7F5Data = {
	body: TokenObtainPairInputSchema;
	path?: never;
	query?: never;
	url: '/api/auth/token/pair';
};

export type AuthObtainToken88D8C7F5Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: TokenObtainPairOutputSchema | TempToken;
};

export type AuthObtainToken88D8C7F5Response =
	AuthObtainToken88D8C7F5Responses[keyof AuthObtainToken88D8C7F5Responses];

export type TokenRefreshData = {
	body: TokenRefreshInputSchema;
	path?: never;
	query?: never;
	url: '/api/auth/refresh';
};

export type TokenRefreshResponses = {
	/**
	 * OK
	 */
	200: TokenRefreshOutputSchema;
};

export type TokenRefreshResponse = TokenRefreshResponses[keyof TokenRefreshResponses];

export type AuthDemoObtainTokenCe9F63A9Data = {
	body: DemoLoginSchema;
	path?: never;
	query?: never;
	url: '/api/auth/demo/token/pair';
};

export type AuthDemoObtainTokenCe9F63A9Responses = {
	/**
	 * OK
	 */
	200: TokenObtainPairOutputSchema;
};

export type AuthDemoObtainTokenCe9F63A9Response =
	AuthDemoObtainTokenCe9F63A9Responses[keyof AuthDemoObtainTokenCe9F63A9Responses];

export type AuthObtainTokenWithOtpCa173D18Data = {
	body: TempTokenWithTotp;
	path?: never;
	query?: never;
	url: '/api/auth/token/pair/otp';
};

export type AuthObtainTokenWithOtpCa173D18Responses = {
	/**
	 * OK
	 */
	200: TokenObtainPairOutputSchema;
};

export type AuthObtainTokenWithOtpCa173D18Response =
	AuthObtainTokenWithOtpCa173D18Responses[keyof AuthObtainTokenWithOtpCa173D18Responses];

export type AuthGoogleLogin751C7778Data = {
	body: GoogleIdTokenSchema;
	path?: never;
	query?: never;
	url: '/api/auth/google/login';
};

export type AuthGoogleLogin751C7778Responses = {
	/**
	 * OK
	 */
	200: TokenObtainPairOutputSchema;
};

export type AuthGoogleLogin751C7778Response =
	AuthGoogleLogin751C7778Responses[keyof AuthGoogleLogin751C7778Responses];

export type OtpSetupOtp50C46262Data = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/otp/setup';
};

export type OtpSetupOtp50C46262Responses = {
	/**
	 * OK
	 */
	200: TotpProvisioningUriSchema;
};

export type OtpSetupOtp50C46262Response =
	OtpSetupOtp50C46262Responses[keyof OtpSetupOtp50C46262Responses];

export type OtpEnableOtp421A36AbData = {
	body: OtpVerifySchema;
	path?: never;
	query?: never;
	url: '/api/otp/verify';
};

export type OtpEnableOtp421A36AbResponses = {
	/**
	 * OK
	 */
	200: RevelUserSchema;
};

export type OtpEnableOtp421A36AbResponse =
	OtpEnableOtp421A36AbResponses[keyof OtpEnableOtp421A36AbResponses];

export type OtpDisableOtp90Ac408eData = {
	body: OtpVerifySchema;
	path?: never;
	query?: never;
	url: '/api/otp/disable';
};

export type OtpDisableOtp90Ac408eResponses = {
	/**
	 * OK
	 */
	200: RevelUserSchema;
};

export type OtpDisableOtp90Ac408eResponse =
	OtpDisableOtp90Ac408eResponses[keyof OtpDisableOtp90Ac408eResponses];

export type AccountExportData61D5Dc17Data = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/account/export-data';
};

export type AccountExportData61D5Dc17Responses = {
	/**
	 * OK
	 */
	200: ResponseMessage;
};

export type AccountExportData61D5Dc17Response =
	AccountExportData61D5Dc17Responses[keyof AccountExportData61D5Dc17Responses];

export type AccountMe0E4E4784Data = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/account/me';
};

export type AccountMe0E4E4784Responses = {
	/**
	 * OK
	 */
	200: RevelUserSchema;
};

export type AccountMe0E4E4784Response =
	AccountMe0E4E4784Responses[keyof AccountMe0E4E4784Responses];

export type AccountUpdateProfile646B0Fb3Data = {
	body: ProfileUpdateSchema;
	path?: never;
	query?: never;
	url: '/api/account/me';
};

export type AccountUpdateProfile646B0Fb3Responses = {
	/**
	 * OK
	 */
	200: RevelUserSchema;
};

export type AccountUpdateProfile646B0Fb3Response =
	AccountUpdateProfile646B0Fb3Responses[keyof AccountUpdateProfile646B0Fb3Responses];

export type AccountRegisterCed95Cc4Data = {
	body: RegisterUserSchema;
	path?: never;
	query?: never;
	url: '/api/account/register';
};

export type AccountRegisterCed95Cc4Responses = {
	/**
	 * Created
	 */
	201: RevelUserSchema;
};

export type AccountRegisterCed95Cc4Response =
	AccountRegisterCed95Cc4Responses[keyof AccountRegisterCed95Cc4Responses];

export type AccountVerifyEmail7D56Cf04Data = {
	body: VerifyEmailSchema;
	path?: never;
	query?: never;
	url: '/api/account/verify';
};

export type AccountVerifyEmail7D56Cf04Responses = {
	/**
	 * OK
	 */
	200: VerifyEmailResponseSchema;
};

export type AccountVerifyEmail7D56Cf04Response =
	AccountVerifyEmail7D56Cf04Responses[keyof AccountVerifyEmail7D56Cf04Responses];

export type AccountResendVerificationEmailC633D16dData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/account/verify-resend';
};

export type AccountResendVerificationEmailC633D16dErrors = {
	/**
	 * Bad Request
	 */
	400: ResponseMessage;
};

export type AccountResendVerificationEmailC633D16dError =
	AccountResendVerificationEmailC633D16dErrors[keyof AccountResendVerificationEmailC633D16dErrors];

export type AccountResendVerificationEmailC633D16dResponses = {
	/**
	 * OK
	 */
	200: ResponseMessage;
};

export type AccountResendVerificationEmailC633D16dResponse =
	AccountResendVerificationEmailC633D16dResponses[keyof AccountResendVerificationEmailC633D16dResponses];

export type AccountDeleteAccountRequestCd42D2B8Data = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/account/delete-request';
};

export type AccountDeleteAccountRequestCd42D2B8Responses = {
	/**
	 * OK
	 */
	200: ResponseMessage;
};

export type AccountDeleteAccountRequestCd42D2B8Response =
	AccountDeleteAccountRequestCd42D2B8Responses[keyof AccountDeleteAccountRequestCd42D2B8Responses];

export type AccountDeleteAccountConfirm3Ec44C55Data = {
	body: DeleteAccountConfirmSchema;
	path?: never;
	query?: never;
	url: '/api/account/delete-confirm';
};

export type AccountDeleteAccountConfirm3Ec44C55Responses = {
	/**
	 * OK
	 */
	200: ResponseMessage;
};

export type AccountDeleteAccountConfirm3Ec44C55Response =
	AccountDeleteAccountConfirm3Ec44C55Responses[keyof AccountDeleteAccountConfirm3Ec44C55Responses];

export type AccountResetPasswordRequestA2549D65Data = {
	body: PasswordResetRequestSchema;
	path?: never;
	query?: never;
	url: '/api/account/password/reset-request';
};

export type AccountResetPasswordRequestA2549D65Responses = {
	/**
	 * OK
	 */
	200: ResponseMessage;
};

export type AccountResetPasswordRequestA2549D65Response =
	AccountResetPasswordRequestA2549D65Responses[keyof AccountResetPasswordRequestA2549D65Responses];

export type AccountResetPassword25F8Cca4Data = {
	body: PasswordResetSchema;
	path?: never;
	query?: never;
	url: '/api/account/password/reset';
};

export type AccountResetPassword25F8Cca4Responses = {
	/**
	 * OK
	 */
	200: ResponseMessage;
};

export type AccountResetPassword25F8Cca4Response =
	AccountResetPassword25F8Cca4Responses[keyof AccountResetPassword25F8Cca4Responses];

export type DashboardDashboardOrganizationsC27D0B58Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Owner
		 */
		owner?: boolean;
		/**
		 * Staff
		 */
		staff?: boolean;
		/**
		 * Member
		 */
		member?: boolean;
		/**
		 * Subscriber
		 */
		subscriber?: boolean;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/dashboard/organizations';
};

export type DashboardDashboardOrganizationsC27D0B58Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationRetrieveSchema;
};

export type DashboardDashboardOrganizationsC27D0B58Response =
	DashboardDashboardOrganizationsC27D0B58Responses[keyof DashboardDashboardOrganizationsC27D0B58Responses];

export type DashboardDashboardEvents08Dd8Bf1Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Owner
		 */
		owner?: boolean;
		/**
		 * Staff
		 */
		staff?: boolean;
		/**
		 * Member
		 */
		member?: boolean;
		/**
		 * Rsvp Yes
		 */
		rsvp_yes?: boolean;
		/**
		 * Rsvp No
		 */
		rsvp_no?: boolean;
		/**
		 * Rsvp Maybe
		 */
		rsvp_maybe?: boolean;
		/**
		 * Got Ticket
		 */
		got_ticket?: boolean;
		/**
		 * Got Invitation
		 */
		got_invitation?: boolean;
		/**
		 * Subscriber
		 */
		subscriber?: boolean;
		/**
		 * Order By
		 */
		order_by?: 'start' | '-start';
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/dashboard/events';
};

export type DashboardDashboardEvents08Dd8Bf1Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventInListSchema;
};

export type DashboardDashboardEvents08Dd8Bf1Response =
	DashboardDashboardEvents08Dd8Bf1Responses[keyof DashboardDashboardEvents08Dd8Bf1Responses];

export type DashboardDashboardEventSeries9A47A57aData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Owner
		 */
		owner?: boolean;
		/**
		 * Staff
		 */
		staff?: boolean;
		/**
		 * Member
		 */
		member?: boolean;
		/**
		 * Subscriber
		 */
		subscriber?: boolean;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/dashboard/event_series';
};

export type DashboardDashboardEventSeries9A47A57aResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationRetrieveSchema;
};

export type DashboardDashboardEventSeries9A47A57aResponse =
	DashboardDashboardEventSeries9A47A57aResponses[keyof DashboardDashboardEventSeries9A47A57aResponses];

export type DashboardDashboardInvitations1Aa8078bData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/dashboard/invitations';
};

export type DashboardDashboardInvitations1Aa8078bResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaInvitationSchema;
};

export type DashboardDashboardInvitations1Aa8078bResponse =
	DashboardDashboardInvitations1Aa8078bResponses[keyof DashboardDashboardInvitations1Aa8078bResponses];

export type OrganizationListOrganizations39Bc570aData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Country
		 */
		country?: string | null;
		/**
		 * City Id
		 */
		city_id?: number | null;
		/**
		 * Tags
		 */
		tags?: Array<string> | null;
		/**
		 * Order By
		 */
		order_by?: 'name' | '-name' | 'distance';
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organizations/';
};

export type OrganizationListOrganizations39Bc570aResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationRetrieveSchema;
};

export type OrganizationListOrganizations39Bc570aResponse =
	OrganizationListOrganizations39Bc570aResponses[keyof OrganizationListOrganizations39Bc570aResponses];

export type OrganizationGetOrganizationB1Bdf28fData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organizations/{slug}';
};

export type OrganizationGetOrganizationB1Bdf28fResponses = {
	/**
	 * OK
	 */
	200: OrganizationRetrieveSchema;
};

export type OrganizationGetOrganizationB1Bdf28fResponse =
	OrganizationGetOrganizationB1Bdf28fResponses[keyof OrganizationGetOrganizationB1Bdf28fResponses];

export type OrganizationListResources4F36D92aData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		resource_type?: ResourceTypes | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organizations/{slug}/resources';
};

export type OrganizationListResources4F36D92aResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaAdditionalResourceSchema;
};

export type OrganizationListResources4F36D92aResponse =
	OrganizationListResources4F36D92aResponses[keyof OrganizationListResources4F36D92aResponses];

export type OrganizationCreateMembershipRequestF6664B2bData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organizations/{slug}/membership-requests';
};

export type OrganizationCreateMembershipRequestF6664B2bResponses = {
	/**
	 * OK
	 */
	200: OrganizationMembershipRequestRetrieve;
};

export type OrganizationCreateMembershipRequestF6664B2bResponse =
	OrganizationCreateMembershipRequestF6664B2bResponses[keyof OrganizationCreateMembershipRequestF6664B2bResponses];

export type OrganizationClaimInvitation97C5F629Data = {
	body?: never;
	path: {
		/**
		 * Token
		 */
		token: string;
	};
	query?: never;
	url: '/api/organizations/claim-invitation/{token}';
};

export type OrganizationClaimInvitation97C5F629Errors = {
	/**
	 * Bad Request
	 */
	400: ResponseMessage;
};

export type OrganizationClaimInvitation97C5F629Error =
	OrganizationClaimInvitation97C5F629Errors[keyof OrganizationClaimInvitation97C5F629Errors];

export type OrganizationClaimInvitation97C5F629Responses = {
	/**
	 * OK
	 */
	200: OrganizationRetrieveSchema;
};

export type OrganizationClaimInvitation97C5F629Response =
	OrganizationClaimInvitation97C5F629Responses[keyof OrganizationClaimInvitation97C5F629Responses];

export type OrganizationadminUpdateOrganizationD8Ebbd83Data = {
	body: OrganizationEditSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}';
};

export type OrganizationadminUpdateOrganizationD8Ebbd83Responses = {
	/**
	 * OK
	 */
	200: OrganizationRetrieveSchema;
};

export type OrganizationadminUpdateOrganizationD8Ebbd83Response =
	OrganizationadminUpdateOrganizationD8Ebbd83Responses[keyof OrganizationadminUpdateOrganizationD8Ebbd83Responses];

export type OrganizationadminStripeConnectA9390AacData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/stripe/connect';
};

export type OrganizationadminStripeConnectA9390AacResponses = {
	/**
	 * OK
	 */
	200: StripeOnboardingLinkSchema;
};

export type OrganizationadminStripeConnectA9390AacResponse =
	OrganizationadminStripeConnectA9390AacResponses[keyof OrganizationadminStripeConnectA9390AacResponses];

export type OrganizationadminStripeAccountVerifyBe5Cfaa4Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/stripe/account/verify';
};

export type OrganizationadminStripeAccountVerifyBe5Cfaa4Responses = {
	/**
	 * OK
	 */
	200: StripeAccountStatusSchema;
};

export type OrganizationadminStripeAccountVerifyBe5Cfaa4Response =
	OrganizationadminStripeAccountVerifyBe5Cfaa4Responses[keyof OrganizationadminStripeAccountVerifyBe5Cfaa4Responses];

export type OrganizationadminUploadLogoE330AaeeData = {
	/**
	 * FileParams
	 */
	body: {
		/**
		 * Logo
		 */
		logo: Blob | File;
	};
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/upload-logo';
};

export type OrganizationadminUploadLogoE330AaeeResponses = {
	/**
	 * OK
	 */
	200: OrganizationRetrieveSchema;
};

export type OrganizationadminUploadLogoE330AaeeResponse =
	OrganizationadminUploadLogoE330AaeeResponses[keyof OrganizationadminUploadLogoE330AaeeResponses];

export type OrganizationadminUploadCoverArtA349A7C2Data = {
	/**
	 * FileParams
	 */
	body: {
		/**
		 * Cover Art
		 */
		cover_art: Blob | File;
	};
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/upload-cover-art';
};

export type OrganizationadminUploadCoverArtA349A7C2Responses = {
	/**
	 * OK
	 */
	200: OrganizationRetrieveSchema;
};

export type OrganizationadminUploadCoverArtA349A7C2Response =
	OrganizationadminUploadCoverArtA349A7C2Responses[keyof OrganizationadminUploadCoverArtA349A7C2Responses];

export type OrganizationadminCreateEventSeries471F7A66Data = {
	body: EventSeriesEditSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/create-event-series';
};

export type OrganizationadminCreateEventSeries471F7A66Errors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type OrganizationadminCreateEventSeries471F7A66Error =
	OrganizationadminCreateEventSeries471F7A66Errors[keyof OrganizationadminCreateEventSeries471F7A66Errors];

export type OrganizationadminCreateEventSeries471F7A66Responses = {
	/**
	 * OK
	 */
	200: EventSeriesRetrieveSchema;
};

export type OrganizationadminCreateEventSeries471F7A66Response =
	OrganizationadminCreateEventSeries471F7A66Responses[keyof OrganizationadminCreateEventSeries471F7A66Responses];

export type OrganizationadminCreateEvent0C815A46Data = {
	body: EventCreateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/create-event';
};

export type OrganizationadminCreateEvent0C815A46Errors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type OrganizationadminCreateEvent0C815A46Error =
	OrganizationadminCreateEvent0C815A46Errors[keyof OrganizationadminCreateEvent0C815A46Errors];

export type OrganizationadminCreateEvent0C815A46Responses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type OrganizationadminCreateEvent0C815A46Response =
	OrganizationadminCreateEvent0C815A46Responses[keyof OrganizationadminCreateEvent0C815A46Responses];

export type OrganizationadminListOrganizationTokensBa5Ac21cData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		/**
		 * Is Active
		 */
		is_active?: boolean | null;
		/**
		 * Organization Id
		 */
		organization_id?: string | null;
		/**
		 * Membership Pass
		 */
		membership_pass?: boolean | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organization-admin/{slug}/tokens';
};

export type OrganizationadminListOrganizationTokensBa5Ac21cResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationTokenSchema;
};

export type OrganizationadminListOrganizationTokensBa5Ac21cResponse =
	OrganizationadminListOrganizationTokensBa5Ac21cResponses[keyof OrganizationadminListOrganizationTokensBa5Ac21cResponses];

export type OrganizationadminCreateOrganizationToken3463F232Data = {
	body: OrganizationTokenCreateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/token';
};

export type OrganizationadminCreateOrganizationToken3463F232Responses = {
	/**
	 * OK
	 */
	200: OrganizationTokenSchema;
};

export type OrganizationadminCreateOrganizationToken3463F232Response =
	OrganizationadminCreateOrganizationToken3463F232Responses[keyof OrganizationadminCreateOrganizationToken3463F232Responses];

export type OrganizationadminDeleteOrganizationToken9C4Dffc2Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Token Id
		 */
		token_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/token/{token_id}';
};

export type OrganizationadminDeleteOrganizationToken9C4Dffc2Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminDeleteOrganizationToken9C4Dffc2Response =
	OrganizationadminDeleteOrganizationToken9C4Dffc2Responses[keyof OrganizationadminDeleteOrganizationToken9C4Dffc2Responses];

export type OrganizationadminUpdateOrganizationToken358F2C65Data = {
	body: OrganizationTokenUpdateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Token Id
		 */
		token_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/token/{token_id}';
};

export type OrganizationadminUpdateOrganizationToken358F2C65Responses = {
	/**
	 * OK
	 */
	200: OrganizationTokenSchema;
};

export type OrganizationadminUpdateOrganizationToken358F2C65Response =
	OrganizationadminUpdateOrganizationToken358F2C65Responses[keyof OrganizationadminUpdateOrganizationToken358F2C65Responses];

export type OrganizationadminListMembershipRequests340Fb1FbData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organization-admin/{slug}/membership-requests';
};

export type OrganizationadminListMembershipRequests340Fb1FbResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationMembershipRequestRetrieve;
};

export type OrganizationadminListMembershipRequests340Fb1FbResponse =
	OrganizationadminListMembershipRequests340Fb1FbResponses[keyof OrganizationadminListMembershipRequests340Fb1FbResponses];

export type OrganizationadminApproveMembershipRequest306C8D92Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Request Id
		 */
		request_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/membership-requests/{request_id}/approve';
};

export type OrganizationadminApproveMembershipRequest306C8D92Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminApproveMembershipRequest306C8D92Response =
	OrganizationadminApproveMembershipRequest306C8D92Responses[keyof OrganizationadminApproveMembershipRequest306C8D92Responses];

export type OrganizationadminRejectMembershipRequestBd9D3705Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Request Id
		 */
		request_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/membership-requests/{request_id}/reject';
};

export type OrganizationadminRejectMembershipRequestBd9D3705Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminRejectMembershipRequestBd9D3705Response =
	OrganizationadminRejectMembershipRequestBd9D3705Responses[keyof OrganizationadminRejectMembershipRequestBd9D3705Responses];

export type OrganizationadminListResources3C6199E4Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		resource_type?: ResourceTypes | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organization-admin/{slug}/resources';
};

export type OrganizationadminListResources3C6199E4Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaAdditionalResourceSchema;
};

export type OrganizationadminListResources3C6199E4Response =
	OrganizationadminListResources3C6199E4Responses[keyof OrganizationadminListResources3C6199E4Responses];

export type OrganizationadminCreateResourceE9148114Data = {
	body: AdditionalResourceCreateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		/**
		 * File
		 */
		file?: Blob | File | null;
	};
	url: '/api/organization-admin/{slug}/resources';
};

export type OrganizationadminCreateResourceE9148114Responses = {
	/**
	 * OK
	 */
	200: AdditionalResourceSchema;
};

export type OrganizationadminCreateResourceE9148114Response =
	OrganizationadminCreateResourceE9148114Responses[keyof OrganizationadminCreateResourceE9148114Responses];

export type OrganizationadminDeleteResource34F0Fbb3Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Resource Id
		 */
		resource_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/resources/{resource_id}';
};

export type OrganizationadminDeleteResource34F0Fbb3Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminDeleteResource34F0Fbb3Response =
	OrganizationadminDeleteResource34F0Fbb3Responses[keyof OrganizationadminDeleteResource34F0Fbb3Responses];

export type OrganizationadminGetResource2E271879Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Resource Id
		 */
		resource_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/resources/{resource_id}';
};

export type OrganizationadminGetResource2E271879Responses = {
	/**
	 * OK
	 */
	200: AdditionalResourceSchema;
};

export type OrganizationadminGetResource2E271879Response =
	OrganizationadminGetResource2E271879Responses[keyof OrganizationadminGetResource2E271879Responses];

export type OrganizationadminUpdateResource7573B58eData = {
	body: AdditionalResourceUpdateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Resource Id
		 */
		resource_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/resources/{resource_id}';
};

export type OrganizationadminUpdateResource7573B58eResponses = {
	/**
	 * OK
	 */
	200: AdditionalResourceSchema;
};

export type OrganizationadminUpdateResource7573B58eResponse =
	OrganizationadminUpdateResource7573B58eResponses[keyof OrganizationadminUpdateResource7573B58eResponses];

export type OrganizationadminListMembers68E47136Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organization-admin/{slug}/members';
};

export type OrganizationadminListMembers68E47136Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationMemberSchema;
};

export type OrganizationadminListMembers68E47136Response =
	OrganizationadminListMembers68E47136Responses[keyof OrganizationadminListMembers68E47136Responses];

export type OrganizationadminRemoveMember33576875Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * User Id
		 */
		user_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/members/{user_id}';
};

export type OrganizationadminRemoveMember33576875Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminRemoveMember33576875Response =
	OrganizationadminRemoveMember33576875Responses[keyof OrganizationadminRemoveMember33576875Responses];

export type OrganizationadminListStaff52826168Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organization-admin/{slug}/staff';
};

export type OrganizationadminListStaff52826168Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationStaffSchema;
};

export type OrganizationadminListStaff52826168Response =
	OrganizationadminListStaff52826168Responses[keyof OrganizationadminListStaff52826168Responses];

export type OrganizationadminRemoveStaffB502E5BfData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * User Id
		 */
		user_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/staff/{user_id}';
};

export type OrganizationadminRemoveStaffB502E5BfResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminRemoveStaffB502E5BfResponse =
	OrganizationadminRemoveStaffB502E5BfResponses[keyof OrganizationadminRemoveStaffB502E5BfResponses];

export type OrganizationadminAddStaff36D9B48aData = {
	body?: PermissionsSchema | null;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * User Id
		 */
		user_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/staff/{user_id}';
};

export type OrganizationadminAddStaff36D9B48aResponses = {
	/**
	 * Created
	 */
	201: OrganizationStaffSchema;
};

export type OrganizationadminAddStaff36D9B48aResponse =
	OrganizationadminAddStaff36D9B48aResponses[keyof OrganizationadminAddStaff36D9B48aResponses];

export type OrganizationadminUpdateStaffPermissionsAb20B4B3Data = {
	body: PermissionsSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * User Id
		 */
		user_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/staff/{user_id}/permissions';
};

export type OrganizationadminUpdateStaffPermissionsAb20B4B3Responses = {
	/**
	 * OK
	 */
	200: OrganizationStaffSchema;
};

export type OrganizationadminUpdateStaffPermissionsAb20B4B3Response =
	OrganizationadminUpdateStaffPermissionsAb20B4B3Responses[keyof OrganizationadminUpdateStaffPermissionsAb20B4B3Responses];

export type OrganizationadminClearTagsE5Efa5CcData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/tags';
};

export type OrganizationadminClearTagsE5Efa5CcResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminClearTagsE5Efa5CcResponse =
	OrganizationadminClearTagsE5Efa5CcResponses[keyof OrganizationadminClearTagsE5Efa5CcResponses];

export type OrganizationadminAddTags825597D0Data = {
	body: TagUpdateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/tags';
};

export type OrganizationadminAddTags825597D0Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TagSchema>;
};

export type OrganizationadminAddTags825597D0Response =
	OrganizationadminAddTags825597D0Responses[keyof OrganizationadminAddTags825597D0Responses];

export type OrganizationadminRemoveTags6D398848Data = {
	body: TagUpdateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/tags/remove';
};

export type OrganizationadminRemoveTags6D398848Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TagSchema>;
};

export type OrganizationadminRemoveTags6D398848Response =
	OrganizationadminRemoveTags6D398848Responses[keyof OrganizationadminRemoveTags6D398848Responses];

export type EventListEventsDacbb89bData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Country
		 */
		country?: string | null;
		/**
		 * City Id
		 */
		city_id?: number | null;
		/**
		 * Organization
		 */
		organization?: string | null;
		event_type?: Types | null;
		visibility?: Visibility | null;
		/**
		 * Event Series
		 */
		event_series?: string | null;
		/**
		 * Next Events
		 */
		next_events?: boolean | null;
		/**
		 * Past Events
		 */
		past_events?: boolean | null;
		status?: Status | null;
		/**
		 * Tags
		 */
		tags?: Array<string> | null;
		/**
		 * Order By
		 */
		order_by?: 'start' | '-start' | 'distance';
		/**
		 * Include Past
		 */
		include_past?: boolean;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/events/';
};

export type EventListEventsDacbb89bResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventInListSchema;
};

export type EventListEventsDacbb89bResponse =
	EventListEventsDacbb89bResponses[keyof EventListEventsDacbb89bResponses];

export type EventClaimInvitation3213126eData = {
	body?: never;
	path: {
		/**
		 * Token
		 */
		token: string;
	};
	query?: never;
	url: '/api/events/claim-invitation/{token}';
};

export type EventClaimInvitation3213126eErrors = {
	/**
	 * Bad Request
	 */
	400: ResponseMessage;
};

export type EventClaimInvitation3213126eError =
	EventClaimInvitation3213126eErrors[keyof EventClaimInvitation3213126eErrors];

export type EventClaimInvitation3213126eResponses = {
	/**
	 * OK
	 */
	200: MinimalEventSchema;
};

export type EventClaimInvitation3213126eResponse =
	EventClaimInvitation3213126eResponses[keyof EventClaimInvitation3213126eResponses];

export type EventGetEventAttendees4Fc0538dData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/events/{event_id}/attendee-list';
};

export type EventGetEventAttendees4Fc0538dResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaMinimalRevelUserSchema;
};

export type EventGetEventAttendees4Fc0538dResponse =
	EventGetEventAttendees4Fc0538dResponses[keyof EventGetEventAttendees4Fc0538dResponses];

export type EventGetMyEventStatusEb40C7DfData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/my-status';
};

export type EventGetMyEventStatusEb40C7DfResponses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: EventRsvpSchema | EventTicketSchema | EventUserEligibility;
};

export type EventGetMyEventStatusEb40C7DfResponse =
	EventGetMyEventStatusEb40C7DfResponses[keyof EventGetMyEventStatusEb40C7DfResponses];

export type EventRequestInvitation53F83351Data = {
	body: EventInvitationRequestCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/request-invitation';
};

export type EventRequestInvitation53F83351Errors = {
	/**
	 * Bad Request
	 */
	400: ResponseMessage;
};

export type EventRequestInvitation53F83351Error =
	EventRequestInvitation53F83351Errors[keyof EventRequestInvitation53F83351Errors];

export type EventRequestInvitation53F83351Responses = {
	/**
	 * Created
	 */
	201: EventInvitationRequestSchema;
};

export type EventRequestInvitation53F83351Response =
	EventRequestInvitation53F83351Responses[keyof EventRequestInvitation53F83351Responses];

export type EventListResources0Ec9D2B7Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		resource_type?: ResourceTypes | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/events/{event_id}/resources';
};

export type EventListResources0Ec9D2B7Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaAdditionalResourceSchema;
};

export type EventListResources0Ec9D2B7Response =
	EventListResources0Ec9D2B7Responses[keyof EventListResources0Ec9D2B7Responses];

export type EventDeleteInvitationRequest50F3Ed50Data = {
	body?: never;
	path: {
		/**
		 * Request Id
		 */
		request_id: string;
	};
	query?: never;
	url: '/api/events/invitation-request/{request_id}';
};

export type EventDeleteInvitationRequest50F3Ed50Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventDeleteInvitationRequest50F3Ed50Response =
	EventDeleteInvitationRequest50F3Ed50Responses[keyof EventDeleteInvitationRequest50F3Ed50Responses];

export type EventListUserInvitationRequests5708B48bData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Event Id
		 */
		event_id?: string | null;
		/**
		 * Status
		 */
		status?: 'pending' | 'approved' | 'rejected';
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/events/me/pending_invitation_requests';
};

export type EventListUserInvitationRequests5708B48bResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventInvitationRequestSchema;
};

export type EventListUserInvitationRequests5708B48bResponse =
	EventListUserInvitationRequests5708B48bResponses[keyof EventListUserInvitationRequests5708B48bResponses];

export type EventGetEventBySlugs1A75C6EaData = {
	body?: never;
	path: {
		/**
		 * Org Slug
		 */
		org_slug: string;
		/**
		 * Event Slug
		 */
		event_slug: string;
	};
	query?: never;
	url: '/api/events/{org_slug}/{event_slug}';
};

export type EventGetEventBySlugs1A75C6EaResponses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type EventGetEventBySlugs1A75C6EaResponse =
	EventGetEventBySlugs1A75C6EaResponses[keyof EventGetEventBySlugs1A75C6EaResponses];

export type EventGetEvent52F9Ed99Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}';
};

export type EventGetEvent52F9Ed99Responses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type EventGetEvent52F9Ed99Response =
	EventGetEvent52F9Ed99Responses[keyof EventGetEvent52F9Ed99Responses];

export type EventRsvpEvent3F73Be8fData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Status
		 */
		answer: 'yes' | 'no' | 'maybe';
	};
	query?: never;
	url: '/api/events/{event_id}/rsvp/{answer}';
};

export type EventRsvpEvent3F73Be8fErrors = {
	/**
	 * Bad Request
	 */
	400: EventUserEligibility;
};

export type EventRsvpEvent3F73Be8fError =
	EventRsvpEvent3F73Be8fErrors[keyof EventRsvpEvent3F73Be8fErrors];

export type EventRsvpEvent3F73Be8fResponses = {
	/**
	 * OK
	 */
	200: EventRsvpSchema;
};

export type EventRsvpEvent3F73Be8fResponse =
	EventRsvpEvent3F73Be8fResponses[keyof EventRsvpEvent3F73Be8fResponses];

export type EventListTiersA2B33Ef6Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/tickets/tiers';
};

export type EventListTiersA2B33Ef6Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TierSchema>;
};

export type EventListTiersA2B33Ef6Response =
	EventListTiersA2B33Ef6Responses[keyof EventListTiersA2B33Ef6Responses];

export type EventTicketCheckout56D2058bData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Tier Id
		 */
		tier_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/tickets/{tier_id}/checkout';
};

export type EventTicketCheckout56D2058bErrors = {
	/**
	 * Bad Request
	 */
	400: EventUserEligibility;
};

export type EventTicketCheckout56D2058bError =
	EventTicketCheckout56D2058bErrors[keyof EventTicketCheckout56D2058bErrors];

export type EventTicketCheckout56D2058bResponses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: StripeCheckoutSessionSchema | EventTicketSchema;
};

export type EventTicketCheckout56D2058bResponse =
	EventTicketCheckout56D2058bResponses[keyof EventTicketCheckout56D2058bResponses];

export type EventTicketPwycCheckout0D472E2aData = {
	body: PwycCheckoutPayloadSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Tier Id
		 */
		tier_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/tickets/{tier_id}/checkout/pwyc';
};

export type EventTicketPwycCheckout0D472E2aErrors = {
	/**
	 * Bad Request
	 */
	400: EventUserEligibility;
};

export type EventTicketPwycCheckout0D472E2aError =
	EventTicketPwycCheckout0D472E2aErrors[keyof EventTicketPwycCheckout0D472E2aErrors];

export type EventTicketPwycCheckout0D472E2aResponses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: StripeCheckoutSessionSchema | EventTicketSchema;
};

export type EventTicketPwycCheckout0D472E2aResponse =
	EventTicketPwycCheckout0D472E2aResponses[keyof EventTicketPwycCheckout0D472E2aResponses];

export type EventGetQuestionnaire84B551E2Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Questionnaire Id
		 */
		questionnaire_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/questionnaire/{questionnaire_id}';
};

export type EventGetQuestionnaire84B551E2Responses = {
	/**
	 * OK
	 */
	200: QuestionnaireSchema;
};

export type EventGetQuestionnaire84B551E2Response =
	EventGetQuestionnaire84B551E2Responses[keyof EventGetQuestionnaire84B551E2Responses];

export type EventSubmitQuestionnaireE1D1E169Data = {
	body: QuestionnaireSubmissionSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Questionnaire Id
		 */
		questionnaire_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/questionnaire/{questionnaire_id}/submit';
};

export type EventSubmitQuestionnaireE1D1E169Errors = {
	/**
	 * Bad Request
	 */
	400: ResponseMessage;
};

export type EventSubmitQuestionnaireE1D1E169Error =
	EventSubmitQuestionnaireE1D1E169Errors[keyof EventSubmitQuestionnaireE1D1E169Errors];

export type EventSubmitQuestionnaireE1D1E169Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: QuestionnaireSubmissionResponseSchema | QuestionnaireEvaluationForUserSchema;
};

export type EventSubmitQuestionnaireE1D1E169Response =
	EventSubmitQuestionnaireE1D1E169Responses[keyof EventSubmitQuestionnaireE1D1E169Responses];

export type EventadminDeleteEventTokenC0Ef75CfData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Token Id
		 */
		token_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/token/{token_id}';
};

export type EventadminDeleteEventTokenC0Ef75CfResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminDeleteEventTokenC0Ef75CfResponse =
	EventadminDeleteEventTokenC0Ef75CfResponses[keyof EventadminDeleteEventTokenC0Ef75CfResponses];

export type EventadminUpdateEventTokenE0A8D180Data = {
	body: EventTokenUpdateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Token Id
		 */
		token_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/token/{token_id}';
};

export type EventadminUpdateEventTokenE0A8D180Responses = {
	/**
	 * OK
	 */
	200: EventTokenSchema;
};

export type EventadminUpdateEventTokenE0A8D180Response =
	EventadminUpdateEventTokenE0A8D180Responses[keyof EventadminUpdateEventTokenE0A8D180Responses];

export type EventadminListEventTokens6Db5E343Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Is Active
		 */
		is_active?: boolean | null;
		/**
		 * Event Id
		 */
		event_id?: string | null;
		/**
		 * Has Invitation
		 */
		has_invitation?: boolean | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/tokens';
};

export type EventadminListEventTokens6Db5E343Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventTokenSchema;
};

export type EventadminListEventTokens6Db5E343Response =
	EventadminListEventTokens6Db5E343Responses[keyof EventadminListEventTokens6Db5E343Responses];

export type EventadminCreateEventToken5696E4C8Data = {
	body: EventTokenCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/token';
};

export type EventadminCreateEventToken5696E4C8Responses = {
	/**
	 * OK
	 */
	200: EventTokenSchema;
};

export type EventadminCreateEventToken5696E4C8Response =
	EventadminCreateEventToken5696E4C8Responses[keyof EventadminCreateEventToken5696E4C8Responses];

export type EventadminDecideInvitationRequest803Be164Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Request Id
		 */
		request_id: string;
		/**
		 * Decision
		 */
		decision: 'approve' | 'reject';
	};
	query?: never;
	url: '/api/event-admin/{event_id}/invitation-request/{request_id}/{decision}';
};

export type EventadminDecideInvitationRequest803Be164Responses = {
	/**
	 * OK
	 */
	200: EventInvitationRequestSchema;
};

export type EventadminDecideInvitationRequest803Be164Response =
	EventadminDecideInvitationRequest803Be164Responses[keyof EventadminDecideInvitationRequest803Be164Responses];

export type EventadminListEventInvitationRequests549A03A0Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Status
		 */
		status?: 'pending' | 'approved' | 'rejected';
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/invitation_requests';
};

export type EventadminListEventInvitationRequests549A03A0Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventInvitationRequestInternalSchema;
};

export type EventadminListEventInvitationRequests549A03A0Response =
	EventadminListEventInvitationRequests549A03A0Responses[keyof EventadminListEventInvitationRequests549A03A0Responses];

export type EventadminUpdateEvent4557Bd2eData = {
	body: EventEditSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}';
};

export type EventadminUpdateEvent4557Bd2eErrors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type EventadminUpdateEvent4557Bd2eError =
	EventadminUpdateEvent4557Bd2eErrors[keyof EventadminUpdateEvent4557Bd2eErrors];

export type EventadminUpdateEvent4557Bd2eResponses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type EventadminUpdateEvent4557Bd2eResponse =
	EventadminUpdateEvent4557Bd2eResponses[keyof EventadminUpdateEvent4557Bd2eResponses];

export type EventadminUpdateEventStatus95B3Ec33Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Status
		 */
		status: 'open' | 'closed' | 'draft' | 'deleted';
	};
	query?: never;
	url: '/api/event-admin/{event_id}/actions/update-status/{status}';
};

export type EventadminUpdateEventStatus95B3Ec33Responses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type EventadminUpdateEventStatus95B3Ec33Response =
	EventadminUpdateEventStatus95B3Ec33Responses[keyof EventadminUpdateEventStatus95B3Ec33Responses];

export type EventadminUploadLogo19D6E71eData = {
	/**
	 * FileParams
	 */
	body: {
		/**
		 * Logo
		 */
		logo: Blob | File;
	};
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/upload-logo';
};

export type EventadminUploadLogo19D6E71eResponses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type EventadminUploadLogo19D6E71eResponse =
	EventadminUploadLogo19D6E71eResponses[keyof EventadminUploadLogo19D6E71eResponses];

export type EventadminUploadCoverArt38E307C1Data = {
	/**
	 * FileParams
	 */
	body: {
		/**
		 * Cover Art
		 */
		cover_art: Blob | File;
	};
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/upload-cover-art';
};

export type EventadminUploadCoverArt38E307C1Responses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type EventadminUploadCoverArt38E307C1Response =
	EventadminUploadCoverArt38E307C1Responses[keyof EventadminUploadCoverArt38E307C1Responses];

export type EventadminClearTagsE665F8FaData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tags';
};

export type EventadminClearTagsE665F8FaResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminClearTagsE665F8FaResponse =
	EventadminClearTagsE665F8FaResponses[keyof EventadminClearTagsE665F8FaResponses];

export type EventadminAddTags14F8D230Data = {
	body: TagUpdateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tags';
};

export type EventadminAddTags14F8D230Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TagSchema>;
};

export type EventadminAddTags14F8D230Response =
	EventadminAddTags14F8D230Responses[keyof EventadminAddTags14F8D230Responses];

export type EventadminRemoveTagsA8D26BacData = {
	body: TagUpdateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tags/remove';
};

export type EventadminRemoveTagsA8D26BacResponses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TagSchema>;
};

export type EventadminRemoveTagsA8D26BacResponse =
	EventadminRemoveTagsA8D26BacResponses[keyof EventadminRemoveTagsA8D26BacResponses];

export type EventadminListTicketTiers55A36F32Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/ticket-tiers';
};

export type EventadminListTicketTiers55A36F32Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaTicketTierDetailSchema;
};

export type EventadminListTicketTiers55A36F32Response =
	EventadminListTicketTiers55A36F32Responses[keyof EventadminListTicketTiers55A36F32Responses];

export type EventadminCreateTicketTierC23Bad31Data = {
	body: TicketTierCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/ticket-tier';
};

export type EventadminCreateTicketTierC23Bad31Responses = {
	/**
	 * OK
	 */
	200: TicketTierDetailSchema;
};

export type EventadminCreateTicketTierC23Bad31Response =
	EventadminCreateTicketTierC23Bad31Responses[keyof EventadminCreateTicketTierC23Bad31Responses];

export type EventadminDeleteTicketTier32E6Bf32Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Tier Id
		 */
		tier_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/ticket-tier/{tier_id}';
};

export type EventadminDeleteTicketTier32E6Bf32Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminDeleteTicketTier32E6Bf32Response =
	EventadminDeleteTicketTier32E6Bf32Responses[keyof EventadminDeleteTicketTier32E6Bf32Responses];

export type EventadminUpdateTicketTier6D8F7D4cData = {
	body: TicketTierUpdateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Tier Id
		 */
		tier_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/ticket-tier/{tier_id}';
};

export type EventadminUpdateTicketTier6D8F7D4cResponses = {
	/**
	 * OK
	 */
	200: TicketTierDetailSchema;
};

export type EventadminUpdateTicketTier6D8F7D4cResponse =
	EventadminUpdateTicketTier6D8F7D4cResponses[keyof EventadminUpdateTicketTier6D8F7D4cResponses];

export type EventadminListPendingTicketsCcf6C45cData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/pending-tickets';
};

export type EventadminListPendingTicketsCcf6C45cResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaPendingTicketSchema;
};

export type EventadminListPendingTicketsCcf6C45cResponse =
	EventadminListPendingTicketsCcf6C45cResponses[keyof EventadminListPendingTicketsCcf6C45cResponses];

export type EventadminConfirmTicketPaymentD8146C03Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Ticket Id
		 */
		ticket_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tickets/{ticket_id}/confirm-payment';
};

export type EventadminConfirmTicketPaymentD8146C03Responses = {
	/**
	 * OK
	 */
	200: EventTicketSchema;
};

export type EventadminConfirmTicketPaymentD8146C03Response =
	EventadminConfirmTicketPaymentD8146C03Responses[keyof EventadminConfirmTicketPaymentD8146C03Responses];

export type EventadminCheckInTicket97147Da5Data = {
	body: CheckInRequestSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/check-in';
};

export type EventadminCheckInTicket97147Da5Errors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type EventadminCheckInTicket97147Da5Error =
	EventadminCheckInTicket97147Da5Errors[keyof EventadminCheckInTicket97147Da5Errors];

export type EventadminCheckInTicket97147Da5Responses = {
	/**
	 * OK
	 */
	200: CheckInResponseSchema;
};

export type EventadminCheckInTicket97147Da5Response =
	EventadminCheckInTicket97147Da5Responses[keyof EventadminCheckInTicket97147Da5Responses];

export type EventadminListInvitations69Dd8336Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/invitations';
};

export type EventadminListInvitations69Dd8336Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventInvitationListSchema;
};

export type EventadminListInvitations69Dd8336Response =
	EventadminListInvitations69Dd8336Responses[keyof EventadminListInvitations69Dd8336Responses];

export type EventadminCreateInvitationsD9719Aa1Data = {
	body: DirectInvitationCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/invitations';
};

export type EventadminCreateInvitationsD9719Aa1Errors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type EventadminCreateInvitationsD9719Aa1Error =
	EventadminCreateInvitationsD9719Aa1Errors[keyof EventadminCreateInvitationsD9719Aa1Errors];

export type EventadminCreateInvitationsD9719Aa1Responses = {
	/**
	 * OK
	 */
	200: DirectInvitationResponseSchema;
};

export type EventadminCreateInvitationsD9719Aa1Response =
	EventadminCreateInvitationsD9719Aa1Responses[keyof EventadminCreateInvitationsD9719Aa1Responses];

export type EventadminListPendingInvitations5Dc95510Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/pending-invitations';
};

export type EventadminListPendingInvitations5Dc95510Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaPendingEventInvitationListSchema;
};

export type EventadminListPendingInvitations5Dc95510Response =
	EventadminListPendingInvitations5Dc95510Responses[keyof EventadminListPendingInvitations5Dc95510Responses];

export type EventadminDeleteInvitationEndpoint4658B557Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Invitation Type
		 */
		invitation_type: 'registered' | 'pending';
		/**
		 * Invitation Id
		 */
		invitation_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/invitations/{invitation_type}/{invitation_id}';
};

export type EventadminDeleteInvitationEndpoint4658B557Errors = {
	/**
	 * Not Found
	 */
	404: ValidationErrorResponse;
};

export type EventadminDeleteInvitationEndpoint4658B557Error =
	EventadminDeleteInvitationEndpoint4658B557Errors[keyof EventadminDeleteInvitationEndpoint4658B557Errors];

export type EventadminDeleteInvitationEndpoint4658B557Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminDeleteInvitationEndpoint4658B557Response =
	EventadminDeleteInvitationEndpoint4658B557Responses[keyof EventadminDeleteInvitationEndpoint4658B557Responses];

export type PermissionMyPermissionsC9C10303Data = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/permissions/my-permissions';
};

export type PermissionMyPermissionsC9C10303Responses = {
	/**
	 * OK
	 */
	200: OrganizationPermissionsSchema;
};

export type PermissionMyPermissionsC9C10303Response =
	PermissionMyPermissionsC9C10303Responses[keyof PermissionMyPermissionsC9C10303Responses];

export type EventseriesListEventSeries4E2583F5Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Organization
		 */
		organization?: string | null;
		/**
		 * Tags
		 */
		tags?: Array<string> | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-series/';
};

export type EventseriesListEventSeries4E2583F5Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventSeriesRetrieveSchema;
};

export type EventseriesListEventSeries4E2583F5Response =
	EventseriesListEventSeries4E2583F5Responses[keyof EventseriesListEventSeries4E2583F5Responses];

export type EventseriesGetEventSeriesBySlugs98414Ab4Data = {
	body?: never;
	path: {
		/**
		 * Org Slug
		 */
		org_slug: string;
		/**
		 * Series Slug
		 */
		series_slug: string;
	};
	query?: never;
	url: '/api/event-series/{org_slug}/{series_slug}';
};

export type EventseriesGetEventSeriesBySlugs98414Ab4Responses = {
	/**
	 * OK
	 */
	200: EventSeriesRetrieveSchema;
};

export type EventseriesGetEventSeriesBySlugs98414Ab4Response =
	EventseriesGetEventSeriesBySlugs98414Ab4Responses[keyof EventseriesGetEventSeriesBySlugs98414Ab4Responses];

export type EventseriesGetEventSeries1C0Cf7F2Data = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series/{series_id}';
};

export type EventseriesGetEventSeries1C0Cf7F2Responses = {
	/**
	 * OK
	 */
	200: EventSeriesRetrieveSchema;
};

export type EventseriesGetEventSeries1C0Cf7F2Response =
	EventseriesGetEventSeries1C0Cf7F2Responses[keyof EventseriesGetEventSeries1C0Cf7F2Responses];

export type EventseriesListResources3C900790Data = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: {
		resource_type?: ResourceTypes | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-series/{series_id}/resources';
};

export type EventseriesListResources3C900790Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaAdditionalResourceSchema;
};

export type EventseriesListResources3C900790Response =
	EventseriesListResources3C900790Responses[keyof EventseriesListResources3C900790Responses];

export type EventseriesadminDeleteEventSeries0182A0CcData = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/';
};

export type EventseriesadminDeleteEventSeries0182A0CcResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventseriesadminDeleteEventSeries0182A0CcResponse =
	EventseriesadminDeleteEventSeries0182A0CcResponses[keyof EventseriesadminDeleteEventSeries0182A0CcResponses];

export type EventseriesadminUpdateEventSeries63D5Fcf0Data = {
	body: EventSeriesEditSchema;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/';
};

export type EventseriesadminUpdateEventSeries63D5Fcf0Errors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type EventseriesadminUpdateEventSeries63D5Fcf0Error =
	EventseriesadminUpdateEventSeries63D5Fcf0Errors[keyof EventseriesadminUpdateEventSeries63D5Fcf0Errors];

export type EventseriesadminUpdateEventSeries63D5Fcf0Responses = {
	/**
	 * OK
	 */
	200: EventSeriesRetrieveSchema;
};

export type EventseriesadminUpdateEventSeries63D5Fcf0Response =
	EventseriesadminUpdateEventSeries63D5Fcf0Responses[keyof EventseriesadminUpdateEventSeries63D5Fcf0Responses];

export type EventseriesadminUploadLogoDec47Fd6Data = {
	/**
	 * FileParams
	 */
	body: {
		/**
		 * Logo
		 */
		logo: Blob | File;
	};
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/upload-logo';
};

export type EventseriesadminUploadLogoDec47Fd6Responses = {
	/**
	 * OK
	 */
	200: EventSeriesRetrieveSchema;
};

export type EventseriesadminUploadLogoDec47Fd6Response =
	EventseriesadminUploadLogoDec47Fd6Responses[keyof EventseriesadminUploadLogoDec47Fd6Responses];

export type EventseriesadminUploadCoverArtBd0Dcd35Data = {
	/**
	 * FileParams
	 */
	body: {
		/**
		 * Cover Art
		 */
		cover_art: Blob | File;
	};
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/upload-cover-art';
};

export type EventseriesadminUploadCoverArtBd0Dcd35Responses = {
	/**
	 * OK
	 */
	200: EventSeriesRetrieveSchema;
};

export type EventseriesadminUploadCoverArtBd0Dcd35Response =
	EventseriesadminUploadCoverArtBd0Dcd35Responses[keyof EventseriesadminUploadCoverArtBd0Dcd35Responses];

export type EventseriesadminClearTags09238344Data = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/tags';
};

export type EventseriesadminClearTags09238344Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventseriesadminClearTags09238344Response =
	EventseriesadminClearTags09238344Responses[keyof EventseriesadminClearTags09238344Responses];

export type EventseriesadminAddTags0685Cab8Data = {
	body: TagUpdateSchema;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/tags';
};

export type EventseriesadminAddTags0685Cab8Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TagSchema>;
};

export type EventseriesadminAddTags0685Cab8Response =
	EventseriesadminAddTags0685Cab8Responses[keyof EventseriesadminAddTags0685Cab8Responses];

export type EventseriesadminRemoveTags89B55303Data = {
	body: TagUpdateSchema;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/tags/remove';
};

export type EventseriesadminRemoveTags89B55303Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TagSchema>;
};

export type EventseriesadminRemoveTags89B55303Response =
	EventseriesadminRemoveTags89B55303Responses[keyof EventseriesadminRemoveTags89B55303Responses];

export type PotluckListPotluckItems7201D243Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/potluck/';
};

export type PotluckListPotluckItems7201D243Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<PotluckItemRetrieveSchema>;
};

export type PotluckListPotluckItems7201D243Response =
	PotluckListPotluckItems7201D243Responses[keyof PotluckListPotluckItems7201D243Responses];

export type PotluckCreatePotluckItem0665A3B5Data = {
	body: PotluckItemCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/potluck/';
};

export type PotluckCreatePotluckItem0665A3B5Responses = {
	/**
	 * OK
	 */
	200: PotluckItemRetrieveSchema;
};

export type PotluckCreatePotluckItem0665A3B5Response =
	PotluckCreatePotluckItem0665A3B5Responses[keyof PotluckCreatePotluckItem0665A3B5Responses];

export type PotluckDeletePotluckItem3Daac9C7Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Item Id
		 */
		item_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/potluck/{item_id}';
};

export type PotluckDeletePotluckItem3Daac9C7Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type PotluckDeletePotluckItem3Daac9C7Response =
	PotluckDeletePotluckItem3Daac9C7Responses[keyof PotluckDeletePotluckItem3Daac9C7Responses];

export type PotluckUpdatePotluckItem211E2C3bData = {
	body: PotluckItemCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Item Id
		 */
		item_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/potluck/{item_id}';
};

export type PotluckUpdatePotluckItem211E2C3bResponses = {
	/**
	 * OK
	 */
	200: PotluckItemRetrieveSchema;
};

export type PotluckUpdatePotluckItem211E2C3bResponse =
	PotluckUpdatePotluckItem211E2C3bResponses[keyof PotluckUpdatePotluckItem211E2C3bResponses];

export type PotluckClaimPotluckItem2E4F8382Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Item Id
		 */
		item_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/potluck/{item_id}/claim';
};

export type PotluckClaimPotluckItem2E4F8382Responses = {
	/**
	 * OK
	 */
	200: PotluckItemRetrieveSchema;
};

export type PotluckClaimPotluckItem2E4F8382Response =
	PotluckClaimPotluckItem2E4F8382Responses[keyof PotluckClaimPotluckItem2E4F8382Responses];

export type PotluckUnclaimPotluckItemBc946101Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Item Id
		 */
		item_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/potluck/{item_id}/unclaim';
};

export type PotluckUnclaimPotluckItemBc946101Responses = {
	/**
	 * OK
	 */
	200: PotluckItemRetrieveSchema;
};

export type PotluckUnclaimPotluckItemBc946101Response =
	PotluckUnclaimPotluckItemBc946101Responses[keyof PotluckUnclaimPotluckItemBc946101Responses];

export type QuestionnaireListOrgQuestionnairesDac6E035Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/questionnaires/';
};

export type QuestionnaireListOrgQuestionnairesDac6E035Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationQuestionnaireInListSchema;
};

export type QuestionnaireListOrgQuestionnairesDac6E035Response =
	QuestionnaireListOrgQuestionnairesDac6E035Responses[keyof QuestionnaireListOrgQuestionnairesDac6E035Responses];

export type QuestionnaireCreateOrgQuestionnaire3C3876E5Data = {
	body: QuestionnaireCreateSchema;
	path: {
		/**
		 * Organization Id
		 */
		organization_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{organization_id}/create-questionnaire';
};

export type QuestionnaireCreateOrgQuestionnaire3C3876E5Errors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type QuestionnaireCreateOrgQuestionnaire3C3876E5Error =
	QuestionnaireCreateOrgQuestionnaire3C3876E5Errors[keyof QuestionnaireCreateOrgQuestionnaire3C3876E5Errors];

export type QuestionnaireCreateOrgQuestionnaire3C3876E5Responses = {
	/**
	 * OK
	 */
	200: OrganizationQuestionnaireSchema;
};

export type QuestionnaireCreateOrgQuestionnaire3C3876E5Response =
	QuestionnaireCreateOrgQuestionnaire3C3876E5Responses[keyof QuestionnaireCreateOrgQuestionnaire3C3876E5Responses];

export type QuestionnaireGetOrgQuestionnaire21A6Eaf4Data = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}';
};

export type QuestionnaireGetOrgQuestionnaire21A6Eaf4Responses = {
	/**
	 * OK
	 */
	200: OrganizationQuestionnaireSchema;
};

export type QuestionnaireGetOrgQuestionnaire21A6Eaf4Response =
	QuestionnaireGetOrgQuestionnaire21A6Eaf4Responses[keyof QuestionnaireGetOrgQuestionnaire21A6Eaf4Responses];

export type QuestionnaireCreateSection623B234eData = {
	body: SectionCreateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/sections';
};

export type QuestionnaireCreateSection623B234eResponses = {
	/**
	 * OK
	 */
	200: SectionUpdateSchema;
};

export type QuestionnaireCreateSection623B234eResponse =
	QuestionnaireCreateSection623B234eResponses[keyof QuestionnaireCreateSection623B234eResponses];

export type QuestionnaireUpdateSection421893D0Data = {
	body: SectionUpdateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Section Id
		 */
		section_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/sections/{section_id}';
};

export type QuestionnaireUpdateSection421893D0Responses = {
	/**
	 * OK
	 */
	200: SectionUpdateSchema;
};

export type QuestionnaireUpdateSection421893D0Response =
	QuestionnaireUpdateSection421893D0Responses[keyof QuestionnaireUpdateSection421893D0Responses];

export type QuestionnaireCreateMcQuestion8938422fData = {
	body: MultipleChoiceQuestionCreateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/multiple-choice-questions';
};

export type QuestionnaireCreateMcQuestion8938422fResponses = {
	/**
	 * OK
	 */
	200: MultipleChoiceQuestionUpdateSchema;
};

export type QuestionnaireCreateMcQuestion8938422fResponse =
	QuestionnaireCreateMcQuestion8938422fResponses[keyof QuestionnaireCreateMcQuestion8938422fResponses];

export type QuestionnaireUpdateMcQuestion8Bac54CcData = {
	body: MultipleChoiceQuestionUpdateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Question Id
		 */
		question_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/multiple-choice-questions/{question_id}';
};

export type QuestionnaireUpdateMcQuestion8Bac54CcResponses = {
	/**
	 * OK
	 */
	200: MultipleChoiceQuestionUpdateSchema;
};

export type QuestionnaireUpdateMcQuestion8Bac54CcResponse =
	QuestionnaireUpdateMcQuestion8Bac54CcResponses[keyof QuestionnaireUpdateMcQuestion8Bac54CcResponses];

export type QuestionnaireCreateMcOption6Ab8221bData = {
	body: MultipleChoiceOptionCreateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Question Id
		 */
		question_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/multiple-choice-questions/{question_id}/options';
};

export type QuestionnaireCreateMcOption6Ab8221bResponses = {
	/**
	 * OK
	 */
	200: MultipleChoiceOptionUpdateSchema;
};

export type QuestionnaireCreateMcOption6Ab8221bResponse =
	QuestionnaireCreateMcOption6Ab8221bResponses[keyof QuestionnaireCreateMcOption6Ab8221bResponses];

export type QuestionnaireUpdateMcOption4435C097Data = {
	body: MultipleChoiceOptionUpdateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Option Id
		 */
		option_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/multiple-choice-options/{option_id}';
};

export type QuestionnaireUpdateMcOption4435C097Responses = {
	/**
	 * OK
	 */
	200: MultipleChoiceOptionUpdateSchema;
};

export type QuestionnaireUpdateMcOption4435C097Response =
	QuestionnaireUpdateMcOption4435C097Responses[keyof QuestionnaireUpdateMcOption4435C097Responses];

export type QuestionnaireCreateFtQuestion461373AfData = {
	body: FreeTextQuestionCreateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/free-text-questions';
};

export type QuestionnaireCreateFtQuestion461373AfResponses = {
	/**
	 * OK
	 */
	200: FreeTextQuestionUpdateSchema;
};

export type QuestionnaireCreateFtQuestion461373AfResponse =
	QuestionnaireCreateFtQuestion461373AfResponses[keyof QuestionnaireCreateFtQuestion461373AfResponses];

export type QuestionnaireUpdateFtQuestionFccc82E2Data = {
	body: FreeTextQuestionUpdateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Question Id
		 */
		question_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/free-text-questions/{question_id}';
};

export type QuestionnaireUpdateFtQuestionFccc82E2Responses = {
	/**
	 * OK
	 */
	200: FreeTextQuestionUpdateSchema;
};

export type QuestionnaireUpdateFtQuestionFccc82E2Response =
	QuestionnaireUpdateFtQuestionFccc82E2Responses[keyof QuestionnaireUpdateFtQuestionFccc82E2Responses];

export type QuestionnaireListSubmissionsC50Aed6aData = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/questionnaires/{org_questionnaire_id}/submissions';
};

export type QuestionnaireListSubmissionsC50Aed6aResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaSubmissionListItemSchema;
};

export type QuestionnaireListSubmissionsC50Aed6aResponse =
	QuestionnaireListSubmissionsC50Aed6aResponses[keyof QuestionnaireListSubmissionsC50Aed6aResponses];

export type QuestionnaireGetSubmissionDetailCc91E0B1Data = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Submission Id
		 */
		submission_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/submissions/{submission_id}';
};

export type QuestionnaireGetSubmissionDetailCc91E0B1Responses = {
	/**
	 * OK
	 */
	200: SubmissionDetailSchema;
};

export type QuestionnaireGetSubmissionDetailCc91E0B1Response =
	QuestionnaireGetSubmissionDetailCc91E0B1Responses[keyof QuestionnaireGetSubmissionDetailCc91E0B1Responses];

export type QuestionnaireEvaluateSubmission7F0B5434Data = {
	body: EvaluationCreateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Submission Id
		 */
		submission_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/submissions/{submission_id}/evaluate';
};

export type QuestionnaireEvaluateSubmission7F0B5434Errors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type QuestionnaireEvaluateSubmission7F0B5434Error =
	QuestionnaireEvaluateSubmission7F0B5434Errors[keyof QuestionnaireEvaluateSubmission7F0B5434Errors];

export type QuestionnaireEvaluateSubmission7F0B5434Responses = {
	/**
	 * OK
	 */
	200: EvaluationResponseSchema;
};

export type QuestionnaireEvaluateSubmission7F0B5434Response =
	QuestionnaireEvaluateSubmission7F0B5434Responses[keyof QuestionnaireEvaluateSubmission7F0B5434Responses];

export type UserpreferencesGetGeneralPreferences20Aad2B1Data = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/preferences/general';
};

export type UserpreferencesGetGeneralPreferences20Aad2B1Responses = {
	/**
	 * OK
	 */
	200: GeneralUserPreferencesSchema;
};

export type UserpreferencesGetGeneralPreferences20Aad2B1Response =
	UserpreferencesGetGeneralPreferences20Aad2B1Responses[keyof UserpreferencesGetGeneralPreferences20Aad2B1Responses];

export type UserpreferencesUpdateGlobalPreferencesAd4C4758Data = {
	body: GeneralUserPreferencesUpdateSchema;
	path?: never;
	query?: {
		/**
		 * Overwrite Children
		 */
		overwrite_children?: boolean;
	};
	url: '/api/preferences/general';
};

export type UserpreferencesUpdateGlobalPreferencesAd4C4758Responses = {
	/**
	 * OK
	 */
	200: GeneralUserPreferencesSchema;
};

export type UserpreferencesUpdateGlobalPreferencesAd4C4758Response =
	UserpreferencesUpdateGlobalPreferencesAd4C4758Responses[keyof UserpreferencesUpdateGlobalPreferencesAd4C4758Responses];

export type UserpreferencesGetOrganizationPreferencesDe8459EfData = {
	body?: never;
	path: {
		/**
		 * Organization Id
		 */
		organization_id: string;
	};
	query?: never;
	url: '/api/preferences/organization/{organization_id}';
};

export type UserpreferencesGetOrganizationPreferencesDe8459EfResponses = {
	/**
	 * OK
	 */
	200: UserOrganizationPreferencesSchema;
};

export type UserpreferencesGetOrganizationPreferencesDe8459EfResponse =
	UserpreferencesGetOrganizationPreferencesDe8459EfResponses[keyof UserpreferencesGetOrganizationPreferencesDe8459EfResponses];

export type UserpreferencesUpdateOrganizationPreferences529E5340Data = {
	body: UserOrganizationPreferencesUpdateSchema;
	path: {
		/**
		 * Organization Id
		 */
		organization_id: string;
	};
	query?: {
		/**
		 * Overwrite Children
		 */
		overwrite_children?: boolean;
	};
	url: '/api/preferences/organization/{organization_id}';
};

export type UserpreferencesUpdateOrganizationPreferences529E5340Responses = {
	/**
	 * OK
	 */
	200: UserOrganizationPreferencesSchema;
};

export type UserpreferencesUpdateOrganizationPreferences529E5340Response =
	UserpreferencesUpdateOrganizationPreferences529E5340Responses[keyof UserpreferencesUpdateOrganizationPreferences529E5340Responses];

export type UserpreferencesGetEventSeriesPreferencesDea4E503Data = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/preferences/event-series/{series_id}';
};

export type UserpreferencesGetEventSeriesPreferencesDea4E503Responses = {
	/**
	 * OK
	 */
	200: UserEventSeriesPreferencesSchema;
};

export type UserpreferencesGetEventSeriesPreferencesDea4E503Response =
	UserpreferencesGetEventSeriesPreferencesDea4E503Responses[keyof UserpreferencesGetEventSeriesPreferencesDea4E503Responses];

export type UserpreferencesUpdateEventSeriesPreferences9Ff9F6D6Data = {
	body: UserEventSeriesPreferencesUpdateSchema;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: {
		/**
		 * Overwrite Children
		 */
		overwrite_children?: boolean;
	};
	url: '/api/preferences/event-series/{series_id}';
};

export type UserpreferencesUpdateEventSeriesPreferences9Ff9F6D6Responses = {
	/**
	 * OK
	 */
	200: UserEventSeriesPreferencesSchema;
};

export type UserpreferencesUpdateEventSeriesPreferences9Ff9F6D6Response =
	UserpreferencesUpdateEventSeriesPreferences9Ff9F6D6Responses[keyof UserpreferencesUpdateEventSeriesPreferences9Ff9F6D6Responses];

export type UserpreferencesGetEventPreferences55870442Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/preferences/event/{event_id}';
};

export type UserpreferencesGetEventPreferences55870442Responses = {
	/**
	 * OK
	 */
	200: UserEventPreferencesSchema;
};

export type UserpreferencesGetEventPreferences55870442Response =
	UserpreferencesGetEventPreferences55870442Responses[keyof UserpreferencesGetEventPreferences55870442Responses];

export type UserpreferencesUpdateEventPreferences90404660Data = {
	body: UserEventPreferencesUpdateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Overwrite Children
		 */
		overwrite_children?: boolean;
	};
	url: '/api/preferences/event/{event_id}';
};

export type UserpreferencesUpdateEventPreferences90404660Responses = {
	/**
	 * OK
	 */
	200: UserEventPreferencesSchema;
};

export type UserpreferencesUpdateEventPreferences90404660Response =
	UserpreferencesUpdateEventPreferences90404660Responses[keyof UserpreferencesUpdateEventPreferences90404660Responses];

export type StripewebhookHandleWebhook0Bc4Dda4Data = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/stripe/webhook';
};

export type StripewebhookHandleWebhook0Bc4Dda4Responses = {
	/**
	 * OK
	 */
	200: unknown;
};

export type TagListTags7Eee73BfData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/tags/';
};

export type TagListTags7Eee73BfResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaTagSchema;
};

export type TagListTags7Eee73BfResponse =
	TagListTags7Eee73BfResponses[keyof TagListTags7Eee73BfResponses];

export type CityListCitiesC59C4645Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Country
		 */
		country?: string | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/cities/';
};

export type CityListCitiesC59C4645Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaCitySchema;
};

export type CityListCitiesC59C4645Response =
	CityListCitiesC59C4645Responses[keyof CityListCitiesC59C4645Responses];

export type CityListCountries45E5136bData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/cities/countries';
};

export type CityListCountries45E5136bResponses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<string>;
};

export type CityListCountries45E5136bResponse =
	CityListCountries45E5136bResponses[keyof CityListCountries45E5136bResponses];

export type CityGetCity8470490aData = {
	body?: never;
	path: {
		/**
		 * City Id
		 */
		city_id: number;
	};
	query?: never;
	url: '/api/cities/{city_id}';
};

export type CityGetCity8470490aResponses = {
	/**
	 * OK
	 */
	200: CitySchema;
};

export type CityGetCity8470490aResponse =
	CityGetCity8470490aResponses[keyof CityGetCity8470490aResponses];
