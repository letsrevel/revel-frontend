// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
	baseUrl: 'http://localhost:8000' | (string & {});
};

/**
 * VersionResponse
 */
export type VersionResponse = {
	/**
	 * Version
	 */
	version: string;
	/**
	 * Demo
	 */
	demo?: boolean;
};

/**
 * ResponseOk
 */
export type ResponseOk = {
	/**
	 * Status
	 */
	status?: 'ok';
};

/**
 * TempToken
 */
export type TempToken = {
	/**
	 * Token
	 *
	 * The temporary token to be used with OTP.
	 */
	token: string;
	/**
	 * Type
	 */
	type?: 'otp';
};

/**
 * TokenObtainPairOutputSchema
 */
export type TokenObtainPairOutputSchema = {
	/**
	 * Username
	 *
	 * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
	 */
	username: string;
	/**
	 * Refresh
	 */
	refresh: string;
	/**
	 * Access
	 */
	access: string;
};

/**
 * TokenObtainPairInputSchema
 */
export type TokenObtainPairInputSchema = {
	/**
	 * Password
	 */
	password: string;
	/**
	 * Username
	 *
	 * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
	 */
	username: string;
};

/**
 * TokenRefreshOutputSchema
 */
export type TokenRefreshOutputSchema = {
	/**
	 * Refresh
	 */
	refresh: string;
	/**
	 * Access
	 */
	access: string | null;
};

/**
 * TokenRefreshInputSchema
 */
export type TokenRefreshInputSchema = {
	/**
	 * Refresh
	 */
	refresh: string;
};

/**
 * TempTokenWithTOTP
 */
export type TempTokenWithTotp = {
	/**
	 * Token
	 */
	token: string;
	/**
	 * Otp
	 *
	 * The one-time password to verify.
	 */
	otp: string;
};

/**
 * GoogleIDTokenSchema
 */
export type GoogleIdTokenSchema = {
	/**
	 * Id Token
	 *
	 * The Google ID token to verify.
	 */
	id_token: string;
};

/**
 * TOTPProvisioningUriSchema
 */
export type TotpProvisioningUriSchema = {
	/**
	 * Uri
	 *
	 * The provisioning URI for the TOTP app, to be rendered in a QR code.
	 */
	uri: string;
};

/**
 * RevelUserSchema
 */
export type RevelUserSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Email
	 */
	email: string;
	/**
	 * Email Verified
	 */
	email_verified: boolean;
	/**
	 * Preferred Name
	 */
	preferred_name: string;
	/**
	 * Pronouns
	 */
	pronouns: string;
	/**
	 * Is Active
	 */
	is_active: boolean;
	/**
	 * First Name
	 */
	first_name: string;
	/**
	 * Last Name
	 */
	last_name: string;
	/**
	 * Totp Active
	 */
	totp_active: boolean;
};

/**
 * OTPVerifySchema
 */
export type OtpVerifySchema = {
	/**
	 * Otp
	 *
	 * The one-time password to verify.
	 */
	otp: string;
};

/**
 * ResponseMessage
 */
export type ResponseMessage = {
	/**
	 * Message
	 */
	message: string;
};

/**
 * ProfileUpdateSchema
 *
 * Schema for updating user profile information.
 */
export type ProfileUpdateSchema = {
	/**
	 * Preferred Name
	 *
	 * User's preferred name
	 */
	preferred_name: string;
	/**
	 * Pronouns
	 *
	 * User's pronouns
	 */
	pronouns: string;
	/**
	 * First Name
	 *
	 * User's first name
	 */
	first_name: string;
	/**
	 * Last Name
	 *
	 * User's last name
	 */
	last_name: string;
};

/**
 * RegisterUserSchema
 */
export type RegisterUserSchema = {
	/**
	 * Password1
	 *
	 * Password
	 */
	password1: string;
	/**
	 * Password2
	 *
	 * Password confirmation
	 */
	password2: string;
	/**
	 * Email
	 */
	email: string;
	/**
	 * First Name
	 */
	first_name?: string;
	/**
	 * Last Name
	 */
	last_name?: string;
};

/**
 * VerifyEmailResponseSchema
 */
export type VerifyEmailResponseSchema = {
	user: RevelUserSchema;
	token: TokenObtainPairOutputSchema;
};

/**
 * VerifyEmailSchema
 */
export type VerifyEmailSchema = {
	/**
	 * Token
	 */
	token: string;
};

/**
 * DeleteAccountConfirmSchema
 */
export type DeleteAccountConfirmSchema = {
	/**
	 * Token
	 */
	token: string;
};

/**
 * PasswordResetRequestSchema
 */
export type PasswordResetRequestSchema = {
	/**
	 * Email
	 */
	email: string;
};

/**
 * PasswordResetSchema
 */
export type PasswordResetSchema = {
	/**
	 * Password1
	 *
	 * Password
	 */
	password1: string;
	/**
	 * Password2
	 *
	 * Password confirmation
	 */
	password2: string;
	/**
	 * Token
	 */
	token: string;
};

/**
 * DashboardOrganizationsFiltersSchema
 */
export type DashboardOrganizationsFiltersSchema = {
	/**
	 * Owner
	 */
	owner?: boolean;
	/**
	 * Staff
	 */
	staff?: boolean;
	/**
	 * Member
	 */
	member?: boolean;
	/**
	 * Subscriber
	 */
	subscriber?: boolean;
};

/**
 * DynamicInput
 */
export type DynamicInput = {
	/**
	 * Page
	 */
	page?: number;
	/**
	 * Page Size
	 */
	page_size?: number;
};

/**
 * Input
 */
export type Input = {
	/**
	 * Search
	 */
	search?: string | null;
};

/**
 * CitySchema
 */
export type CitySchema = {
	/**
	 * ID
	 */
	id?: number | null;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Country
	 */
	country: string;
	/**
	 * Admin Name
	 */
	admin_name?: string | null;
};

/**
 * OrganizationRetrieveSchema
 */
export type OrganizationRetrieveSchema = {
	/**
	 * Tags
	 */
	tags?: Array<string>;
	city?: CitySchema | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Id
	 */
	id: string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Slug
	 */
	slug: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Logo
	 */
	logo?: string | null;
	/**
	 * Cover Art
	 */
	cover_art?: string | null;
	visibility: Visibility;
	/**
	 * Is Stripe Connected
	 */
	is_stripe_connected: boolean;
	/**
	 * Platform Fee Percent
	 */
	platform_fee_percent?: number | string | null;
	/**
	 * Accept Membership Requests
	 */
	accept_membership_requests: boolean;
	/**
	 * Contact Email
	 */
	contact_email?: string | null;
	/**
	 * Contact Email Verified
	 */
	contact_email_verified: boolean;
};

/**
 * PaginatedResponseSchema[OrganizationRetrieveSchema]
 */
export type PaginatedResponseSchemaOrganizationRetrieveSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<OrganizationRetrieveSchema>;
};

/**
 * Visibility
 */
export type Visibility = 'public' | 'private' | 'members-only' | 'staff-only';

/**
 * DashboardEventsFiltersSchema
 */
export type DashboardEventsFiltersSchema = {
	/**
	 * Owner
	 */
	owner?: boolean;
	/**
	 * Staff
	 */
	staff?: boolean;
	/**
	 * Member
	 */
	member?: boolean;
	/**
	 * Rsvp Yes
	 */
	rsvp_yes?: boolean;
	/**
	 * Rsvp No
	 */
	rsvp_no?: boolean;
	/**
	 * Rsvp Maybe
	 */
	rsvp_maybe?: boolean;
	/**
	 * Got Ticket
	 */
	got_ticket?: boolean;
	/**
	 * Got Invitation
	 */
	got_invitation?: boolean;
	/**
	 * Subscriber
	 */
	subscriber?: boolean;
};

/**
 * EventInListSchema
 */
export type EventInListSchema = {
	/**
	 * Tags
	 */
	tags?: Array<string>;
	city?: CitySchema | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Id
	 */
	id: string;
	event_type: Types;
	visibility: Visibility;
	organization: OrganizationRetrieveSchema;
	status: Status;
	event_series?: EventSeriesRetrieveSchema | null;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Slug
	 */
	slug: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Invitation Message
	 */
	invitation_message?: string | null;
	/**
	 * Invitation Message Html
	 */
	invitation_message_html?: string;
	/**
	 * Max Attendees
	 */
	max_attendees?: number;
	/**
	 * Waitlist Open
	 */
	waitlist_open?: boolean | null;
	/**
	 * Start
	 */
	start: string;
	/**
	 * End
	 */
	end: string;
	/**
	 * Rsvp Before
	 */
	rsvp_before?: string | null;
	/**
	 * Logo
	 */
	logo?: string | null;
	/**
	 * Cover Art
	 */
	cover_art?: string | null;
	/**
	 * Free For Members
	 */
	free_for_members: boolean;
	/**
	 * Free For Staff
	 */
	free_for_staff: boolean;
	/**
	 * Requires Ticket
	 */
	requires_ticket: boolean;
	/**
	 * Potluck Open
	 */
	potluck_open: boolean;
	/**
	 * Attendee Count
	 */
	attendee_count: number;
	/**
	 * Accept Invitation Requests
	 */
	accept_invitation_requests: boolean;
};

/**
 * EventSeriesRetrieveSchema
 */
export type EventSeriesRetrieveSchema = {
	/**
	 * Tags
	 */
	tags?: Array<string>;
	/**
	 * Id
	 */
	id: string;
	organization: OrganizationRetrieveSchema;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Slug
	 */
	slug: string;
	/**
	 * Logo
	 */
	logo?: string | null;
	/**
	 * Cover Art
	 */
	cover_art?: string | null;
};

/**
 * PaginatedResponseSchema[EventInListSchema]
 */
export type PaginatedResponseSchemaEventInListSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<EventInListSchema>;
};

/**
 * Status
 */
export type Status = 'draft' | 'ready' | 'published';

/**
 * Types
 */
export type Types = 'admission' | 'membership' | 'feedback' | 'generic';

/**
 * DashboardEventSeriesFiltersSchema
 */
export type DashboardEventSeriesFiltersSchema = {
	/**
	 * Owner
	 */
	owner?: boolean;
	/**
	 * Staff
	 */
	staff?: boolean;
	/**
	 * Member
	 */
	member?: boolean;
	/**
	 * Subscriber
	 */
	subscriber?: boolean;
};

/**
 * PaginatedResponseSchema[EventSeriesRetrieveSchema]
 */
export type PaginatedResponseSchemaEventSeriesRetrieveSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<EventSeriesRetrieveSchema>;
};

/**
 * InvitationSchema
 */
export type InvitationSchema = {
	/**
	 * Waives Questionnaire
	 */
	waives_questionnaire?: boolean;
	/**
	 * Waives Purchase
	 */
	waives_purchase?: boolean;
	/**
	 * Overrides Max Attendees
	 */
	overrides_max_attendees?: boolean;
	/**
	 * Waives Membership Required
	 */
	waives_membership_required?: boolean;
	/**
	 * Waives Rsvp Deadline
	 */
	waives_rsvp_deadline?: boolean;
	/**
	 * Custom Message
	 */
	custom_message?: string | null;
	event: EventInListSchema;
	tier?: TierSchema | null;
	/**
	 * User Id
	 */
	user_id: string;
};

/**
 * PaginatedResponseSchema[InvitationSchema]
 */
export type PaginatedResponseSchemaInvitationSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<InvitationSchema>;
};

/**
 * TierSchema
 */
export type TierSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Event Id
	 */
	event_id: string;
	/**
	 * Price
	 */
	price: number | string;
	/**
	 * Currency
	 */
	currency: string;
	/**
	 * Total Available
	 */
	total_available: number | null;
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Price Type
	 *
	 * Whether this tier has a fixed price or allows pay-what-you-can pricing
	 */
	price_type?: string;
	/**
	 * Pwyc Min
	 *
	 * Minimum amount for pay-what-you-can pricing
	 */
	pwyc_min?: number | string;
	/**
	 * Pwyc Max
	 *
	 * Maximum amount for pay-what-you-can pricing (optional)
	 */
	pwyc_max?: number | string | null;
	/**
	 * Sales Start At
	 *
	 * When ticket sales begin for this tier
	 */
	sales_start_at?: string | null;
	/**
	 * Sales End At
	 *
	 * When ticket sales end for this tier
	 */
	sales_end_at?: string | null;
	/**
	 * Purchasable By
	 */
	purchasable_by?: string;
	/**
	 * Payment Method
	 */
	payment_method?: string;
};

/**
 * OrganizationFilterSchema
 */
export type OrganizationFilterSchema = {
	/**
	 * Country
	 */
	country?: string | null;
	/**
	 * City Id
	 */
	city_id?: number | null;
	/**
	 * Tags
	 */
	tags?: Array<string> | null;
};

/**
 * ResourceFilterSchema
 */
export type ResourceFilterSchema = {
	resource_type?: ResourceTypes | null;
};

/**
 * ResourceTypes
 */
export type ResourceTypes = 'file' | 'link' | 'text';

/**
 * AdditionalResourceSchema
 */
export type AdditionalResourceSchema = {
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Text Html
	 */
	text_html?: string;
	/**
	 * Event Ids
	 */
	event_ids?: Array<string>;
	/**
	 * Event Series Ids
	 */
	event_series_ids?: Array<string>;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Resource Type
	 */
	resource_type: string;
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * File
	 */
	file?: string | null;
	/**
	 * Link
	 */
	link?: string | null;
	/**
	 * Text
	 */
	text?: string | null;
	/**
	 * Visibility
	 */
	visibility?: string;
	/**
	 * Display On Organization Page
	 *
	 * Whether the resource should be displayed on organization pages.
	 */
	display_on_organization_page?: boolean;
};

/**
 * PaginatedResponseSchema[AdditionalResourceSchema]
 */
export type PaginatedResponseSchemaAdditionalResourceSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<AdditionalResourceSchema>;
};

/**
 * MinimalRevelUserSchema
 */
export type MinimalRevelUserSchema = {
	/**
	 * Preferred Name
	 *
	 * Preferred name
	 */
	preferred_name?: string | null;
	/**
	 * Pronouns
	 *
	 * Pronouns
	 */
	pronouns?: string | null;
	/**
	 * First Name
	 */
	first_name?: string | null;
	/**
	 * Last Name
	 */
	last_name?: string | null;
	/**
	 * Email Address
	 */
	email?: string | null;
};

/**
 * OrganizationMembershipRequestRetrieve
 */
export type OrganizationMembershipRequestRetrieve = {
	user: MinimalRevelUserSchema;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Status
	 */
	status?: string;
	/**
	 * Message
	 */
	message?: string | null;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * OrganizationMembershipRequestCreateSchema
 */
export type OrganizationMembershipRequestCreateSchema = {
	/**
	 * Message
	 */
	message?: string | null;
};

/**
 * OrganizationTokenSchema
 */
export type OrganizationTokenSchema = {
	/**
	 * Created At
	 */
	created_at: string;
	/**
	 * Updated At
	 */
	updated_at: string;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Issuer
	 */
	issuer: string;
	/**
	 * Expires At
	 */
	expires_at?: string | null;
	/**
	 * Uses
	 */
	uses?: number;
	/**
	 * Max Uses
	 *
	 * The maximum number of invites allowed for this token. 0 Means unlimited.
	 */
	max_uses?: number;
	/**
	 * Organization
	 */
	organization: string;
	/**
	 * Grants Membership
	 */
	grants_membership?: boolean;
	/**
	 * Grants Staff Status
	 */
	grants_staff_status?: boolean;
};

/**
 * OrganizationAdminDetailSchema
 *
 * Comprehensive organization schema for admin use with all fields including platform fees and Stripe details.
 */
export type OrganizationAdminDetailSchema = {
	/**
	 * Tags
	 */
	tags?: Array<string>;
	city?: CitySchema | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Id
	 */
	id: string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Slug
	 */
	slug: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Logo
	 */
	logo?: string | null;
	/**
	 * Cover Art
	 */
	cover_art?: string | null;
	visibility: Visibility;
	/**
	 * Platform Fee Percent
	 */
	platform_fee_percent: number | string;
	/**
	 * Platform Fee Fixed
	 */
	platform_fee_fixed: number | string;
	/**
	 * Is Stripe Connected
	 */
	is_stripe_connected: boolean;
	/**
	 * Stripe Account Id
	 */
	stripe_account_id?: string | null;
	/**
	 * Stripe Charges Enabled
	 */
	stripe_charges_enabled: boolean;
	/**
	 * Stripe Details Submitted
	 */
	stripe_details_submitted: boolean;
	/**
	 * Accept Membership Requests
	 */
	accept_membership_requests: boolean;
	/**
	 * Contact Email
	 */
	contact_email?: string | null;
	/**
	 * Contact Email Verified
	 */
	contact_email_verified: boolean;
};

/**
 * OrganizationEditSchema
 */
export type OrganizationEditSchema = {
	/**
	 * City Id
	 */
	city_id?: number | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Description
	 */
	description?: string;
	visibility: Visibility;
	/**
	 * Accept Membership Requests
	 */
	accept_membership_requests?: boolean;
	/**
	 * Contact Email
	 */
	contact_email?: string | null;
};

/**
 * StripeOnboardingLinkSchema
 */
export type StripeOnboardingLinkSchema = {
	/**
	 * Onboarding Url
	 */
	onboarding_url: string;
};

/**
 * StripeAccountStatusSchema
 */
export type StripeAccountStatusSchema = {
	/**
	 * Is Connected
	 */
	is_connected: boolean;
	/**
	 * Charges Enabled
	 */
	charges_enabled?: boolean;
	/**
	 * Details Submitted
	 */
	details_submitted?: boolean;
};

/**
 * ValidationErrorResponse
 */
export type ValidationErrorResponse = {
	/**
	 * Errors
	 */
	errors: {
		[key: string]: string | Array<string>;
	};
};

/**
 * EventSeriesEditSchema
 */
export type EventSeriesEditSchema = {
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
};

/**
 * EventDetailSchema
 */
export type EventDetailSchema = {
	/**
	 * Tags
	 */
	tags?: Array<string>;
	city?: CitySchema | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Id
	 */
	id: string;
	event_type: Types;
	visibility: Visibility;
	organization: OrganizationRetrieveSchema;
	status: Status;
	event_series?: EventSeriesRetrieveSchema | null;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Slug
	 */
	slug: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Invitation Message
	 */
	invitation_message?: string | null;
	/**
	 * Invitation Message Html
	 */
	invitation_message_html?: string;
	/**
	 * Max Attendees
	 */
	max_attendees?: number;
	/**
	 * Waitlist Open
	 */
	waitlist_open?: boolean | null;
	/**
	 * Start
	 */
	start: string;
	/**
	 * End
	 */
	end: string;
	/**
	 * Rsvp Before
	 */
	rsvp_before?: string | null;
	/**
	 * Logo
	 */
	logo?: string | null;
	/**
	 * Cover Art
	 */
	cover_art?: string | null;
	/**
	 * Free For Members
	 */
	free_for_members: boolean;
	/**
	 * Free For Staff
	 */
	free_for_staff: boolean;
	/**
	 * Requires Ticket
	 */
	requires_ticket: boolean;
	/**
	 * Potluck Open
	 */
	potluck_open: boolean;
	/**
	 * Attendee Count
	 */
	attendee_count: number;
	/**
	 * Accept Invitation Requests
	 */
	accept_invitation_requests: boolean;
};

/**
 * EventCreateSchema
 */
export type EventCreateSchema = {
	/**
	 * City Id
	 */
	city_id?: number | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
	event_type?: Types | null;
	status?: Status;
	visibility?: Visibility | null;
	/**
	 * Invitation Message
	 *
	 * Invitation message
	 */
	invitation_message?: string | null;
	/**
	 * Max Attendees
	 */
	max_attendees?: number;
	/**
	 * Waitlist Open
	 */
	waitlist_open?: boolean;
	/**
	 * Start
	 */
	start: string;
	/**
	 * End
	 */
	end?: string | null;
	/**
	 * Rsvp Before
	 *
	 * RSVP deadline for events that do not require tickets
	 */
	rsvp_before?: string | null;
	/**
	 * Check In Starts At
	 *
	 * When check-in opens for this event
	 */
	check_in_starts_at?: string | null;
	/**
	 * Check In Ends At
	 *
	 * When check-in closes for this event
	 */
	check_in_ends_at?: string | null;
	/**
	 * Event Series Id
	 */
	event_series_id?: string | null;
	/**
	 * Free For Members
	 */
	free_for_members?: boolean;
	/**
	 * Free For Staff
	 */
	free_for_staff?: boolean;
	/**
	 * Potluck Open
	 */
	potluck_open?: boolean;
	/**
	 * Accept Invitation Requests
	 */
	accept_invitation_requests?: boolean;
};

/**
 * OrganizationTokenFilterSchema
 */
export type OrganizationTokenFilterSchema = {
	/**
	 * Is Active
	 */
	is_active?: boolean | null;
	/**
	 * Organization Id
	 */
	organization_id?: string | null;
	/**
	 * Membership Pass
	 */
	membership_pass?: boolean | null;
};

/**
 * PaginatedResponseSchema[OrganizationTokenSchema]
 */
export type PaginatedResponseSchemaOrganizationTokenSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<OrganizationTokenSchema>;
};

/**
 * OrganizationTokenCreateSchema
 */
export type OrganizationTokenCreateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Max Uses
	 */
	max_uses?: number;
	/**
	 * Grants Membership
	 */
	grants_membership?: boolean;
	/**
	 * Grants Staff Status
	 */
	grants_staff_status?: boolean;
	/**
	 * Duration
	 */
	duration?: number;
};

/**
 * OrganizationTokenUpdateSchema
 */
export type OrganizationTokenUpdateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Max Uses
	 */
	max_uses?: number;
	/**
	 * Grants Membership
	 */
	grants_membership?: boolean;
	/**
	 * Grants Staff Status
	 */
	grants_staff_status?: boolean;
	/**
	 * Expires At
	 */
	expires_at?: string | null;
};

/**
 * MembershipRequestFilterSchema
 *
 * Filter schema for organization membership requests.
 */
export type MembershipRequestFilterSchema = {
	status?: Status | null;
};

/**
 * PaginatedResponseSchema[OrganizationMembershipRequestRetrieve]
 */
export type PaginatedResponseSchemaOrganizationMembershipRequestRetrieve = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<OrganizationMembershipRequestRetrieve>;
};

/**
 * AdditionalResourceCreateSchema
 */
export type AdditionalResourceCreateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Description
	 */
	description?: string | null;
	resource_type: ResourceTypes;
	/**
	 * Visibility
	 */
	visibility?: 'public' | 'private' | 'members-only' | 'staff-only';
	/**
	 * Display On Organization Page
	 */
	display_on_organization_page?: boolean;
	/**
	 * Link
	 */
	link?: string | null;
	/**
	 * Text
	 */
	text?: string | null;
	/**
	 * Event Series Ids
	 */
	event_series_ids?: Array<string>;
	/**
	 * Event Ids
	 */
	event_ids?: Array<string>;
};

/**
 * AdditionalResourceUpdateSchema
 */
export type AdditionalResourceUpdateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Description
	 */
	description?: string | null;
	visibility?: Visibility | null;
	/**
	 * Display On Organization Page
	 */
	display_on_organization_page?: boolean | null;
	/**
	 * Link
	 */
	link?: string | null;
	/**
	 * Text
	 */
	text?: string | null;
	/**
	 * Event Series Ids
	 */
	event_series_ids?: Array<string> | null;
	/**
	 * Event Ids
	 */
	event_ids?: Array<string> | null;
};

/**
 * MemberUserSchema
 */
export type MemberUserSchema = {
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Email Address
	 */
	email?: string | null;
	/**
	 * Phone Number
	 *
	 * Phone number
	 */
	phone_number?: string | null;
	/**
	 * Preferred Name
	 *
	 * Preferred name
	 */
	preferred_name?: string | null;
	/**
	 * Pronouns
	 *
	 * Pronouns
	 */
	pronouns?: string | null;
	/**
	 * First Name
	 */
	first_name?: string | null;
	/**
	 * Last Name
	 */
	last_name?: string | null;
};

/**
 * OrganizationMemberSchema
 */
export type OrganizationMemberSchema = {
	user: MemberUserSchema;
	/**
	 * Member Since
	 */
	member_since: string;
};

/**
 * PaginatedResponseSchema[OrganizationMemberSchema]
 */
export type PaginatedResponseSchemaOrganizationMemberSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<OrganizationMemberSchema>;
};

/**
 * OrganizationStaffSchema
 */
export type OrganizationStaffSchema = {
	user: MemberUserSchema;
	/**
	 * Staff Since
	 */
	staff_since: string;
	permissions: PermissionsSchema;
};

/**
 * PaginatedResponseSchema[OrganizationStaffSchema]
 */
export type PaginatedResponseSchemaOrganizationStaffSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<OrganizationStaffSchema>;
};

/**
 * PermissionMap
 */
export type PermissionMap = {
	/**
	 * View Organization Details
	 */
	view_organization_details?: boolean;
	/**
	 * Create Event
	 */
	create_event?: boolean;
	/**
	 * Create Event Series
	 */
	create_event_series?: boolean;
	/**
	 * Edit Event Series
	 */
	edit_event_series?: boolean;
	/**
	 * Delete Event Series
	 */
	delete_event_series?: boolean;
	/**
	 * Edit Event
	 */
	edit_event?: boolean;
	/**
	 * Delete Event
	 */
	delete_event?: boolean;
	/**
	 * Open Event
	 */
	open_event?: boolean;
	/**
	 * Manage Tickets
	 */
	manage_tickets?: boolean;
	/**
	 * Close Event
	 */
	close_event?: boolean;
	/**
	 * Manage Event
	 */
	manage_event?: boolean;
	/**
	 * Check In Attendees
	 */
	check_in_attendees?: boolean;
	/**
	 * Invite To Event
	 */
	invite_to_event?: boolean;
	/**
	 * Edit Organization
	 */
	edit_organization?: boolean;
	/**
	 * Manage Members
	 */
	manage_members?: boolean;
	/**
	 * Manage Potluck
	 */
	manage_potluck?: boolean;
	/**
	 * Create Questionnaire
	 */
	create_questionnaire?: boolean;
	/**
	 * Edit Questionnaire
	 */
	edit_questionnaire?: boolean;
	/**
	 * Delete Questionnaire
	 */
	delete_questionnaire?: boolean;
	/**
	 * Evaluate Questionnaire
	 */
	evaluate_questionnaire?: boolean;
};

/**
 * PermissionsSchema
 */
export type PermissionsSchema = {
	default?: PermissionMap;
	/**
	 * Event Overrides
	 */
	event_overrides?: {
		[key: string]: PermissionMap;
	};
};

/**
 * TagSchema
 */
export type TagSchema = {
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Color
	 *
	 * Hex color (e.g. #FF0099)
	 */
	color?: string | null;
	/**
	 * Icon
	 *
	 * Optional icon name
	 */
	icon?: string | null;
};

/**
 * TagUpdateSchema
 */
export type TagUpdateSchema = {
	/**
	 * Tags
	 *
	 * A list of tag names to add or remove.
	 */
	tags: Array<string>;
};

/**
 * EventFilterSchema
 */
export type EventFilterSchema = {
	/**
	 * Country
	 */
	country?: string | null;
	/**
	 * City Id
	 */
	city_id?: number | null;
	/**
	 * Organization
	 */
	organization?: string | null;
	event_type?: Types | null;
	visibility?: Visibility | null;
	/**
	 * Event Series
	 */
	event_series?: string | null;
	/**
	 * Next Events
	 */
	next_events?: boolean | null;
	/**
	 * Past Events
	 */
	past_events?: boolean | null;
	status?: Status | null;
	/**
	 * Tags
	 */
	tags?: Array<string> | null;
};

/**
 * EventTokenSchema
 */
export type EventTokenSchema = {
	/**
	 * Created At
	 */
	created_at: string;
	/**
	 * Updated At
	 */
	updated_at: string;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Issuer
	 */
	issuer: string;
	/**
	 * Expires At
	 */
	expires_at?: string | null;
	/**
	 * Uses
	 */
	uses?: number;
	/**
	 * Max Uses
	 *
	 * The maximum number of invites allowed for this token. 0 Means unlimited.
	 */
	max_uses?: number;
	/**
	 * Event
	 */
	event: string;
	/**
	 * Grants Invitation
	 */
	grants_invitation?: boolean;
	/**
	 * Ticket Tier
	 */
	ticket_tier?: string | null;
	/**
	 * Invitation Payload
	 *
	 * If provided, the token will we viable to claim invitations.
	 */
	invitation_payload?: {
		[key: string]: unknown;
	} | null;
};

/**
 * MinimalEventSchema
 */
export type MinimalEventSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Slug
	 */
	slug: string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Start
	 */
	start?: string | null;
	/**
	 * Logo
	 */
	logo?: string | null;
};

/**
 * AttendeeSchema
 */
export type AttendeeSchema = {
	/**
	 * Preferred Name
	 *
	 * Preferred name
	 */
	preferred_name?: string | null;
	/**
	 * Pronouns
	 *
	 * Pronouns
	 */
	pronouns?: string | null;
	/**
	 * First Name
	 */
	first_name?: string | null;
	/**
	 * Last Name
	 */
	last_name?: string | null;
};

/**
 * PaginatedResponseSchema[AttendeeSchema]
 */
export type PaginatedResponseSchemaAttendeeSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<AttendeeSchema>;
};

/**
 * EventRSVPSchema
 */
export type EventRsvpSchema = {
	/**
	 * Event Id
	 */
	event_id: string;
	status: Status;
};

/**
 * EventTicketSchema
 */
export type EventTicketSchema = {
	/**
	 * Event Id
	 */
	event_id: string | null;
	tier?: TierSchema | null;
	status: Status;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Checked In At
	 */
	checked_in_at?: string | null;
};

/**
 * EventUserEligibility
 */
export type EventUserEligibility = {
	/**
	 * Allowed
	 */
	allowed: boolean;
	/**
	 * Event Id
	 */
	event_id: string;
	/**
	 * Reason
	 */
	reason?: string | null;
	next_step?: NextStep | null;
	/**
	 * Questionnaires Missing
	 */
	questionnaires_missing?: Array<string> | null;
	/**
	 * Questionnaires Pending Review
	 */
	questionnaires_pending_review?: Array<string> | null;
	/**
	 * Questionnaires Failed
	 */
	questionnaires_failed?: Array<string> | null;
	/**
	 * Retry On
	 */
	retry_on?: string | null;
};

/**
 * NextStep
 */
export type NextStep =
	| 'request_invitation'
	| 'become_member'
	| 'complete_questionnaire'
	| 'wait_for_questionnaire_evaluation'
	| 'wait_to_retake_questionnaire'
	| 'wait_for_event_to_open'
	| 'join_waitlist'
	| 'purchase_ticket'
	| 'rsvp';

/**
 * Status
 */
export type EventsModelsEventEventRsvpStatus = 'yes' | 'no' | 'maybe';

/**
 * Status
 */
export type EventsModelsEventTicketStatus = 'pending' | 'active' | 'checked_in' | 'cancelled';

/**
 * EventInvitationRequestSchema
 */
export type EventInvitationRequestSchema = {
	user: MinimalRevelUserSchema;
	event: EventInListSchema;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Message
	 */
	message?: string | null;
	/**
	 * Status
	 */
	status?: string;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * EventInvitationRequestCreateSchema
 */
export type EventInvitationRequestCreateSchema = {
	/**
	 * Message
	 */
	message?: string | null;
};

/**
 * InvitationRequestFilterSchema
 *
 * Filter schema for event invitation requests.
 */
export type InvitationRequestFilterSchema = {
	status?: Status | null;
};

/**
 * PaginatedResponseSchema[EventInvitationRequestSchema]
 */
export type PaginatedResponseSchemaEventInvitationRequestSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<EventInvitationRequestSchema>;
};

/**
 * MyEventInvitationSchema
 *
 * Schema for listing user's own EventInvitation objects with event details.
 */
export type MyEventInvitationSchema = {
	/**
	 * Id
	 */
	id: string;
	event: EventInListSchema;
	tier?: TierSchema | null;
	/**
	 * Waives Questionnaire
	 */
	waives_questionnaire: boolean;
	/**
	 * Waives Purchase
	 */
	waives_purchase: boolean;
	/**
	 * Overrides Max Attendees
	 */
	overrides_max_attendees: boolean;
	/**
	 * Waives Membership Required
	 */
	waives_membership_required: boolean;
	/**
	 * Waives Rsvp Deadline
	 */
	waives_rsvp_deadline: boolean;
	/**
	 * Custom Message
	 */
	custom_message?: string | null;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * PaginatedResponseSchema[MyEventInvitationSchema]
 */
export type PaginatedResponseSchemaMyEventInvitationSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<MyEventInvitationSchema>;
};

/**
 * PaymentMethod
 */
export type PaymentMethod = 'online' | 'offline' | 'at_the_door' | 'free';

/**
 * TicketFilterSchema
 *
 * Filter schema for tickets.
 */
export type TicketFilterSchema = {
	status?: Status | null;
	tier__payment_method?: PaymentMethod | null;
};

/**
 * PaginatedResponseSchema[UserTicketSchema]
 */
export type PaginatedResponseSchemaUserTicketSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<UserTicketSchema>;
};

/**
 * UserTicketSchema
 *
 * Schema for user's own tickets with event details.
 */
export type UserTicketSchema = {
	event: MinimalEventSchema;
	tier: TierSchema;
	status: Status;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Created At
	 */
	created_at: string;
	/**
	 * Checked In At
	 */
	checked_in_at?: string | null;
};

/**
 * StripeCheckoutSessionSchema
 */
export type StripeCheckoutSessionSchema = {
	/**
	 * Checkout Url
	 */
	checkout_url: string;
};

/**
 * PWYCCheckoutPayloadSchema
 *
 * Schema for Pay What You Can checkout payload.
 */
export type PwycCheckoutPayloadSchema = {
	/**
	 * Pwyc
	 *
	 * Pay what you can amount, minimum 1
	 */
	pwyc: number | string;
};

/**
 * EvaluationMode
 */
export type EvaluationMode = 'automatic' | 'manual' | 'hybrid';

/**
 * FreeTextQuestionSchema
 */
export type FreeTextQuestionSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Question
	 */
	question: string;
	/**
	 * Is Mandatory
	 */
	is_mandatory: boolean;
	/**
	 * Order
	 */
	order: number;
};

/**
 * MultipleChoiceOptionSchema
 */
export type MultipleChoiceOptionSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Option
	 */
	option: string;
	/**
	 * Order
	 */
	order: number;
};

/**
 * MultipleChoiceQuestionSchema
 */
export type MultipleChoiceQuestionSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Question
	 */
	question: string;
	/**
	 * Is Mandatory
	 */
	is_mandatory: boolean;
	/**
	 * Order
	 */
	order: number;
	/**
	 * Allow Multiple Answers
	 */
	allow_multiple_answers: boolean;
	/**
	 * Options
	 */
	options: Array<MultipleChoiceOptionSchema>;
};

/**
 * QuestionnaireSchema
 */
export type QuestionnaireSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Multiple Choice Questions
	 */
	multiple_choice_questions?: Array<MultipleChoiceQuestionSchema>;
	/**
	 * Free Text Questions
	 */
	free_text_questions?: Array<FreeTextQuestionSchema>;
	/**
	 * Sections
	 */
	sections?: Array<SectionSchema>;
	evaluation_mode: EvaluationMode;
};

/**
 * SectionSchema
 */
export type SectionSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Multiple Choice Questions
	 */
	multiple_choice_questions?: Array<MultipleChoiceQuestionSchema>;
	/**
	 * Free Text Questions
	 */
	free_text_questions?: Array<FreeTextQuestionSchema>;
	/**
	 * Order
	 */
	order: number;
};

/**
 * QuestionnaireEvaluationForUserSchema
 */
export type QuestionnaireEvaluationForUserSchema = {
	submission: QuestionnaireSubmissionResponseSchema;
	/**
	 * Score
	 */
	score: number | string;
	status: QuestionnairesModelsQuestionnaireEvaluationStatus;
};

/**
 * QuestionnaireSubmissionResponseSchema
 */
export type QuestionnaireSubmissionResponseSchema = {
	/**
	 * Questionnaire Id
	 */
	questionnaire_id: string;
	status: QuestionnairesModelsQuestionnaireSubmissionStatus;
	/**
	 * Submitted At
	 */
	submitted_at: string;
};

/**
 * Status
 */
export type QuestionnairesModelsQuestionnaireEvaluationStatus =
	| 'approved'
	| 'rejected'
	| 'pending review';

/**
 * Status
 */
export type QuestionnairesModelsQuestionnaireSubmissionStatus = 'draft' | 'ready';

/**
 * FreeTextSubmissionSchema
 */
export type FreeTextSubmissionSchema = {
	/**
	 * Question Id
	 */
	question_id: string;
	/**
	 * Answer
	 */
	answer: string;
};

/**
 * MultipleChoiceSubmissionSchema
 */
export type MultipleChoiceSubmissionSchema = {
	/**
	 * Question Id
	 */
	question_id: string;
	/**
	 * Options Id
	 */
	options_id: Array<string>;
};

/**
 * QuestionnaireSubmissionSchema
 */
export type QuestionnaireSubmissionSchema = {
	/**
	 * Questionnaire Id
	 */
	questionnaire_id: string;
	/**
	 * Multiple Choice Answers
	 */
	multiple_choice_answers?: Array<MultipleChoiceSubmissionSchema>;
	/**
	 * Free Text Answers
	 */
	free_text_answers?: Array<FreeTextSubmissionSchema>;
	status: Status;
};

/**
 * EventTokenUpdateSchema
 */
export type EventTokenUpdateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Max Uses
	 */
	max_uses?: number;
	invitation?: InvitationBaseSchema | null;
	/**
	 * Ticket Tier Id
	 */
	ticket_tier_id?: string | null;
	/**
	 * Expires At
	 */
	expires_at?: string | null;
};

/**
 * InvitationBaseSchema
 */
export type InvitationBaseSchema = {
	/**
	 * Waives Questionnaire
	 */
	waives_questionnaire?: boolean;
	/**
	 * Waives Purchase
	 */
	waives_purchase?: boolean;
	/**
	 * Overrides Max Attendees
	 */
	overrides_max_attendees?: boolean;
	/**
	 * Waives Membership Required
	 */
	waives_membership_required?: boolean;
	/**
	 * Waives Rsvp Deadline
	 */
	waives_rsvp_deadline?: boolean;
	/**
	 * Custom Message
	 */
	custom_message?: string | null;
};

/**
 * EventTokenFilterSchema
 */
export type EventTokenFilterSchema = {
	/**
	 * Is Active
	 */
	is_active?: boolean | null;
	/**
	 * Event Id
	 */
	event_id?: string | null;
	/**
	 * Has Invitation
	 */
	has_invitation?: boolean | null;
};

/**
 * PaginatedResponseSchema[EventTokenSchema]
 */
export type PaginatedResponseSchemaEventTokenSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<EventTokenSchema>;
};

/**
 * EventTokenCreateSchema
 */
export type EventTokenCreateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Max Uses
	 */
	max_uses?: number;
	invitation?: InvitationBaseSchema | null;
	/**
	 * Ticket Tier Id
	 */
	ticket_tier_id?: string | null;
	/**
	 * Duration
	 */
	duration?: number;
};

/**
 * EventInvitationRequestInternalSchema
 */
export type EventInvitationRequestInternalSchema = {
	user: MinimalRevelUserSchema;
	event: EventInListSchema;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Message
	 */
	message?: string | null;
	/**
	 * Status
	 */
	status?: string;
	/**
	 * Created At
	 */
	created_at: string;
	decided_by?: MinimalRevelUserSchema | null;
};

/**
 * PaginatedResponseSchema[EventInvitationRequestInternalSchema]
 */
export type PaginatedResponseSchemaEventInvitationRequestInternalSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<EventInvitationRequestInternalSchema>;
};

/**
 * EventEditSchema
 */
export type EventEditSchema = {
	/**
	 * City Id
	 */
	city_id?: number | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Description
	 */
	description?: string | null;
	event_type?: Types | null;
	status?: Status;
	visibility?: Visibility | null;
	/**
	 * Invitation Message
	 *
	 * Invitation message
	 */
	invitation_message?: string | null;
	/**
	 * Max Attendees
	 */
	max_attendees?: number;
	/**
	 * Waitlist Open
	 */
	waitlist_open?: boolean;
	/**
	 * Start
	 */
	start?: string | null;
	/**
	 * End
	 */
	end?: string | null;
	/**
	 * Rsvp Before
	 *
	 * RSVP deadline for events that do not require tickets
	 */
	rsvp_before?: string | null;
	/**
	 * Check In Starts At
	 *
	 * When check-in opens for this event
	 */
	check_in_starts_at?: string | null;
	/**
	 * Check In Ends At
	 *
	 * When check-in closes for this event
	 */
	check_in_ends_at?: string | null;
	/**
	 * Event Series Id
	 */
	event_series_id?: string | null;
	/**
	 * Free For Members
	 */
	free_for_members?: boolean;
	/**
	 * Free For Staff
	 */
	free_for_staff?: boolean;
	/**
	 * Potluck Open
	 */
	potluck_open?: boolean;
	/**
	 * Accept Invitation Requests
	 */
	accept_invitation_requests?: boolean;
};

/**
 * PaginatedResponseSchema[TicketTierDetailSchema]
 */
export type PaginatedResponseSchemaTicketTierDetailSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<TicketTierDetailSchema>;
};

/**
 * TicketTierDetailSchema
 */
export type TicketTierDetailSchema = {
	/**
	 * Event Id
	 */
	event_id: string;
	/**
	 * Total Available
	 */
	total_available?: number | null;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Visibility
	 */
	visibility?: string;
	/**
	 * Payment Method
	 */
	payment_method?: string;
	/**
	 * Purchasable By
	 */
	purchasable_by?: string;
	/**
	 * Price
	 */
	price?: number | string;
	/**
	 * Price Type
	 *
	 * Whether this tier has a fixed price or allows pay-what-you-can pricing
	 */
	price_type?: string;
	/**
	 * Pwyc Min
	 *
	 * Minimum amount for pay-what-you-can pricing
	 */
	pwyc_min?: number | string;
	/**
	 * Pwyc Max
	 *
	 * Maximum amount for pay-what-you-can pricing (optional)
	 */
	pwyc_max?: number | string | null;
	/**
	 * Currency
	 *
	 * ISO 4217 currency code
	 */
	currency?: string;
	/**
	 * Sales Start At
	 *
	 * When ticket sales begin for this tier
	 */
	sales_start_at?: string | null;
	/**
	 * Sales End At
	 *
	 * When ticket sales end for this tier
	 */
	sales_end_at?: string | null;
	/**
	 * Created At
	 */
	created_at: string;
	/**
	 * Updated At
	 */
	updated_at: string;
	/**
	 * Total Quantity
	 */
	total_quantity?: number | null;
	/**
	 * Quantity Sold
	 */
	quantity_sold?: number;
	/**
	 * Manual Payment Instructions
	 */
	manual_payment_instructions?: string | null;
};

/**
 * PriceType
 */
export type PriceType = 'fixed' | 'pwyc';

/**
 * PurchasableBy
 */
export type PurchasableBy = 'public' | 'members' | 'invited' | 'invited_and_members';

/**
 * TicketTierCreateSchema
 */
export type TicketTierCreateSchema = {
	payment_method?: PaymentMethod;
	/**
	 * Price
	 */
	price?: number | string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
	visibility?: Visibility;
	purchasable_by?: PurchasableBy;
	price_type?: PriceType;
	/**
	 * Pwyc Min
	 */
	pwyc_min?: number | string;
	/**
	 * Pwyc Max
	 */
	pwyc_max?: number | string | null;
	/**
	 * Currency
	 */
	currency?:
		| 'EUR'
		| 'USD'
		| 'GBP'
		| 'JPY'
		| 'AUD'
		| 'CAD'
		| 'CHF'
		| 'CNY'
		| 'HKD'
		| 'NZD'
		| 'SEK'
		| 'KRW'
		| 'SGD'
		| 'NOK'
		| 'MXN'
		| 'INR'
		| 'RUB'
		| 'ZAR'
		| 'TRY'
		| 'BRL'
		| 'TWD'
		| 'DKK'
		| 'PLN'
		| 'THB'
		| 'IDR'
		| 'HUF'
		| 'CZK'
		| 'ILS'
		| 'AED'
		| 'SAR'
		| 'MYR'
		| 'PHP'
		| 'CLP'
		| 'COP'
		| 'PKR'
		| 'EGP'
		| 'NGN'
		| 'VND'
		| 'BDT'
		| 'ARS'
		| 'QAR'
		| 'KWD'
		| 'BHD'
		| 'OMR'
		| 'MAD'
		| 'KES'
		| 'UAH'
		| 'RON'
		| 'BGN'
		| 'HRK'
		| 'ISK';
	/**
	 * Sales Start At
	 */
	sales_start_at?: string | null;
	/**
	 * Sales End At
	 */
	sales_end_at?: string | null;
	/**
	 * Total Quantity
	 */
	total_quantity?: number | null;
};

/**
 * TicketTierUpdateSchema
 */
export type TicketTierUpdateSchema = {
	payment_method?: PaymentMethod;
	/**
	 * Price
	 */
	price?: number | string;
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Description
	 */
	description?: string | null;
	visibility?: Visibility | null;
	purchasable_by?: PurchasableBy | null;
	price_type?: PriceType | null;
	/**
	 * Pwyc Min
	 */
	pwyc_min?: number | string | null;
	/**
	 * Pwyc Max
	 */
	pwyc_max?: number | string | null;
	/**
	 * Currency
	 */
	currency?: string | null;
	/**
	 * Sales Start At
	 */
	sales_start_at?: string | null;
	/**
	 * Sales End At
	 */
	sales_end_at?: string | null;
	/**
	 * Total Quantity
	 */
	total_quantity?: number | null;
};

/**
 * AdminTicketSchema
 *
 * Schema for pending tickets in admin interface.
 */
export type AdminTicketSchema = {
	user: MemberUserSchema;
	tier: TierSchema;
	payment?: PaymentSchema | null;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Status
	 */
	status?: string;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * PaginatedResponseSchema[AdminTicketSchema]
 */
export type PaginatedResponseSchemaAdminTicketSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<AdminTicketSchema>;
};

/**
 * PaymentSchema
 *
 * Public representation of a Payment record.
 */
export type PaymentSchema = {
	status: Status;
	/**
	 * Currency
	 */
	currency:
		| 'EUR'
		| 'USD'
		| 'GBP'
		| 'JPY'
		| 'AUD'
		| 'CAD'
		| 'CHF'
		| 'CNY'
		| 'HKD'
		| 'NZD'
		| 'SEK'
		| 'KRW'
		| 'SGD'
		| 'NOK'
		| 'MXN'
		| 'INR'
		| 'RUB'
		| 'ZAR'
		| 'TRY'
		| 'BRL'
		| 'TWD'
		| 'DKK'
		| 'PLN'
		| 'THB'
		| 'IDR'
		| 'HUF'
		| 'CZK'
		| 'ILS'
		| 'AED'
		| 'SAR'
		| 'MYR'
		| 'PHP'
		| 'CLP'
		| 'COP'
		| 'PKR'
		| 'EGP'
		| 'NGN'
		| 'VND'
		| 'BDT'
		| 'ARS'
		| 'QAR'
		| 'KWD'
		| 'BHD'
		| 'OMR'
		| 'MAD'
		| 'KES'
		| 'UAH'
		| 'RON'
		| 'BGN'
		| 'HRK'
		| 'ISK';
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Created At
	 */
	created_at: string;
	/**
	 * Updated At
	 */
	updated_at: string;
	/**
	 * Stripe Session Id
	 */
	stripe_session_id: string;
	/**
	 * Stripe Payment Intent Id
	 *
	 * Stripe PaymentIntent ID for refund processing
	 */
	stripe_payment_intent_id?: string | null;
	/**
	 * Amount
	 */
	amount: number | string;
	/**
	 * Platform Fee
	 */
	platform_fee: number | string;
	/**
	 * Expires At
	 */
	expires_at?: string;
};

/**
 * CheckInResponseSchema
 *
 * Schema for ticket check-in response.
 */
export type CheckInResponseSchema = {
	user: MinimalRevelUserSchema;
	tier?: TierSchema | null;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Status
	 */
	status?: string;
	/**
	 * Checked In At
	 */
	checked_in_at?: string | null;
};

/**
 * DirectInvitationResponseSchema
 *
 * Response schema for direct invitation creation.
 */
export type DirectInvitationResponseSchema = {
	/**
	 * Created Invitations
	 *
	 * Number of EventInvitation objects created
	 */
	created_invitations: number;
	/**
	 * Pending Invitations
	 *
	 * Number of PendingEventInvitation objects created
	 */
	pending_invitations: number;
	/**
	 * Total Invited
	 *
	 * Total number of users invited
	 */
	total_invited: number;
};

/**
 * DirectInvitationCreateSchema
 *
 * Schema for creating direct invitations to events.
 */
export type DirectInvitationCreateSchema = {
	/**
	 * Waives Questionnaire
	 */
	waives_questionnaire?: boolean;
	/**
	 * Waives Purchase
	 */
	waives_purchase?: boolean;
	/**
	 * Overrides Max Attendees
	 */
	overrides_max_attendees?: boolean;
	/**
	 * Waives Membership Required
	 */
	waives_membership_required?: boolean;
	/**
	 * Waives Rsvp Deadline
	 */
	waives_rsvp_deadline?: boolean;
	/**
	 * Custom Message
	 */
	custom_message?: string | null;
	/**
	 * Emails
	 *
	 * List of email addresses to invite
	 */
	emails: Array<string>;
	/**
	 * Tier Id
	 *
	 * Ticket tier to assign to invitations
	 */
	tier_id: string;
	/**
	 * Send Notification
	 *
	 * Whether to send notification emails
	 */
	send_notification?: boolean;
};

/**
 * EventInvitationListSchema
 *
 * Schema for listing EventInvitation objects.
 */
export type EventInvitationListSchema = {
	/**
	 * Id
	 */
	id: string;
	user: MinimalRevelUserSchema;
	tier?: TierSchema | null;
	/**
	 * Waives Questionnaire
	 */
	waives_questionnaire: boolean;
	/**
	 * Waives Purchase
	 */
	waives_purchase: boolean;
	/**
	 * Overrides Max Attendees
	 */
	overrides_max_attendees: boolean;
	/**
	 * Waives Membership Required
	 */
	waives_membership_required: boolean;
	/**
	 * Waives Rsvp Deadline
	 */
	waives_rsvp_deadline: boolean;
	/**
	 * Custom Message
	 */
	custom_message?: string | null;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * PaginatedResponseSchema[EventInvitationListSchema]
 */
export type PaginatedResponseSchemaEventInvitationListSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<EventInvitationListSchema>;
};

/**
 * PaginatedResponseSchema[PendingEventInvitationListSchema]
 */
export type PaginatedResponseSchemaPendingEventInvitationListSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<PendingEventInvitationListSchema>;
};

/**
 * PendingEventInvitationListSchema
 *
 * Schema for listing PendingEventInvitation objects.
 */
export type PendingEventInvitationListSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Email
	 */
	email: string;
	tier?: TierSchema | null;
	/**
	 * Waives Questionnaire
	 */
	waives_questionnaire: boolean;
	/**
	 * Waives Purchase
	 */
	waives_purchase: boolean;
	/**
	 * Overrides Max Attendees
	 */
	overrides_max_attendees: boolean;
	/**
	 * Waives Membership Required
	 */
	waives_membership_required: boolean;
	/**
	 * Waives Rsvp Deadline
	 */
	waives_rsvp_deadline: boolean;
	/**
	 * Custom Message
	 */
	custom_message?: string | null;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * RSVPFilterSchema
 *
 * Filter schema for event RSVPs.
 */
export type RsvpFilterSchema = {
	status?: Status | null;
	/**
	 * User Id
	 */
	user_id?: string | null;
};

/**
 * PaginatedResponseSchema[RSVPDetailSchema]
 */
export type PaginatedResponseSchemaRsvpDetailSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<RsvpDetailSchema>;
};

/**
 * RSVPDetailSchema
 *
 * Schema for RSVP details in admin views.
 */
export type RsvpDetailSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Event Id
	 */
	event_id: string;
	user: MinimalRevelUserSchema;
	status: Status;
	/**
	 * Created At
	 */
	created_at: string;
	/**
	 * Updated At
	 */
	updated_at: string;
};

/**
 * RSVPCreateSchema
 *
 * Schema for creating an RSVP on behalf of a user.
 */
export type RsvpCreateSchema = {
	/**
	 * User Id
	 */
	user_id: string;
	status: Status;
};

/**
 * RSVPUpdateSchema
 *
 * Schema for updating an RSVP.
 */
export type RsvpUpdateSchema = {
	status: Status;
};

/**
 * OrganizationPermissionsSchema
 */
export type OrganizationPermissionsSchema = {
	/**
	 * Memberships
	 */
	memberships?: Array<string>;
	/**
	 * Organization Permissions
	 */
	organization_permissions?: {
		[key: string]: PermissionsSchema | 'owner';
	} | null;
};

/**
 * EventSeriesFilterSchema
 */
export type EventSeriesFilterSchema = {
	/**
	 * Organization
	 */
	organization?: string | null;
	/**
	 * Tags
	 */
	tags?: Array<string> | null;
};

/**
 * PotluckItemRetrieveSchema
 */
export type PotluckItemRetrieveSchema = {
	/**
	 * Is Assigned
	 */
	is_assigned?: boolean;
	/**
	 * Is Owned
	 */
	is_owned?: boolean;
	/**
	 * Note Html
	 */
	note_html?: string;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Item Type
	 */
	item_type: string;
	/**
	 * Quantity
	 */
	quantity?: string | null;
	/**
	 * Note
	 */
	note?: string | null;
};

/**
 * ItemTypes
 */
export type ItemTypes =
	| 'food'
	| 'main_course'
	| 'side_dish'
	| 'dessert'
	| 'drink'
	| 'alcohol'
	| 'non_alcoholic'
	| 'supplies'
	| 'labor'
	| 'entertainment'
	| 'sexual_health'
	| 'toys'
	| 'care'
	| 'transport'
	| 'misc';

/**
 * PotluckItemCreateSchema
 */
export type PotluckItemCreateSchema = {
	item_type: ItemTypes;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Quantity
	 */
	quantity?: string | null;
	/**
	 * Note
	 */
	note?: string | null;
};

/**
 * QuestionnaireFilterSchema
 */
export type QuestionnaireFilterSchema = {
	/**
	 * Organization Id
	 */
	organization_id?: string | null;
	/**
	 * Event Id
	 */
	event_id?: string | null;
	/**
	 * Event Series Id
	 */
	event_series_id?: string | null;
};

/**
 * OrganizationQuestionnaireInListSchema
 */
export type OrganizationQuestionnaireInListSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Events
	 */
	events?: Array<MinimalEventSchema>;
	/**
	 * Event Series
	 */
	event_series?: Array<EventSeriesRetrieveSchema>;
	/**
	 * Max Submission Age
	 */
	max_submission_age?: string | number | null;
	questionnaire_type: Types;
	questionnaire: QuestionnaireInListSchema;
	/**
	 * Pending Evaluations Count
	 */
	pending_evaluations_count?: number;
};

/**
 * PaginatedResponseSchema[OrganizationQuestionnaireInListSchema]
 */
export type PaginatedResponseSchemaOrganizationQuestionnaireInListSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<OrganizationQuestionnaireInListSchema>;
};

/**
 * QuestionnaireInListSchema
 */
export type QuestionnaireInListSchema = {
	/**
	 * Name
	 */
	name: string;
	status: QuestionnairesModelsQuestionnaireStatus;
	/**
	 * Min Score
	 */
	min_score: number | string;
	/**
	 * Shuffle Questions
	 */
	shuffle_questions?: boolean;
	/**
	 * Shuffle Sections
	 */
	shuffle_sections?: boolean;
	evaluation_mode: EvaluationMode;
	/**
	 * Id
	 */
	id: string;
};

/**
 * FreeTextQuestionCreateSchema
 *
 * Schema for creating a FreeTextQuestion.
 */
export type FreeTextQuestionCreateSchema = {
	/**
	 * Section Id
	 */
	section_id?: string | null;
	/**
	 * Question
	 */
	question: string;
	/**
	 * Is Mandatory
	 */
	is_mandatory?: boolean;
	/**
	 * Order
	 */
	order?: number;
	/**
	 * Positive Weight
	 */
	positive_weight?: number | string;
	/**
	 * Negative Weight
	 */
	negative_weight?: number | string;
	/**
	 * Is Fatal
	 */
	is_fatal?: boolean;
	/**
	 * Llm Guidelines
	 */
	llm_guidelines?: string | null;
};

/**
 * MultipleChoiceOptionCreateSchema
 *
 * Schema for creating a MultipleChoiceOption.
 */
export type MultipleChoiceOptionCreateSchema = {
	/**
	 * Option
	 */
	option: string;
	/**
	 * Is Correct
	 */
	is_correct?: boolean;
	/**
	 * Order
	 */
	order?: number;
};

/**
 * MultipleChoiceQuestionCreateSchema
 *
 * Schema for creating a MultipleChoiceQuestion.
 */
export type MultipleChoiceQuestionCreateSchema = {
	/**
	 * Section Id
	 */
	section_id?: string | null;
	/**
	 * Question
	 */
	question: string;
	/**
	 * Is Mandatory
	 */
	is_mandatory?: boolean;
	/**
	 * Order
	 */
	order?: number;
	/**
	 * Positive Weight
	 */
	positive_weight?: number | string;
	/**
	 * Negative Weight
	 */
	negative_weight?: number | string;
	/**
	 * Is Fatal
	 */
	is_fatal?: boolean;
	/**
	 * Allow Multiple Answers
	 */
	allow_multiple_answers?: boolean;
	/**
	 * Shuffle Options
	 */
	shuffle_options?: boolean;
	/**
	 * Options
	 */
	options: Array<MultipleChoiceOptionCreateSchema>;
};

/**
 * OrganizationQuestionnaireSchema
 */
export type OrganizationQuestionnaireSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Events
	 */
	events?: Array<MinimalEventSchema>;
	/**
	 * Event Series
	 */
	event_series?: Array<EventSeriesRetrieveSchema>;
	/**
	 * Max Submission Age
	 */
	max_submission_age?: string | number | null;
	questionnaire_type: Types;
	questionnaire: QuestionnaireCreateSchema;
};

/**
 * QuestionnaireCreateSchema
 *
 * Schema for creating a new Questionnaire with its sections and questions.
 */
export type QuestionnaireCreateSchema = {
	/**
	 * Name
	 */
	name: string;
	status?: Status;
	/**
	 * Min Score
	 */
	min_score: number | string;
	/**
	 * Shuffle Questions
	 */
	shuffle_questions?: boolean;
	/**
	 * Shuffle Sections
	 */
	shuffle_sections?: boolean;
	evaluation_mode: EvaluationMode;
	/**
	 * Sections
	 */
	sections?: Array<SectionCreateSchema>;
	/**
	 * Multiplechoicequestion Questions
	 */
	multiplechoicequestion_questions?: Array<MultipleChoiceQuestionCreateSchema>;
	/**
	 * Freetextquestion Questions
	 */
	freetextquestion_questions?: Array<FreeTextQuestionCreateSchema>;
	/**
	 * Llm Guidelines
	 */
	llm_guidelines?: string | null;
	/**
	 * Can Retake After
	 */
	can_retake_after?: string | number | null;
};

/**
 * SectionCreateSchema
 *
 * Schema for creating a QuestionnaireSection.
 */
export type SectionCreateSchema = {
	/**
	 * Name
	 */
	name: string;
	/**
	 * Order
	 */
	order?: number;
	/**
	 * Multiplechoicequestion Questions
	 */
	multiplechoicequestion_questions?: Array<MultipleChoiceQuestionCreateSchema>;
	/**
	 * Freetextquestion Questions
	 */
	freetextquestion_questions?: Array<FreeTextQuestionCreateSchema>;
};

/**
 * OrganizationQuestionnaireCreateSchema
 *
 * Schema for creating OrganizationQuestionnaire with its underlying Questionnaire.
 *
 * Combines Questionnaire creation fields (name, sections, questions, etc.) with
 * OrganizationQuestionnaire wrapper fields (max_submission_age, questionnaire_type).
 */
export type OrganizationQuestionnaireCreateSchema = {
	/**
	 * Max Submission Age
	 */
	max_submission_age?: string | null;
	questionnaire_type?: Types;
	/**
	 * Name
	 */
	name: string;
	status?: Status;
	/**
	 * Min Score
	 */
	min_score: number | string;
	/**
	 * Shuffle Questions
	 */
	shuffle_questions?: boolean;
	/**
	 * Shuffle Sections
	 */
	shuffle_sections?: boolean;
	evaluation_mode: EvaluationMode;
	/**
	 * Sections
	 */
	sections?: Array<SectionCreateSchema>;
	/**
	 * Multiplechoicequestion Questions
	 */
	multiplechoicequestion_questions?: Array<MultipleChoiceQuestionCreateSchema>;
	/**
	 * Freetextquestion Questions
	 */
	freetextquestion_questions?: Array<FreeTextQuestionCreateSchema>;
	/**
	 * Llm Guidelines
	 */
	llm_guidelines?: string | null;
	/**
	 * Can Retake After
	 */
	can_retake_after?: string | number | null;
};

/**
 * OrganizationQuestionnaireUpdateSchema
 *
 * Schema for updating OrganizationQuestionnaire and its underlying Questionnaire.
 *
 * Includes fields from both OrganizationQuestionnaire (wrapper) and Questionnaire (the actual questionnaire).
 * All fields are optional to allow partial updates.
 */
export type OrganizationQuestionnaireUpdateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Min Score
	 */
	min_score?: number | string | null;
	/**
	 * Shuffle Questions
	 */
	shuffle_questions?: boolean | null;
	/**
	 * Shuffle Sections
	 */
	shuffle_sections?: boolean | null;
	evaluation_mode?: EvaluationMode | null;
	/**
	 * Llm Guidelines
	 */
	llm_guidelines?: string | null;
	/**
	 * Can Retake After
	 */
	can_retake_after?: string | null;
	/**
	 * Max Attempts
	 */
	max_attempts?: number;
	/**
	 * Max Submission Age
	 */
	max_submission_age?: string | null;
	questionnaire_type?: Types | null;
};

/**
 * SectionUpdateSchema
 *
 * Schema for updating a Section.
 */
export type SectionUpdateSchema = {
	/**
	 * Name
	 */
	name: string;
	/**
	 * Order
	 */
	order?: number;
	/**
	 * Multiplechoicequestion Questions
	 */
	multiplechoicequestion_questions?: Array<MultipleChoiceQuestionCreateSchema>;
	/**
	 * Freetextquestion Questions
	 */
	freetextquestion_questions?: Array<FreeTextQuestionCreateSchema>;
};

/**
 * MultipleChoiceQuestionUpdateSchema
 *
 * Schema for updating a MultipleChoiceQuestion.
 */
export type MultipleChoiceQuestionUpdateSchema = {
	/**
	 * Section Id
	 */
	section_id?: string | null;
	/**
	 * Question
	 */
	question: string;
	/**
	 * Is Mandatory
	 */
	is_mandatory?: boolean;
	/**
	 * Order
	 */
	order?: number;
	/**
	 * Positive Weight
	 */
	positive_weight?: number | string;
	/**
	 * Negative Weight
	 */
	negative_weight?: number | string;
	/**
	 * Is Fatal
	 */
	is_fatal?: boolean;
	/**
	 * Allow Multiple Answers
	 */
	allow_multiple_answers?: boolean;
	/**
	 * Shuffle Options
	 */
	shuffle_options?: boolean;
	/**
	 * Options
	 */
	options: Array<MultipleChoiceOptionCreateSchema>;
};

/**
 * MultipleChoiceOptionUpdateSchema
 *
 * Schema for updating a MultipleChoiceOption.
 */
export type MultipleChoiceOptionUpdateSchema = {
	/**
	 * Option
	 */
	option: string;
	/**
	 * Is Correct
	 */
	is_correct?: boolean;
	/**
	 * Order
	 */
	order?: number;
};

/**
 * FreeTextQuestionUpdateSchema
 *
 * Schema for updating a FreeTextQuestion.
 */
export type FreeTextQuestionUpdateSchema = {
	/**
	 * Section Id
	 */
	section_id?: string | null;
	/**
	 * Question
	 */
	question: string;
	/**
	 * Is Mandatory
	 */
	is_mandatory?: boolean;
	/**
	 * Order
	 */
	order?: number;
	/**
	 * Positive Weight
	 */
	positive_weight?: number | string;
	/**
	 * Negative Weight
	 */
	negative_weight?: number | string;
	/**
	 * Is Fatal
	 */
	is_fatal?: boolean;
	/**
	 * Llm Guidelines
	 */
	llm_guidelines?: string | null;
};

/**
 * SubmissionFilterSchema
 *
 * Filter schema for questionnaire submissions.
 */
export type SubmissionFilterSchema = {
	/**
	 * Evaluation Status
	 */
	evaluation_status?: string | null;
};

/**
 * PaginatedResponseSchema[SubmissionListItemSchema]
 */
export type PaginatedResponseSchemaSubmissionListItemSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<SubmissionListItemSchema>;
};

/**
 * SubmissionListItemSchema
 *
 * Schema for listing submissions for organization staff.
 */
export type SubmissionListItemSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * User Email
	 */
	user_email: string;
	/**
	 * User Name
	 */
	user_name: string;
	/**
	 * Questionnaire Name
	 */
	questionnaire_name: string;
	evaluation_status?: Status | null;
	/**
	 * Evaluation Score
	 */
	evaluation_score?: number | string | null;
	/**
	 * Status
	 *
	 * The status of the submission.
	 */
	status?: string;
	/**
	 * Submitted At
	 */
	submitted_at?: string | null;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * EvaluationResponseSchema
 *
 * Schema for evaluation response.
 */
export type EvaluationResponseSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Submission Id
	 */
	submission_id: string;
	status: Status;
	/**
	 * Score
	 */
	score: number | string | null;
	/**
	 * Comments
	 */
	comments: string | null;
	/**
	 * Evaluator Id
	 */
	evaluator_id: string | null;
	/**
	 * Created At
	 */
	created_at: string;
	/**
	 * Updated At
	 */
	updated_at: string;
};

/**
 * QuestionAnswerDetailSchema
 *
 * Schema for question and answer details.
 *
 * For multiple choice questions, answer_content is a list of dicts containing:
 * - option_id: UUID of the selected option
 * - option_text: Text of the selected option
 * - is_correct: Boolean indicating if this option is correct
 *
 * For free text questions, answer_content is a list with a single dict containing:
 * - answer: The free text answer string
 */
export type QuestionAnswerDetailSchema = {
	/**
	 * Question Id
	 */
	question_id: string;
	/**
	 * Question Text
	 */
	question_text: string;
	/**
	 * Question Type
	 */
	question_type: string;
	/**
	 * Answer Content
	 */
	answer_content: Array<{
		[key: string]: unknown;
	}>;
};

/**
 * SubmissionDetailSchema
 *
 * Schema for detailed view of a submission.
 */
export type SubmissionDetailSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * User Email
	 */
	user_email: string;
	/**
	 * User Name
	 */
	user_name: string;
	questionnaire: QuestionnaireInListSchema;
	status: QuestionnairesModelsQuestionnaireSubmissionStatus;
	/**
	 * Submitted At
	 */
	submitted_at: string | null;
	evaluation?: EvaluationResponseSchema | null;
	/**
	 * Answers
	 */
	answers: Array<QuestionAnswerDetailSchema>;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * Status
 */
export type QuestionnairesModelsQuestionnaireStatus = 'draft' | 'ready' | 'published';

/**
 * EvaluationCreateSchema
 *
 * Schema for creating/updating an evaluation.
 */
export type EvaluationCreateSchema = {
	status: Status;
	/**
	 * Score
	 */
	score?: number | string | null;
	/**
	 * Comments
	 */
	comments?: string | null;
};

/**
 * EventAssignmentSchema
 */
export type EventAssignmentSchema = {
	/**
	 * Event Ids
	 */
	event_ids: Array<string>;
};

/**
 * EventSeriesAssignmentSchema
 */
export type EventSeriesAssignmentSchema = {
	/**
	 * Event Series Ids
	 */
	event_series_ids: Array<string>;
};

/**
 * GeneralUserPreferencesSchema
 */
export type GeneralUserPreferencesSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	city?: CitySchema | null;
};

/**
 * VisibilityPreference
 */
export type VisibilityPreference = 'always' | 'never' | 'to_members' | 'to_invitees' | 'to_both';

/**
 * GeneralUserPreferencesUpdateSchema
 */
export type GeneralUserPreferencesUpdateSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * City Id
	 */
	city_id?: number | null;
};

/**
 * UserOrganizationPreferencesSchema
 */
export type UserOrganizationPreferencesSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * Is Subscribed
	 */
	is_subscribed: boolean;
	/**
	 * Notify On New Events
	 */
	notify_on_new_events: boolean;
};

/**
 * UserOrganizationPreferencesUpdateSchema
 */
export type UserOrganizationPreferencesUpdateSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * Is Subscribed
	 */
	is_subscribed?: boolean;
	/**
	 * Notify On New Events
	 */
	notify_on_new_events?: boolean;
};

/**
 * UserEventSeriesPreferencesSchema
 */
export type UserEventSeriesPreferencesSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * Is Subscribed
	 */
	is_subscribed: boolean;
	/**
	 * Notify On New Events
	 */
	notify_on_new_events: boolean;
};

/**
 * UserEventSeriesPreferencesUpdateSchema
 */
export type UserEventSeriesPreferencesUpdateSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * Is Subscribed
	 */
	is_subscribed?: boolean;
	/**
	 * Notify On New Events
	 */
	notify_on_new_events?: boolean;
};

/**
 * UserEventPreferencesSchema
 */
export type UserEventPreferencesSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * Is Subscribed
	 */
	is_subscribed: boolean;
	/**
	 * Notify On Potluck Updates
	 */
	notify_on_potluck_updates: boolean;
};

/**
 * UserEventPreferencesUpdateSchema
 */
export type UserEventPreferencesUpdateSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * Is Subscribed
	 */
	is_subscribed?: boolean;
	/**
	 * Notify On Potluck Updates
	 */
	notify_on_potluck_updates?: boolean;
};

/**
 * PaginatedResponseSchema[TagSchema]
 */
export type PaginatedResponseSchemaTagSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<TagSchema>;
};

/**
 * CityFilterSchema
 */
export type CityFilterSchema = {
	/**
	 * Country
	 */
	country?: string | null;
};

/**
 * PaginatedResponseSchema[CitySchema]
 */
export type PaginatedResponseSchemaCitySchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<CitySchema>;
};

export type ApiApiVersionData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/version';
};

export type ApiApiVersionResponses = {
	/**
	 * OK
	 */
	200: VersionResponse;
};

export type ApiApiVersionResponse = ApiApiVersionResponses[keyof ApiApiVersionResponses];

export type ApiApiHealthcheckData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/healthcheck';
};

export type ApiApiHealthcheckResponses = {
	/**
	 * OK
	 */
	200: ResponseOk;
};

export type ApiApiHealthcheckResponse =
	ApiApiHealthcheckResponses[keyof ApiApiHealthcheckResponses];

export type AuthObtainTokenBa100544Data = {
	body: TokenObtainPairInputSchema;
	path?: never;
	query?: never;
	url: '/api/auth/token/pair';
};

export type AuthObtainTokenBa100544Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: TokenObtainPairOutputSchema | TempToken;
};

export type AuthObtainTokenBa100544Response =
	AuthObtainTokenBa100544Responses[keyof AuthObtainTokenBa100544Responses];

export type TokenRefreshData = {
	body: TokenRefreshInputSchema;
	path?: never;
	query?: never;
	url: '/api/auth/refresh';
};

export type TokenRefreshResponses = {
	/**
	 * OK
	 */
	200: TokenRefreshOutputSchema;
};

export type TokenRefreshResponse = TokenRefreshResponses[keyof TokenRefreshResponses];

export type AuthObtainTokenWithOtp6B394F66Data = {
	body: TempTokenWithTotp;
	path?: never;
	query?: never;
	url: '/api/auth/token/pair/otp';
};

export type AuthObtainTokenWithOtp6B394F66Responses = {
	/**
	 * OK
	 */
	200: TokenObtainPairOutputSchema;
};

export type AuthObtainTokenWithOtp6B394F66Response =
	AuthObtainTokenWithOtp6B394F66Responses[keyof AuthObtainTokenWithOtp6B394F66Responses];

export type AuthGoogleLogin283Efcc9Data = {
	body: GoogleIdTokenSchema;
	path?: never;
	query?: never;
	url: '/api/auth/google/login';
};

export type AuthGoogleLogin283Efcc9Responses = {
	/**
	 * OK
	 */
	200: TokenObtainPairOutputSchema;
};

export type AuthGoogleLogin283Efcc9Response =
	AuthGoogleLogin283Efcc9Responses[keyof AuthGoogleLogin283Efcc9Responses];

export type OtpSetupOtp934A6D2cData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/otp/setup';
};

export type OtpSetupOtp934A6D2cResponses = {
	/**
	 * OK
	 */
	200: TotpProvisioningUriSchema;
};

export type OtpSetupOtp934A6D2cResponse =
	OtpSetupOtp934A6D2cResponses[keyof OtpSetupOtp934A6D2cResponses];

export type OtpEnableOtp7E071FbdData = {
	body: OtpVerifySchema;
	path?: never;
	query?: never;
	url: '/api/otp/verify';
};

export type OtpEnableOtp7E071FbdResponses = {
	/**
	 * OK
	 */
	200: RevelUserSchema;
};

export type OtpEnableOtp7E071FbdResponse =
	OtpEnableOtp7E071FbdResponses[keyof OtpEnableOtp7E071FbdResponses];

export type OtpDisableOtp0Bbab37dData = {
	body: OtpVerifySchema;
	path?: never;
	query?: never;
	url: '/api/otp/disable';
};

export type OtpDisableOtp0Bbab37dResponses = {
	/**
	 * OK
	 */
	200: RevelUserSchema;
};

export type OtpDisableOtp0Bbab37dResponse =
	OtpDisableOtp0Bbab37dResponses[keyof OtpDisableOtp0Bbab37dResponses];

export type AccountExportData82053D5dData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/account/export-data';
};

export type AccountExportData82053D5dResponses = {
	/**
	 * OK
	 */
	200: ResponseMessage;
};

export type AccountExportData82053D5dResponse =
	AccountExportData82053D5dResponses[keyof AccountExportData82053D5dResponses];

export type AccountMe4Faeda75Data = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/account/me';
};

export type AccountMe4Faeda75Responses = {
	/**
	 * OK
	 */
	200: RevelUserSchema;
};

export type AccountMe4Faeda75Response =
	AccountMe4Faeda75Responses[keyof AccountMe4Faeda75Responses];

export type AccountUpdateProfile845826AbData = {
	body: ProfileUpdateSchema;
	path?: never;
	query?: never;
	url: '/api/account/me';
};

export type AccountUpdateProfile845826AbResponses = {
	/**
	 * OK
	 */
	200: RevelUserSchema;
};

export type AccountUpdateProfile845826AbResponse =
	AccountUpdateProfile845826AbResponses[keyof AccountUpdateProfile845826AbResponses];

export type AccountRegisterDf240C8fData = {
	body: RegisterUserSchema;
	path?: never;
	query?: never;
	url: '/api/account/register';
};

export type AccountRegisterDf240C8fResponses = {
	/**
	 * Created
	 */
	201: RevelUserSchema;
};

export type AccountRegisterDf240C8fResponse =
	AccountRegisterDf240C8fResponses[keyof AccountRegisterDf240C8fResponses];

export type AccountVerifyEmail6Cf7236aData = {
	body: VerifyEmailSchema;
	path?: never;
	query?: never;
	url: '/api/account/verify';
};

export type AccountVerifyEmail6Cf7236aResponses = {
	/**
	 * OK
	 */
	200: VerifyEmailResponseSchema;
};

export type AccountVerifyEmail6Cf7236aResponse =
	AccountVerifyEmail6Cf7236aResponses[keyof AccountVerifyEmail6Cf7236aResponses];

export type AccountResendVerificationEmailFf87F5BfData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/account/verify-resend';
};

export type AccountResendVerificationEmailFf87F5BfErrors = {
	/**
	 * Bad Request
	 */
	400: ResponseMessage;
};

export type AccountResendVerificationEmailFf87F5BfError =
	AccountResendVerificationEmailFf87F5BfErrors[keyof AccountResendVerificationEmailFf87F5BfErrors];

export type AccountResendVerificationEmailFf87F5BfResponses = {
	/**
	 * OK
	 */
	200: ResponseMessage;
};

export type AccountResendVerificationEmailFf87F5BfResponse =
	AccountResendVerificationEmailFf87F5BfResponses[keyof AccountResendVerificationEmailFf87F5BfResponses];

export type AccountDeleteAccountRequest34FebeefData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/account/delete-request';
};

export type AccountDeleteAccountRequest34FebeefResponses = {
	/**
	 * OK
	 */
	200: ResponseMessage;
};

export type AccountDeleteAccountRequest34FebeefResponse =
	AccountDeleteAccountRequest34FebeefResponses[keyof AccountDeleteAccountRequest34FebeefResponses];

export type AccountDeleteAccountConfirm01Daa54aData = {
	body: DeleteAccountConfirmSchema;
	path?: never;
	query?: never;
	url: '/api/account/delete-confirm';
};

export type AccountDeleteAccountConfirm01Daa54aResponses = {
	/**
	 * OK
	 */
	200: ResponseMessage;
};

export type AccountDeleteAccountConfirm01Daa54aResponse =
	AccountDeleteAccountConfirm01Daa54aResponses[keyof AccountDeleteAccountConfirm01Daa54aResponses];

export type AccountResetPasswordRequest8367A8A1Data = {
	body: PasswordResetRequestSchema;
	path?: never;
	query?: never;
	url: '/api/account/password/reset-request';
};

export type AccountResetPasswordRequest8367A8A1Responses = {
	/**
	 * OK
	 */
	200: ResponseMessage;
};

export type AccountResetPasswordRequest8367A8A1Response =
	AccountResetPasswordRequest8367A8A1Responses[keyof AccountResetPasswordRequest8367A8A1Responses];

export type AccountResetPassword62Db228bData = {
	body: PasswordResetSchema;
	path?: never;
	query?: never;
	url: '/api/account/password/reset';
};

export type AccountResetPassword62Db228bResponses = {
	/**
	 * OK
	 */
	200: ResponseMessage;
};

export type AccountResetPassword62Db228bResponse =
	AccountResetPassword62Db228bResponses[keyof AccountResetPassword62Db228bResponses];

export type DashboardDashboardOrganizations03089DffData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Owner
		 */
		owner?: boolean;
		/**
		 * Staff
		 */
		staff?: boolean;
		/**
		 * Member
		 */
		member?: boolean;
		/**
		 * Subscriber
		 */
		subscriber?: boolean;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/dashboard/organizations';
};

export type DashboardDashboardOrganizations03089DffResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationRetrieveSchema;
};

export type DashboardDashboardOrganizations03089DffResponse =
	DashboardDashboardOrganizations03089DffResponses[keyof DashboardDashboardOrganizations03089DffResponses];

export type DashboardDashboardEventsEd17Aa73Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Owner
		 */
		owner?: boolean;
		/**
		 * Staff
		 */
		staff?: boolean;
		/**
		 * Member
		 */
		member?: boolean;
		/**
		 * Rsvp Yes
		 */
		rsvp_yes?: boolean;
		/**
		 * Rsvp No
		 */
		rsvp_no?: boolean;
		/**
		 * Rsvp Maybe
		 */
		rsvp_maybe?: boolean;
		/**
		 * Got Ticket
		 */
		got_ticket?: boolean;
		/**
		 * Got Invitation
		 */
		got_invitation?: boolean;
		/**
		 * Subscriber
		 */
		subscriber?: boolean;
		/**
		 * Order By
		 */
		order_by?: 'start' | '-start';
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/dashboard/events';
};

export type DashboardDashboardEventsEd17Aa73Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventInListSchema;
};

export type DashboardDashboardEventsEd17Aa73Response =
	DashboardDashboardEventsEd17Aa73Responses[keyof DashboardDashboardEventsEd17Aa73Responses];

export type DashboardDashboardEventSeries5B2651E7Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Owner
		 */
		owner?: boolean;
		/**
		 * Staff
		 */
		staff?: boolean;
		/**
		 * Member
		 */
		member?: boolean;
		/**
		 * Subscriber
		 */
		subscriber?: boolean;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/dashboard/event_series';
};

export type DashboardDashboardEventSeries5B2651E7Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventSeriesRetrieveSchema;
};

export type DashboardDashboardEventSeries5B2651E7Response =
	DashboardDashboardEventSeries5B2651E7Responses[keyof DashboardDashboardEventSeries5B2651E7Responses];

export type DashboardDashboardInvitationsDa84Afc9Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/dashboard/invitations';
};

export type DashboardDashboardInvitationsDa84Afc9Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaInvitationSchema;
};

export type DashboardDashboardInvitationsDa84Afc9Response =
	DashboardDashboardInvitationsDa84Afc9Responses[keyof DashboardDashboardInvitationsDa84Afc9Responses];

export type OrganizationListOrganizations3A8E0F4eData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Country
		 */
		country?: string | null;
		/**
		 * City Id
		 */
		city_id?: number | null;
		/**
		 * Tags
		 */
		tags?: Array<string> | null;
		/**
		 * Order By
		 */
		order_by?: 'name' | '-name' | 'distance';
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organizations/';
};

export type OrganizationListOrganizations3A8E0F4eResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationRetrieveSchema;
};

export type OrganizationListOrganizations3A8E0F4eResponse =
	OrganizationListOrganizations3A8E0F4eResponses[keyof OrganizationListOrganizations3A8E0F4eResponses];

export type OrganizationGetOrganization874E6733Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organizations/{slug}';
};

export type OrganizationGetOrganization874E6733Responses = {
	/**
	 * OK
	 */
	200: OrganizationRetrieveSchema;
};

export type OrganizationGetOrganization874E6733Response =
	OrganizationGetOrganization874E6733Responses[keyof OrganizationGetOrganization874E6733Responses];

export type OrganizationListResources84F9Ed99Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		resource_type?: ResourceTypes | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organizations/{slug}/resources';
};

export type OrganizationListResources84F9Ed99Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaAdditionalResourceSchema;
};

export type OrganizationListResources84F9Ed99Response =
	OrganizationListResources84F9Ed99Responses[keyof OrganizationListResources84F9Ed99Responses];

export type OrganizationCreateMembershipRequestB31Bf56aData = {
	body: OrganizationMembershipRequestCreateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organizations/{slug}/membership-requests';
};

export type OrganizationCreateMembershipRequestB31Bf56aResponses = {
	/**
	 * OK
	 */
	200: OrganizationMembershipRequestRetrieve;
};

export type OrganizationCreateMembershipRequestB31Bf56aResponse =
	OrganizationCreateMembershipRequestB31Bf56aResponses[keyof OrganizationCreateMembershipRequestB31Bf56aResponses];

export type OrganizationGetOrganizationTokenDetails5Cc8B02aData = {
	body?: never;
	path: {
		/**
		 * Token Id
		 */
		token_id: string;
	};
	query?: never;
	url: '/api/organizations/tokens/{token_id}';
};

export type OrganizationGetOrganizationTokenDetails5Cc8B02aErrors = {
	/**
	 * Not Found
	 */
	404: ResponseMessage;
};

export type OrganizationGetOrganizationTokenDetails5Cc8B02aError =
	OrganizationGetOrganizationTokenDetails5Cc8B02aErrors[keyof OrganizationGetOrganizationTokenDetails5Cc8B02aErrors];

export type OrganizationGetOrganizationTokenDetails5Cc8B02aResponses = {
	/**
	 * OK
	 */
	200: OrganizationTokenSchema;
};

export type OrganizationGetOrganizationTokenDetails5Cc8B02aResponse =
	OrganizationGetOrganizationTokenDetails5Cc8B02aResponses[keyof OrganizationGetOrganizationTokenDetails5Cc8B02aResponses];

export type OrganizationClaimInvitationD127E80eData = {
	body?: never;
	path: {
		/**
		 * Token
		 */
		token: string;
	};
	query?: never;
	url: '/api/organizations/claim-invitation/{token}';
};

export type OrganizationClaimInvitationD127E80eErrors = {
	/**
	 * Bad Request
	 */
	400: ResponseMessage;
};

export type OrganizationClaimInvitationD127E80eError =
	OrganizationClaimInvitationD127E80eErrors[keyof OrganizationClaimInvitationD127E80eErrors];

export type OrganizationClaimInvitationD127E80eResponses = {
	/**
	 * OK
	 */
	200: OrganizationRetrieveSchema;
};

export type OrganizationClaimInvitationD127E80eResponse =
	OrganizationClaimInvitationD127E80eResponses[keyof OrganizationClaimInvitationD127E80eResponses];

export type OrganizationadminGetOrganization51F4C92dData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}';
};

export type OrganizationadminGetOrganization51F4C92dResponses = {
	/**
	 * OK
	 */
	200: OrganizationAdminDetailSchema;
};

export type OrganizationadminGetOrganization51F4C92dResponse =
	OrganizationadminGetOrganization51F4C92dResponses[keyof OrganizationadminGetOrganization51F4C92dResponses];

export type OrganizationadminUpdateOrganizationD331D72bData = {
	body: OrganizationEditSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}';
};

export type OrganizationadminUpdateOrganizationD331D72bResponses = {
	/**
	 * OK
	 */
	200: OrganizationRetrieveSchema;
};

export type OrganizationadminUpdateOrganizationD331D72bResponse =
	OrganizationadminUpdateOrganizationD331D72bResponses[keyof OrganizationadminUpdateOrganizationD331D72bResponses];

export type OrganizationadminStripeConnectDdd40A23Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/stripe/connect';
};

export type OrganizationadminStripeConnectDdd40A23Responses = {
	/**
	 * OK
	 */
	200: StripeOnboardingLinkSchema;
};

export type OrganizationadminStripeConnectDdd40A23Response =
	OrganizationadminStripeConnectDdd40A23Responses[keyof OrganizationadminStripeConnectDdd40A23Responses];

export type OrganizationadminStripeAccountVerifyFf31705fData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/stripe/account/verify';
};

export type OrganizationadminStripeAccountVerifyFf31705fResponses = {
	/**
	 * OK
	 */
	200: StripeAccountStatusSchema;
};

export type OrganizationadminStripeAccountVerifyFf31705fResponse =
	OrganizationadminStripeAccountVerifyFf31705fResponses[keyof OrganizationadminStripeAccountVerifyFf31705fResponses];

export type OrganizationadminUploadLogoF0031194Data = {
	/**
	 * FileParams
	 */
	body: {
		/**
		 * Logo
		 */
		logo: Blob | File;
	};
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/upload-logo';
};

export type OrganizationadminUploadLogoF0031194Responses = {
	/**
	 * OK
	 */
	200: OrganizationRetrieveSchema;
};

export type OrganizationadminUploadLogoF0031194Response =
	OrganizationadminUploadLogoF0031194Responses[keyof OrganizationadminUploadLogoF0031194Responses];

export type OrganizationadminUploadCoverArtC500Eb3cData = {
	/**
	 * FileParams
	 */
	body: {
		/**
		 * Cover Art
		 */
		cover_art: Blob | File;
	};
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/upload-cover-art';
};

export type OrganizationadminUploadCoverArtC500Eb3cResponses = {
	/**
	 * OK
	 */
	200: OrganizationRetrieveSchema;
};

export type OrganizationadminUploadCoverArtC500Eb3cResponse =
	OrganizationadminUploadCoverArtC500Eb3cResponses[keyof OrganizationadminUploadCoverArtC500Eb3cResponses];

export type OrganizationadminDeleteLogoAb8776F9Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/delete-logo';
};

export type OrganizationadminDeleteLogoAb8776F9Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminDeleteLogoAb8776F9Response =
	OrganizationadminDeleteLogoAb8776F9Responses[keyof OrganizationadminDeleteLogoAb8776F9Responses];

export type OrganizationadminDeleteCoverArtD11Bd458Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/delete-cover-art';
};

export type OrganizationadminDeleteCoverArtD11Bd458Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminDeleteCoverArtD11Bd458Response =
	OrganizationadminDeleteCoverArtD11Bd458Responses[keyof OrganizationadminDeleteCoverArtD11Bd458Responses];

export type OrganizationadminCreateEventSeries19922164Data = {
	body: EventSeriesEditSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/create-event-series';
};

export type OrganizationadminCreateEventSeries19922164Errors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type OrganizationadminCreateEventSeries19922164Error =
	OrganizationadminCreateEventSeries19922164Errors[keyof OrganizationadminCreateEventSeries19922164Errors];

export type OrganizationadminCreateEventSeries19922164Responses = {
	/**
	 * OK
	 */
	200: EventSeriesRetrieveSchema;
};

export type OrganizationadminCreateEventSeries19922164Response =
	OrganizationadminCreateEventSeries19922164Responses[keyof OrganizationadminCreateEventSeries19922164Responses];

export type OrganizationadminCreateEvent0721A4B9Data = {
	body: EventCreateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/create-event';
};

export type OrganizationadminCreateEvent0721A4B9Errors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type OrganizationadminCreateEvent0721A4B9Error =
	OrganizationadminCreateEvent0721A4B9Errors[keyof OrganizationadminCreateEvent0721A4B9Errors];

export type OrganizationadminCreateEvent0721A4B9Responses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type OrganizationadminCreateEvent0721A4B9Response =
	OrganizationadminCreateEvent0721A4B9Responses[keyof OrganizationadminCreateEvent0721A4B9Responses];

export type OrganizationadminListOrganizationTokens8C2Bc914Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		/**
		 * Is Active
		 */
		is_active?: boolean | null;
		/**
		 * Organization Id
		 */
		organization_id?: string | null;
		/**
		 * Membership Pass
		 */
		membership_pass?: boolean | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organization-admin/{slug}/tokens';
};

export type OrganizationadminListOrganizationTokens8C2Bc914Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationTokenSchema;
};

export type OrganizationadminListOrganizationTokens8C2Bc914Response =
	OrganizationadminListOrganizationTokens8C2Bc914Responses[keyof OrganizationadminListOrganizationTokens8C2Bc914Responses];

export type OrganizationadminCreateOrganizationToken7B8D1D1aData = {
	body: OrganizationTokenCreateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/tokens';
};

export type OrganizationadminCreateOrganizationToken7B8D1D1aResponses = {
	/**
	 * OK
	 */
	200: OrganizationTokenSchema;
};

export type OrganizationadminCreateOrganizationToken7B8D1D1aResponse =
	OrganizationadminCreateOrganizationToken7B8D1D1aResponses[keyof OrganizationadminCreateOrganizationToken7B8D1D1aResponses];

export type OrganizationadminDeleteOrganizationToken40809DbfData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Token Id
		 */
		token_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/tokens/{token_id}';
};

export type OrganizationadminDeleteOrganizationToken40809DbfResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminDeleteOrganizationToken40809DbfResponse =
	OrganizationadminDeleteOrganizationToken40809DbfResponses[keyof OrganizationadminDeleteOrganizationToken40809DbfResponses];

export type OrganizationadminUpdateOrganizationToken4F23398fData = {
	body: OrganizationTokenUpdateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Token Id
		 */
		token_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/tokens/{token_id}';
};

export type OrganizationadminUpdateOrganizationToken4F23398fResponses = {
	/**
	 * OK
	 */
	200: OrganizationTokenSchema;
};

export type OrganizationadminUpdateOrganizationToken4F23398fResponse =
	OrganizationadminUpdateOrganizationToken4F23398fResponses[keyof OrganizationadminUpdateOrganizationToken4F23398fResponses];

export type OrganizationadminListMembershipRequests342BeeadData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		status?: Status | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organization-admin/{slug}/membership-requests';
};

export type OrganizationadminListMembershipRequests342BeeadResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationMembershipRequestRetrieve;
};

export type OrganizationadminListMembershipRequests342BeeadResponse =
	OrganizationadminListMembershipRequests342BeeadResponses[keyof OrganizationadminListMembershipRequests342BeeadResponses];

export type OrganizationadminApproveMembershipRequestCc1F95BcData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Request Id
		 */
		request_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/membership-requests/{request_id}/approve';
};

export type OrganizationadminApproveMembershipRequestCc1F95BcResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminApproveMembershipRequestCc1F95BcResponse =
	OrganizationadminApproveMembershipRequestCc1F95BcResponses[keyof OrganizationadminApproveMembershipRequestCc1F95BcResponses];

export type OrganizationadminRejectMembershipRequest2951D073Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Request Id
		 */
		request_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/membership-requests/{request_id}/reject';
};

export type OrganizationadminRejectMembershipRequest2951D073Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminRejectMembershipRequest2951D073Response =
	OrganizationadminRejectMembershipRequest2951D073Responses[keyof OrganizationadminRejectMembershipRequest2951D073Responses];

export type OrganizationadminListResources9C48177fData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		resource_type?: ResourceTypes | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organization-admin/{slug}/resources';
};

export type OrganizationadminListResources9C48177fResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaAdditionalResourceSchema;
};

export type OrganizationadminListResources9C48177fResponse =
	OrganizationadminListResources9C48177fResponses[keyof OrganizationadminListResources9C48177fResponses];

export type OrganizationadminCreateResource4A057784Data = {
	/**
	 * FormParams
	 */
	body: {
		/**
		 * Name
		 */
		name?: string | null;
		/**
		 * Description
		 */
		description?: string | null;
		/**
		 * ResourceTypes
		 */
		resource_type: 'file' | 'link' | 'text';
		/**
		 * Visibility
		 */
		visibility?: 'public' | 'private' | 'members-only' | 'staff-only';
		/**
		 * Display On Organization Page
		 */
		display_on_organization_page?: boolean;
		/**
		 * Link
		 */
		link?: string | null;
		/**
		 * Text
		 */
		text?: string | null;
		/**
		 * Event Series Ids
		 */
		event_series_ids?: Array<string>;
		/**
		 * Event Ids
		 */
		event_ids?: Array<string>;
	};
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/resources';
};

export type OrganizationadminCreateResource4A057784Responses = {
	/**
	 * OK
	 */
	200: AdditionalResourceSchema;
};

export type OrganizationadminCreateResource4A057784Response =
	OrganizationadminCreateResource4A057784Responses[keyof OrganizationadminCreateResource4A057784Responses];

export type OrganizationadminDeleteResourceBa2Be7A2Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Resource Id
		 */
		resource_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/resources/{resource_id}';
};

export type OrganizationadminDeleteResourceBa2Be7A2Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminDeleteResourceBa2Be7A2Response =
	OrganizationadminDeleteResourceBa2Be7A2Responses[keyof OrganizationadminDeleteResourceBa2Be7A2Responses];

export type OrganizationadminGetResource62Fe852cData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Resource Id
		 */
		resource_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/resources/{resource_id}';
};

export type OrganizationadminGetResource62Fe852cResponses = {
	/**
	 * OK
	 */
	200: AdditionalResourceSchema;
};

export type OrganizationadminGetResource62Fe852cResponse =
	OrganizationadminGetResource62Fe852cResponses[keyof OrganizationadminGetResource62Fe852cResponses];

export type OrganizationadminUpdateResource28Cfc388Data = {
	body: AdditionalResourceUpdateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Resource Id
		 */
		resource_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/resources/{resource_id}';
};

export type OrganizationadminUpdateResource28Cfc388Responses = {
	/**
	 * OK
	 */
	200: AdditionalResourceSchema;
};

export type OrganizationadminUpdateResource28Cfc388Response =
	OrganizationadminUpdateResource28Cfc388Responses[keyof OrganizationadminUpdateResource28Cfc388Responses];

export type OrganizationadminListMembersBdca46EaData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organization-admin/{slug}/members';
};

export type OrganizationadminListMembersBdca46EaResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationMemberSchema;
};

export type OrganizationadminListMembersBdca46EaResponse =
	OrganizationadminListMembersBdca46EaResponses[keyof OrganizationadminListMembersBdca46EaResponses];

export type OrganizationadminRemoveMemberE10Cdea8Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * User Id
		 */
		user_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/members/{user_id}';
};

export type OrganizationadminRemoveMemberE10Cdea8Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminRemoveMemberE10Cdea8Response =
	OrganizationadminRemoveMemberE10Cdea8Responses[keyof OrganizationadminRemoveMemberE10Cdea8Responses];

export type OrganizationadminListStaff97D37893Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organization-admin/{slug}/staff';
};

export type OrganizationadminListStaff97D37893Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationStaffSchema;
};

export type OrganizationadminListStaff97D37893Response =
	OrganizationadminListStaff97D37893Responses[keyof OrganizationadminListStaff97D37893Responses];

export type OrganizationadminRemoveStaffBb52B3B5Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * User Id
		 */
		user_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/staff/{user_id}';
};

export type OrganizationadminRemoveStaffBb52B3B5Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminRemoveStaffBb52B3B5Response =
	OrganizationadminRemoveStaffBb52B3B5Responses[keyof OrganizationadminRemoveStaffBb52B3B5Responses];

export type OrganizationadminAddStaff2Eb9262eData = {
	body?: PermissionsSchema | null;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * User Id
		 */
		user_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/staff/{user_id}';
};

export type OrganizationadminAddStaff2Eb9262eResponses = {
	/**
	 * Created
	 */
	201: OrganizationStaffSchema;
};

export type OrganizationadminAddStaff2Eb9262eResponse =
	OrganizationadminAddStaff2Eb9262eResponses[keyof OrganizationadminAddStaff2Eb9262eResponses];

export type OrganizationadminUpdateStaffPermissions8Cf67933Data = {
	body: PermissionsSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * User Id
		 */
		user_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/staff/{user_id}/permissions';
};

export type OrganizationadminUpdateStaffPermissions8Cf67933Responses = {
	/**
	 * OK
	 */
	200: OrganizationStaffSchema;
};

export type OrganizationadminUpdateStaffPermissions8Cf67933Response =
	OrganizationadminUpdateStaffPermissions8Cf67933Responses[keyof OrganizationadminUpdateStaffPermissions8Cf67933Responses];

export type OrganizationadminClearTags96F611E1Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/tags';
};

export type OrganizationadminClearTags96F611E1Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminClearTags96F611E1Response =
	OrganizationadminClearTags96F611E1Responses[keyof OrganizationadminClearTags96F611E1Responses];

export type OrganizationadminAddTagsE460560eData = {
	body: TagUpdateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/tags';
};

export type OrganizationadminAddTagsE460560eResponses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TagSchema>;
};

export type OrganizationadminAddTagsE460560eResponse =
	OrganizationadminAddTagsE460560eResponses[keyof OrganizationadminAddTagsE460560eResponses];

export type OrganizationadminRemoveTagsA553EaffData = {
	body: TagUpdateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/tags/remove';
};

export type OrganizationadminRemoveTagsA553EaffResponses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TagSchema>;
};

export type OrganizationadminRemoveTagsA553EaffResponse =
	OrganizationadminRemoveTagsA553EaffResponses[keyof OrganizationadminRemoveTagsA553EaffResponses];

export type EventListEvents60A96267Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Country
		 */
		country?: string | null;
		/**
		 * City Id
		 */
		city_id?: number | null;
		/**
		 * Organization
		 */
		organization?: string | null;
		event_type?: Types | null;
		visibility?: Visibility | null;
		/**
		 * Event Series
		 */
		event_series?: string | null;
		/**
		 * Next Events
		 */
		next_events?: boolean | null;
		/**
		 * Past Events
		 */
		past_events?: boolean | null;
		status?: Status | null;
		/**
		 * Tags
		 */
		tags?: Array<string> | null;
		/**
		 * Order By
		 */
		order_by?: 'start' | '-start' | 'distance';
		/**
		 * Include Past
		 */
		include_past?: boolean;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/events/';
};

export type EventListEvents60A96267Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventInListSchema;
};

export type EventListEvents60A96267Response =
	EventListEvents60A96267Responses[keyof EventListEvents60A96267Responses];

export type EventGetEventTokenDetailsF313C3B4Data = {
	body?: never;
	path: {
		/**
		 * Token Id
		 */
		token_id: string;
	};
	query?: never;
	url: '/api/events/tokens/{token_id}';
};

export type EventGetEventTokenDetailsF313C3B4Errors = {
	/**
	 * Not Found
	 */
	404: ResponseMessage;
};

export type EventGetEventTokenDetailsF313C3B4Error =
	EventGetEventTokenDetailsF313C3B4Errors[keyof EventGetEventTokenDetailsF313C3B4Errors];

export type EventGetEventTokenDetailsF313C3B4Responses = {
	/**
	 * OK
	 */
	200: EventTokenSchema;
};

export type EventGetEventTokenDetailsF313C3B4Response =
	EventGetEventTokenDetailsF313C3B4Responses[keyof EventGetEventTokenDetailsF313C3B4Responses];

export type EventClaimInvitation5Aae4803Data = {
	body?: never;
	path: {
		/**
		 * Token
		 */
		token: string;
	};
	query?: never;
	url: '/api/events/claim-invitation/{token}';
};

export type EventClaimInvitation5Aae4803Errors = {
	/**
	 * Bad Request
	 */
	400: ResponseMessage;
};

export type EventClaimInvitation5Aae4803Error =
	EventClaimInvitation5Aae4803Errors[keyof EventClaimInvitation5Aae4803Errors];

export type EventClaimInvitation5Aae4803Responses = {
	/**
	 * OK
	 */
	200: MinimalEventSchema;
};

export type EventClaimInvitation5Aae4803Response =
	EventClaimInvitation5Aae4803Responses[keyof EventClaimInvitation5Aae4803Responses];

export type EventGetEventAttendees7E27Bc76Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/events/{event_id}/attendee-list';
};

export type EventGetEventAttendees7E27Bc76Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaAttendeeSchema;
};

export type EventGetEventAttendees7E27Bc76Response =
	EventGetEventAttendees7E27Bc76Responses[keyof EventGetEventAttendees7E27Bc76Responses];

export type EventGetMyEventStatusDdcba665Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/my-status';
};

export type EventGetMyEventStatusDdcba665Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: EventRsvpSchema | EventTicketSchema | EventUserEligibility;
};

export type EventGetMyEventStatusDdcba665Response =
	EventGetMyEventStatusDdcba665Responses[keyof EventGetMyEventStatusDdcba665Responses];

export type EventCreateInvitationRequestCf418893Data = {
	body: EventInvitationRequestCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/invitation-requests';
};

export type EventCreateInvitationRequestCf418893Responses = {
	/**
	 * Created
	 */
	201: EventInvitationRequestSchema;
};

export type EventCreateInvitationRequestCf418893Response =
	EventCreateInvitationRequestCf418893Responses[keyof EventCreateInvitationRequestCf418893Responses];

export type EventListResources08C20F09Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		resource_type?: ResourceTypes | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/events/{event_id}/resources';
};

export type EventListResources08C20F09Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaAdditionalResourceSchema;
};

export type EventListResources08C20F09Response =
	EventListResources08C20F09Responses[keyof EventListResources08C20F09Responses];

export type EventDeleteInvitationRequest80B41F85Data = {
	body?: never;
	path: {
		/**
		 * Request Id
		 */
		request_id: string;
	};
	query?: never;
	url: '/api/events/invitation-requests/{request_id}';
};

export type EventDeleteInvitationRequest80B41F85Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventDeleteInvitationRequest80B41F85Response =
	EventDeleteInvitationRequest80B41F85Responses[keyof EventDeleteInvitationRequest80B41F85Responses];

export type EventListMyInvitationRequestsC0295D1dData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Event Id
		 */
		event_id?: string | null;
		status?: Status | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/events/me/invitation-requests';
};

export type EventListMyInvitationRequestsC0295D1dResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventInvitationRequestSchema;
};

export type EventListMyInvitationRequestsC0295D1dResponse =
	EventListMyInvitationRequestsC0295D1dResponses[keyof EventListMyInvitationRequestsC0295D1dResponses];

export type EventListMyInvitations5E2E7392Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Event Id
		 */
		event_id?: string | null;
		/**
		 * Include Past
		 */
		include_past?: boolean;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/events/me/my-invitations';
};

export type EventListMyInvitations5E2E7392Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaMyEventInvitationSchema;
};

export type EventListMyInvitations5E2E7392Response =
	EventListMyInvitations5E2E7392Responses[keyof EventListMyInvitations5E2E7392Responses];

export type EventListUserTicketsB41550A1Data = {
	body?: never;
	path?: never;
	query?: {
		status?: Status | null;
		tier__payment_method?: PaymentMethod | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/events/me/my-tickets';
};

export type EventListUserTicketsB41550A1Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaUserTicketSchema;
};

export type EventListUserTicketsB41550A1Response =
	EventListUserTicketsB41550A1Responses[keyof EventListUserTicketsB41550A1Responses];

export type EventGetEventBySlugsCcc1Eca9Data = {
	body?: never;
	path: {
		/**
		 * Org Slug
		 */
		org_slug: string;
		/**
		 * Event Slug
		 */
		event_slug: string;
	};
	query?: never;
	url: '/api/events/{org_slug}/{event_slug}';
};

export type EventGetEventBySlugsCcc1Eca9Responses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type EventGetEventBySlugsCcc1Eca9Response =
	EventGetEventBySlugsCcc1Eca9Responses[keyof EventGetEventBySlugsCcc1Eca9Responses];

export type EventGetEventD3634D35Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}';
};

export type EventGetEventD3634D35Responses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type EventGetEventD3634D35Response =
	EventGetEventD3634D35Responses[keyof EventGetEventD3634D35Responses];

export type EventRsvpEventAf187095Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Status
		 */
		answer: 'yes' | 'no' | 'maybe';
	};
	query?: never;
	url: '/api/events/{event_id}/rsvp/{answer}';
};

export type EventRsvpEventAf187095Errors = {
	/**
	 * Bad Request
	 */
	400: EventUserEligibility;
};

export type EventRsvpEventAf187095Error =
	EventRsvpEventAf187095Errors[keyof EventRsvpEventAf187095Errors];

export type EventRsvpEventAf187095Responses = {
	/**
	 * OK
	 */
	200: EventRsvpSchema;
};

export type EventRsvpEventAf187095Response =
	EventRsvpEventAf187095Responses[keyof EventRsvpEventAf187095Responses];

export type EventListTiersC7F18A94Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/tickets/tiers';
};

export type EventListTiersC7F18A94Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TierSchema>;
};

export type EventListTiersC7F18A94Response =
	EventListTiersC7F18A94Responses[keyof EventListTiersC7F18A94Responses];

export type EventTicketCheckoutEd547D79Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Tier Id
		 */
		tier_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/tickets/{tier_id}/checkout';
};

export type EventTicketCheckoutEd547D79Errors = {
	/**
	 * Bad Request
	 */
	400: EventUserEligibility;
};

export type EventTicketCheckoutEd547D79Error =
	EventTicketCheckoutEd547D79Errors[keyof EventTicketCheckoutEd547D79Errors];

export type EventTicketCheckoutEd547D79Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: StripeCheckoutSessionSchema | EventTicketSchema;
};

export type EventTicketCheckoutEd547D79Response =
	EventTicketCheckoutEd547D79Responses[keyof EventTicketCheckoutEd547D79Responses];

export type EventTicketPwycCheckout0597D990Data = {
	body: PwycCheckoutPayloadSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Tier Id
		 */
		tier_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/tickets/{tier_id}/checkout/pwyc';
};

export type EventTicketPwycCheckout0597D990Errors = {
	/**
	 * Bad Request
	 */
	400: EventUserEligibility;
};

export type EventTicketPwycCheckout0597D990Error =
	EventTicketPwycCheckout0597D990Errors[keyof EventTicketPwycCheckout0597D990Errors];

export type EventTicketPwycCheckout0597D990Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: StripeCheckoutSessionSchema | EventTicketSchema;
};

export type EventTicketPwycCheckout0597D990Response =
	EventTicketPwycCheckout0597D990Responses[keyof EventTicketPwycCheckout0597D990Responses];

export type EventGetQuestionnaire4C9B28B4Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Questionnaire Id
		 */
		questionnaire_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/questionnaire/{questionnaire_id}';
};

export type EventGetQuestionnaire4C9B28B4Responses = {
	/**
	 * OK
	 */
	200: QuestionnaireSchema;
};

export type EventGetQuestionnaire4C9B28B4Response =
	EventGetQuestionnaire4C9B28B4Responses[keyof EventGetQuestionnaire4C9B28B4Responses];

export type EventSubmitQuestionnaireCc4317BcData = {
	body: QuestionnaireSubmissionSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Questionnaire Id
		 */
		questionnaire_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/questionnaire/{questionnaire_id}/submit';
};

export type EventSubmitQuestionnaireCc4317BcErrors = {
	/**
	 * Bad Request
	 */
	400: ResponseMessage;
};

export type EventSubmitQuestionnaireCc4317BcError =
	EventSubmitQuestionnaireCc4317BcErrors[keyof EventSubmitQuestionnaireCc4317BcErrors];

export type EventSubmitQuestionnaireCc4317BcResponses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: QuestionnaireSubmissionResponseSchema | QuestionnaireEvaluationForUserSchema;
};

export type EventSubmitQuestionnaireCc4317BcResponse =
	EventSubmitQuestionnaireCc4317BcResponses[keyof EventSubmitQuestionnaireCc4317BcResponses];

export type EventadminDeleteEventToken6Cd4047cData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Token Id
		 */
		token_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tokens/{token_id}';
};

export type EventadminDeleteEventToken6Cd4047cResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminDeleteEventToken6Cd4047cResponse =
	EventadminDeleteEventToken6Cd4047cResponses[keyof EventadminDeleteEventToken6Cd4047cResponses];

export type EventadminUpdateEventToken1Ea2323aData = {
	body: EventTokenUpdateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Token Id
		 */
		token_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tokens/{token_id}';
};

export type EventadminUpdateEventToken1Ea2323aResponses = {
	/**
	 * OK
	 */
	200: EventTokenSchema;
};

export type EventadminUpdateEventToken1Ea2323aResponse =
	EventadminUpdateEventToken1Ea2323aResponses[keyof EventadminUpdateEventToken1Ea2323aResponses];

export type EventadminListEventTokens09207Af4Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Is Active
		 */
		is_active?: boolean | null;
		/**
		 * Event Id
		 */
		event_id?: string | null;
		/**
		 * Has Invitation
		 */
		has_invitation?: boolean | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/tokens';
};

export type EventadminListEventTokens09207Af4Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventTokenSchema;
};

export type EventadminListEventTokens09207Af4Response =
	EventadminListEventTokens09207Af4Responses[keyof EventadminListEventTokens09207Af4Responses];

export type EventadminCreateEventToken302516C6Data = {
	body: EventTokenCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tokens';
};

export type EventadminCreateEventToken302516C6Responses = {
	/**
	 * OK
	 */
	200: EventTokenSchema;
};

export type EventadminCreateEventToken302516C6Response =
	EventadminCreateEventToken302516C6Responses[keyof EventadminCreateEventToken302516C6Responses];

export type EventadminListInvitationRequests7F2951E9Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		status?: Status | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/invitation-requests';
};

export type EventadminListInvitationRequests7F2951E9Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventInvitationRequestInternalSchema;
};

export type EventadminListInvitationRequests7F2951E9Response =
	EventadminListInvitationRequests7F2951E9Responses[keyof EventadminListInvitationRequests7F2951E9Responses];

export type EventadminApproveInvitationRequest81493008Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Request Id
		 */
		request_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/invitation-requests/{request_id}/approve';
};

export type EventadminApproveInvitationRequest81493008Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminApproveInvitationRequest81493008Response =
	EventadminApproveInvitationRequest81493008Responses[keyof EventadminApproveInvitationRequest81493008Responses];

export type EventadminRejectInvitationRequest2Bdc0A52Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Request Id
		 */
		request_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/invitation-requests/{request_id}/reject';
};

export type EventadminRejectInvitationRequest2Bdc0A52Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminRejectInvitationRequest2Bdc0A52Response =
	EventadminRejectInvitationRequest2Bdc0A52Responses[keyof EventadminRejectInvitationRequest2Bdc0A52Responses];

export type EventadminUpdateEvent3A375Cc2Data = {
	body: EventEditSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}';
};

export type EventadminUpdateEvent3A375Cc2Errors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type EventadminUpdateEvent3A375Cc2Error =
	EventadminUpdateEvent3A375Cc2Errors[keyof EventadminUpdateEvent3A375Cc2Errors];

export type EventadminUpdateEvent3A375Cc2Responses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type EventadminUpdateEvent3A375Cc2Response =
	EventadminUpdateEvent3A375Cc2Responses[keyof EventadminUpdateEvent3A375Cc2Responses];

export type EventadminUpdateEventStatus59D8Db86Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Status
		 */
		status: 'open' | 'closed' | 'draft' | 'deleted';
	};
	query?: never;
	url: '/api/event-admin/{event_id}/actions/update-status/{status}';
};

export type EventadminUpdateEventStatus59D8Db86Responses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type EventadminUpdateEventStatus59D8Db86Response =
	EventadminUpdateEventStatus59D8Db86Responses[keyof EventadminUpdateEventStatus59D8Db86Responses];

export type EventadminUploadLogo560633D2Data = {
	/**
	 * FileParams
	 */
	body: {
		/**
		 * Logo
		 */
		logo: Blob | File;
	};
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/upload-logo';
};

export type EventadminUploadLogo560633D2Responses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type EventadminUploadLogo560633D2Response =
	EventadminUploadLogo560633D2Responses[keyof EventadminUploadLogo560633D2Responses];

export type EventadminUploadCoverArt56143338Data = {
	/**
	 * FileParams
	 */
	body: {
		/**
		 * Cover Art
		 */
		cover_art: Blob | File;
	};
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/upload-cover-art';
};

export type EventadminUploadCoverArt56143338Responses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type EventadminUploadCoverArt56143338Response =
	EventadminUploadCoverArt56143338Responses[keyof EventadminUploadCoverArt56143338Responses];

export type EventadminDeleteLogo5C7597F4Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/delete-logo';
};

export type EventadminDeleteLogo5C7597F4Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminDeleteLogo5C7597F4Response =
	EventadminDeleteLogo5C7597F4Responses[keyof EventadminDeleteLogo5C7597F4Responses];

export type EventadminDeleteCoverArtD39546CcData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/delete-cover-art';
};

export type EventadminDeleteCoverArtD39546CcResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminDeleteCoverArtD39546CcResponse =
	EventadminDeleteCoverArtD39546CcResponses[keyof EventadminDeleteCoverArtD39546CcResponses];

export type EventadminClearTags87330056Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tags';
};

export type EventadminClearTags87330056Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminClearTags87330056Response =
	EventadminClearTags87330056Responses[keyof EventadminClearTags87330056Responses];

export type EventadminAddTagsC6Fccc57Data = {
	body: TagUpdateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tags';
};

export type EventadminAddTagsC6Fccc57Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TagSchema>;
};

export type EventadminAddTagsC6Fccc57Response =
	EventadminAddTagsC6Fccc57Responses[keyof EventadminAddTagsC6Fccc57Responses];

export type EventadminRemoveTagsF35Ca25bData = {
	body: TagUpdateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tags/remove';
};

export type EventadminRemoveTagsF35Ca25bResponses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TagSchema>;
};

export type EventadminRemoveTagsF35Ca25bResponse =
	EventadminRemoveTagsF35Ca25bResponses[keyof EventadminRemoveTagsF35Ca25bResponses];

export type EventadminListTicketTiers43155AdbData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/ticket-tiers';
};

export type EventadminListTicketTiers43155AdbResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaTicketTierDetailSchema;
};

export type EventadminListTicketTiers43155AdbResponse =
	EventadminListTicketTiers43155AdbResponses[keyof EventadminListTicketTiers43155AdbResponses];

export type EventadminCreateTicketTierD4F63962Data = {
	body: TicketTierCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/ticket-tier';
};

export type EventadminCreateTicketTierD4F63962Responses = {
	/**
	 * OK
	 */
	200: TicketTierDetailSchema;
};

export type EventadminCreateTicketTierD4F63962Response =
	EventadminCreateTicketTierD4F63962Responses[keyof EventadminCreateTicketTierD4F63962Responses];

export type EventadminDeleteTicketTier4783Dc82Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Tier Id
		 */
		tier_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/ticket-tier/{tier_id}';
};

export type EventadminDeleteTicketTier4783Dc82Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminDeleteTicketTier4783Dc82Response =
	EventadminDeleteTicketTier4783Dc82Responses[keyof EventadminDeleteTicketTier4783Dc82Responses];

export type EventadminUpdateTicketTierD326F24eData = {
	body: TicketTierUpdateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Tier Id
		 */
		tier_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/ticket-tier/{tier_id}';
};

export type EventadminUpdateTicketTierD326F24eResponses = {
	/**
	 * OK
	 */
	200: TicketTierDetailSchema;
};

export type EventadminUpdateTicketTierD326F24eResponse =
	EventadminUpdateTicketTierD326F24eResponses[keyof EventadminUpdateTicketTierD326F24eResponses];

export type EventadminListTickets08E090FeData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		status?: Status | null;
		tier__payment_method?: PaymentMethod | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/tickets';
};

export type EventadminListTickets08E090FeResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaAdminTicketSchema;
};

export type EventadminListTickets08E090FeResponse =
	EventadminListTickets08E090FeResponses[keyof EventadminListTickets08E090FeResponses];

export type EventadminGetTicket831206BaData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Ticket Id
		 */
		ticket_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tickets/{ticket_id}';
};

export type EventadminGetTicket831206BaResponses = {
	/**
	 * OK
	 */
	200: AdminTicketSchema;
};

export type EventadminGetTicket831206BaResponse =
	EventadminGetTicket831206BaResponses[keyof EventadminGetTicket831206BaResponses];

export type EventadminConfirmTicketPaymentAc5E2AecData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Ticket Id
		 */
		ticket_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tickets/{ticket_id}/confirm-payment';
};

export type EventadminConfirmTicketPaymentAc5E2AecResponses = {
	/**
	 * OK
	 */
	200: EventTicketSchema;
};

export type EventadminConfirmTicketPaymentAc5E2AecResponse =
	EventadminConfirmTicketPaymentAc5E2AecResponses[keyof EventadminConfirmTicketPaymentAc5E2AecResponses];

export type EventadminMarkTicketRefundedA6F6A6D8Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Ticket Id
		 */
		ticket_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tickets/{ticket_id}/mark-refunded';
};

export type EventadminMarkTicketRefundedA6F6A6D8Responses = {
	/**
	 * OK
	 */
	200: EventTicketSchema;
};

export type EventadminMarkTicketRefundedA6F6A6D8Response =
	EventadminMarkTicketRefundedA6F6A6D8Responses[keyof EventadminMarkTicketRefundedA6F6A6D8Responses];

export type EventadminCancelTicketF8538859Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Ticket Id
		 */
		ticket_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tickets/{ticket_id}/cancel';
};

export type EventadminCancelTicketF8538859Responses = {
	/**
	 * OK
	 */
	200: EventTicketSchema;
};

export type EventadminCancelTicketF8538859Response =
	EventadminCancelTicketF8538859Responses[keyof EventadminCancelTicketF8538859Responses];

export type EventadminCheckInTicketC7299Cf1Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Ticket Id
		 */
		ticket_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tickets/{ticket_id}/check-in';
};

export type EventadminCheckInTicketC7299Cf1Errors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type EventadminCheckInTicketC7299Cf1Error =
	EventadminCheckInTicketC7299Cf1Errors[keyof EventadminCheckInTicketC7299Cf1Errors];

export type EventadminCheckInTicketC7299Cf1Responses = {
	/**
	 * OK
	 */
	200: CheckInResponseSchema;
};

export type EventadminCheckInTicketC7299Cf1Response =
	EventadminCheckInTicketC7299Cf1Responses[keyof EventadminCheckInTicketC7299Cf1Responses];

export type EventadminListInvitationsEa828E3bData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/invitations';
};

export type EventadminListInvitationsEa828E3bResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventInvitationListSchema;
};

export type EventadminListInvitationsEa828E3bResponse =
	EventadminListInvitationsEa828E3bResponses[keyof EventadminListInvitationsEa828E3bResponses];

export type EventadminCreateInvitations2Fde9EdcData = {
	body: DirectInvitationCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/invitations';
};

export type EventadminCreateInvitations2Fde9EdcErrors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type EventadminCreateInvitations2Fde9EdcError =
	EventadminCreateInvitations2Fde9EdcErrors[keyof EventadminCreateInvitations2Fde9EdcErrors];

export type EventadminCreateInvitations2Fde9EdcResponses = {
	/**
	 * OK
	 */
	200: DirectInvitationResponseSchema;
};

export type EventadminCreateInvitations2Fde9EdcResponse =
	EventadminCreateInvitations2Fde9EdcResponses[keyof EventadminCreateInvitations2Fde9EdcResponses];

export type EventadminListPendingInvitationsB5504CceData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/pending-invitations';
};

export type EventadminListPendingInvitationsB5504CceResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaPendingEventInvitationListSchema;
};

export type EventadminListPendingInvitationsB5504CceResponse =
	EventadminListPendingInvitationsB5504CceResponses[keyof EventadminListPendingInvitationsB5504CceResponses];

export type EventadminDeleteInvitationEndpointD2470CfeData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Invitation Type
		 */
		invitation_type: 'registered' | 'pending';
		/**
		 * Invitation Id
		 */
		invitation_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/invitations/{invitation_type}/{invitation_id}';
};

export type EventadminDeleteInvitationEndpointD2470CfeErrors = {
	/**
	 * Not Found
	 */
	404: ValidationErrorResponse;
};

export type EventadminDeleteInvitationEndpointD2470CfeError =
	EventadminDeleteInvitationEndpointD2470CfeErrors[keyof EventadminDeleteInvitationEndpointD2470CfeErrors];

export type EventadminDeleteInvitationEndpointD2470CfeResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminDeleteInvitationEndpointD2470CfeResponse =
	EventadminDeleteInvitationEndpointD2470CfeResponses[keyof EventadminDeleteInvitationEndpointD2470CfeResponses];

export type EventadminListRsvps21957408Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		status?: Status | null;
		/**
		 * User Id
		 */
		user_id?: string | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/rsvps';
};

export type EventadminListRsvps21957408Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaRsvpDetailSchema;
};

export type EventadminListRsvps21957408Response =
	EventadminListRsvps21957408Responses[keyof EventadminListRsvps21957408Responses];

export type EventadminCreateRsvp493B195fData = {
	body: RsvpCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/rsvps';
};

export type EventadminCreateRsvp493B195fResponses = {
	/**
	 * OK
	 */
	200: RsvpDetailSchema;
};

export type EventadminCreateRsvp493B195fResponse =
	EventadminCreateRsvp493B195fResponses[keyof EventadminCreateRsvp493B195fResponses];

export type EventadminDeleteRsvpA4B98788Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Rsvp Id
		 */
		rsvp_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/rsvps/{rsvp_id}';
};

export type EventadminDeleteRsvpA4B98788Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminDeleteRsvpA4B98788Response =
	EventadminDeleteRsvpA4B98788Responses[keyof EventadminDeleteRsvpA4B98788Responses];

export type EventadminGetRsvp298Deea8Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Rsvp Id
		 */
		rsvp_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/rsvps/{rsvp_id}';
};

export type EventadminGetRsvp298Deea8Responses = {
	/**
	 * OK
	 */
	200: RsvpDetailSchema;
};

export type EventadminGetRsvp298Deea8Response =
	EventadminGetRsvp298Deea8Responses[keyof EventadminGetRsvp298Deea8Responses];

export type EventadminUpdateRsvp53Eeb702Data = {
	body: RsvpUpdateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Rsvp Id
		 */
		rsvp_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/rsvps/{rsvp_id}';
};

export type EventadminUpdateRsvp53Eeb702Responses = {
	/**
	 * OK
	 */
	200: RsvpDetailSchema;
};

export type EventadminUpdateRsvp53Eeb702Response =
	EventadminUpdateRsvp53Eeb702Responses[keyof EventadminUpdateRsvp53Eeb702Responses];

export type PermissionMyPermissions77Db8868Data = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/permissions/my-permissions';
};

export type PermissionMyPermissions77Db8868Responses = {
	/**
	 * OK
	 */
	200: OrganizationPermissionsSchema;
};

export type PermissionMyPermissions77Db8868Response =
	PermissionMyPermissions77Db8868Responses[keyof PermissionMyPermissions77Db8868Responses];

export type EventseriesListEventSeriesE6B584E3Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Organization
		 */
		organization?: string | null;
		/**
		 * Tags
		 */
		tags?: Array<string> | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-series/';
};

export type EventseriesListEventSeriesE6B584E3Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventSeriesRetrieveSchema;
};

export type EventseriesListEventSeriesE6B584E3Response =
	EventseriesListEventSeriesE6B584E3Responses[keyof EventseriesListEventSeriesE6B584E3Responses];

export type EventseriesGetEventSeriesBySlugs10B4B61cData = {
	body?: never;
	path: {
		/**
		 * Org Slug
		 */
		org_slug: string;
		/**
		 * Series Slug
		 */
		series_slug: string;
	};
	query?: never;
	url: '/api/event-series/{org_slug}/{series_slug}';
};

export type EventseriesGetEventSeriesBySlugs10B4B61cResponses = {
	/**
	 * OK
	 */
	200: EventSeriesRetrieveSchema;
};

export type EventseriesGetEventSeriesBySlugs10B4B61cResponse =
	EventseriesGetEventSeriesBySlugs10B4B61cResponses[keyof EventseriesGetEventSeriesBySlugs10B4B61cResponses];

export type EventseriesGetEventSeriesF20B9D72Data = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series/{series_id}';
};

export type EventseriesGetEventSeriesF20B9D72Responses = {
	/**
	 * OK
	 */
	200: EventSeriesRetrieveSchema;
};

export type EventseriesGetEventSeriesF20B9D72Response =
	EventseriesGetEventSeriesF20B9D72Responses[keyof EventseriesGetEventSeriesF20B9D72Responses];

export type EventseriesListResources02799824Data = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: {
		resource_type?: ResourceTypes | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-series/{series_id}/resources';
};

export type EventseriesListResources02799824Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaAdditionalResourceSchema;
};

export type EventseriesListResources02799824Response =
	EventseriesListResources02799824Responses[keyof EventseriesListResources02799824Responses];

export type EventseriesadminDeleteEventSeries33B4C0F5Data = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/';
};

export type EventseriesadminDeleteEventSeries33B4C0F5Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventseriesadminDeleteEventSeries33B4C0F5Response =
	EventseriesadminDeleteEventSeries33B4C0F5Responses[keyof EventseriesadminDeleteEventSeries33B4C0F5Responses];

export type EventseriesadminUpdateEventSeries0Bc125A5Data = {
	body: EventSeriesEditSchema;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/';
};

export type EventseriesadminUpdateEventSeries0Bc125A5Errors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type EventseriesadminUpdateEventSeries0Bc125A5Error =
	EventseriesadminUpdateEventSeries0Bc125A5Errors[keyof EventseriesadminUpdateEventSeries0Bc125A5Errors];

export type EventseriesadminUpdateEventSeries0Bc125A5Responses = {
	/**
	 * OK
	 */
	200: EventSeriesRetrieveSchema;
};

export type EventseriesadminUpdateEventSeries0Bc125A5Response =
	EventseriesadminUpdateEventSeries0Bc125A5Responses[keyof EventseriesadminUpdateEventSeries0Bc125A5Responses];

export type EventseriesadminUploadLogoD8B3E381Data = {
	/**
	 * FileParams
	 */
	body: {
		/**
		 * Logo
		 */
		logo: Blob | File;
	};
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/upload-logo';
};

export type EventseriesadminUploadLogoD8B3E381Responses = {
	/**
	 * OK
	 */
	200: EventSeriesRetrieveSchema;
};

export type EventseriesadminUploadLogoD8B3E381Response =
	EventseriesadminUploadLogoD8B3E381Responses[keyof EventseriesadminUploadLogoD8B3E381Responses];

export type EventseriesadminUploadCoverArt7C2F06A9Data = {
	/**
	 * FileParams
	 */
	body: {
		/**
		 * Cover Art
		 */
		cover_art: Blob | File;
	};
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/upload-cover-art';
};

export type EventseriesadminUploadCoverArt7C2F06A9Responses = {
	/**
	 * OK
	 */
	200: EventSeriesRetrieveSchema;
};

export type EventseriesadminUploadCoverArt7C2F06A9Response =
	EventseriesadminUploadCoverArt7C2F06A9Responses[keyof EventseriesadminUploadCoverArt7C2F06A9Responses];

export type EventseriesadminDeleteLogoD85563C5Data = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/delete-logo';
};

export type EventseriesadminDeleteLogoD85563C5Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventseriesadminDeleteLogoD85563C5Response =
	EventseriesadminDeleteLogoD85563C5Responses[keyof EventseriesadminDeleteLogoD85563C5Responses];

export type EventseriesadminDeleteCoverArt70B1E2D2Data = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/delete-cover-art';
};

export type EventseriesadminDeleteCoverArt70B1E2D2Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventseriesadminDeleteCoverArt70B1E2D2Response =
	EventseriesadminDeleteCoverArt70B1E2D2Responses[keyof EventseriesadminDeleteCoverArt70B1E2D2Responses];

export type EventseriesadminClearTags9C1C50C3Data = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/tags';
};

export type EventseriesadminClearTags9C1C50C3Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventseriesadminClearTags9C1C50C3Response =
	EventseriesadminClearTags9C1C50C3Responses[keyof EventseriesadminClearTags9C1C50C3Responses];

export type EventseriesadminAddTags7483365eData = {
	body: TagUpdateSchema;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/tags';
};

export type EventseriesadminAddTags7483365eResponses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TagSchema>;
};

export type EventseriesadminAddTags7483365eResponse =
	EventseriesadminAddTags7483365eResponses[keyof EventseriesadminAddTags7483365eResponses];

export type EventseriesadminRemoveTagsC83D8036Data = {
	body: TagUpdateSchema;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/tags/remove';
};

export type EventseriesadminRemoveTagsC83D8036Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TagSchema>;
};

export type EventseriesadminRemoveTagsC83D8036Response =
	EventseriesadminRemoveTagsC83D8036Responses[keyof EventseriesadminRemoveTagsC83D8036Responses];

export type PotluckListPotluckItems3A5B0D96Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/potluck/';
};

export type PotluckListPotluckItems3A5B0D96Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<PotluckItemRetrieveSchema>;
};

export type PotluckListPotluckItems3A5B0D96Response =
	PotluckListPotluckItems3A5B0D96Responses[keyof PotluckListPotluckItems3A5B0D96Responses];

export type PotluckCreatePotluckItemCce304A1Data = {
	body: PotluckItemCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/potluck/';
};

export type PotluckCreatePotluckItemCce304A1Responses = {
	/**
	 * OK
	 */
	200: PotluckItemRetrieveSchema;
};

export type PotluckCreatePotluckItemCce304A1Response =
	PotluckCreatePotluckItemCce304A1Responses[keyof PotluckCreatePotluckItemCce304A1Responses];

export type PotluckDeletePotluckItem16E3F7A6Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Item Id
		 */
		item_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/potluck/{item_id}';
};

export type PotluckDeletePotluckItem16E3F7A6Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type PotluckDeletePotluckItem16E3F7A6Response =
	PotluckDeletePotluckItem16E3F7A6Responses[keyof PotluckDeletePotluckItem16E3F7A6Responses];

export type PotluckUpdatePotluckItem97Fee8EeData = {
	body: PotluckItemCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Item Id
		 */
		item_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/potluck/{item_id}';
};

export type PotluckUpdatePotluckItem97Fee8EeResponses = {
	/**
	 * OK
	 */
	200: PotluckItemRetrieveSchema;
};

export type PotluckUpdatePotluckItem97Fee8EeResponse =
	PotluckUpdatePotluckItem97Fee8EeResponses[keyof PotluckUpdatePotluckItem97Fee8EeResponses];

export type PotluckClaimPotluckItem0C005A3bData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Item Id
		 */
		item_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/potluck/{item_id}/claim';
};

export type PotluckClaimPotluckItem0C005A3bResponses = {
	/**
	 * OK
	 */
	200: PotluckItemRetrieveSchema;
};

export type PotluckClaimPotluckItem0C005A3bResponse =
	PotluckClaimPotluckItem0C005A3bResponses[keyof PotluckClaimPotluckItem0C005A3bResponses];

export type PotluckUnclaimPotluckItem6341Bb58Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Item Id
		 */
		item_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/potluck/{item_id}/unclaim';
};

export type PotluckUnclaimPotluckItem6341Bb58Responses = {
	/**
	 * OK
	 */
	200: PotluckItemRetrieveSchema;
};

export type PotluckUnclaimPotluckItem6341Bb58Response =
	PotluckUnclaimPotluckItem6341Bb58Responses[keyof PotluckUnclaimPotluckItem6341Bb58Responses];

export type QuestionnaireListOrgQuestionnairesCba8673aData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Organization Id
		 */
		organization_id?: string | null;
		/**
		 * Event Id
		 */
		event_id?: string | null;
		/**
		 * Event Series Id
		 */
		event_series_id?: string | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/questionnaires/';
};

export type QuestionnaireListOrgQuestionnairesCba8673aResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationQuestionnaireInListSchema;
};

export type QuestionnaireListOrgQuestionnairesCba8673aResponse =
	QuestionnaireListOrgQuestionnairesCba8673aResponses[keyof QuestionnaireListOrgQuestionnairesCba8673aResponses];

export type QuestionnaireCreateOrgQuestionnaireE307Fb33Data = {
	body: OrganizationQuestionnaireCreateSchema;
	path: {
		/**
		 * Organization Id
		 */
		organization_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{organization_id}/create-questionnaire';
};

export type QuestionnaireCreateOrgQuestionnaireE307Fb33Errors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type QuestionnaireCreateOrgQuestionnaireE307Fb33Error =
	QuestionnaireCreateOrgQuestionnaireE307Fb33Errors[keyof QuestionnaireCreateOrgQuestionnaireE307Fb33Errors];

export type QuestionnaireCreateOrgQuestionnaireE307Fb33Responses = {
	/**
	 * OK
	 */
	200: OrganizationQuestionnaireSchema;
};

export type QuestionnaireCreateOrgQuestionnaireE307Fb33Response =
	QuestionnaireCreateOrgQuestionnaireE307Fb33Responses[keyof QuestionnaireCreateOrgQuestionnaireE307Fb33Responses];

export type QuestionnaireDeleteOrgQuestionnaire06A20CbfData = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}';
};

export type QuestionnaireDeleteOrgQuestionnaire06A20CbfResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type QuestionnaireDeleteOrgQuestionnaire06A20CbfResponse =
	QuestionnaireDeleteOrgQuestionnaire06A20CbfResponses[keyof QuestionnaireDeleteOrgQuestionnaire06A20CbfResponses];

export type QuestionnaireGetOrgQuestionnaire8Fc31Ba2Data = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}';
};

export type QuestionnaireGetOrgQuestionnaire8Fc31Ba2Responses = {
	/**
	 * OK
	 */
	200: OrganizationQuestionnaireSchema;
};

export type QuestionnaireGetOrgQuestionnaire8Fc31Ba2Response =
	QuestionnaireGetOrgQuestionnaire8Fc31Ba2Responses[keyof QuestionnaireGetOrgQuestionnaire8Fc31Ba2Responses];

export type QuestionnaireUpdateOrgQuestionnaire40Db842cData = {
	body: OrganizationQuestionnaireUpdateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}';
};

export type QuestionnaireUpdateOrgQuestionnaire40Db842cResponses = {
	/**
	 * OK
	 */
	200: OrganizationQuestionnaireSchema;
};

export type QuestionnaireUpdateOrgQuestionnaire40Db842cResponse =
	QuestionnaireUpdateOrgQuestionnaire40Db842cResponses[keyof QuestionnaireUpdateOrgQuestionnaire40Db842cResponses];

export type QuestionnaireCreateSection2F784A84Data = {
	body: SectionCreateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/sections';
};

export type QuestionnaireCreateSection2F784A84Responses = {
	/**
	 * OK
	 */
	200: SectionUpdateSchema;
};

export type QuestionnaireCreateSection2F784A84Response =
	QuestionnaireCreateSection2F784A84Responses[keyof QuestionnaireCreateSection2F784A84Responses];

export type QuestionnaireDeleteSection124D0C11Data = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Section Id
		 */
		section_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/sections/{section_id}';
};

export type QuestionnaireDeleteSection124D0C11Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type QuestionnaireDeleteSection124D0C11Response =
	QuestionnaireDeleteSection124D0C11Responses[keyof QuestionnaireDeleteSection124D0C11Responses];

export type QuestionnaireUpdateSection1A6A1B99Data = {
	body: SectionUpdateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Section Id
		 */
		section_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/sections/{section_id}';
};

export type QuestionnaireUpdateSection1A6A1B99Responses = {
	/**
	 * OK
	 */
	200: SectionUpdateSchema;
};

export type QuestionnaireUpdateSection1A6A1B99Response =
	QuestionnaireUpdateSection1A6A1B99Responses[keyof QuestionnaireUpdateSection1A6A1B99Responses];

export type QuestionnaireCreateMcQuestion145D3E4eData = {
	body: MultipleChoiceQuestionCreateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/multiple-choice-questions';
};

export type QuestionnaireCreateMcQuestion145D3E4eResponses = {
	/**
	 * OK
	 */
	200: MultipleChoiceQuestionUpdateSchema;
};

export type QuestionnaireCreateMcQuestion145D3E4eResponse =
	QuestionnaireCreateMcQuestion145D3E4eResponses[keyof QuestionnaireCreateMcQuestion145D3E4eResponses];

export type QuestionnaireDeleteMcQuestion59C4D0B2Data = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Question Id
		 */
		question_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/multiple-choice-questions/{question_id}';
};

export type QuestionnaireDeleteMcQuestion59C4D0B2Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type QuestionnaireDeleteMcQuestion59C4D0B2Response =
	QuestionnaireDeleteMcQuestion59C4D0B2Responses[keyof QuestionnaireDeleteMcQuestion59C4D0B2Responses];

export type QuestionnaireUpdateMcQuestionCc775596Data = {
	body: MultipleChoiceQuestionUpdateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Question Id
		 */
		question_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/multiple-choice-questions/{question_id}';
};

export type QuestionnaireUpdateMcQuestionCc775596Responses = {
	/**
	 * OK
	 */
	200: MultipleChoiceQuestionUpdateSchema;
};

export type QuestionnaireUpdateMcQuestionCc775596Response =
	QuestionnaireUpdateMcQuestionCc775596Responses[keyof QuestionnaireUpdateMcQuestionCc775596Responses];

export type QuestionnaireCreateMcOption21776127Data = {
	body: MultipleChoiceOptionCreateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Question Id
		 */
		question_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/multiple-choice-questions/{question_id}/options';
};

export type QuestionnaireCreateMcOption21776127Responses = {
	/**
	 * OK
	 */
	200: MultipleChoiceOptionUpdateSchema;
};

export type QuestionnaireCreateMcOption21776127Response =
	QuestionnaireCreateMcOption21776127Responses[keyof QuestionnaireCreateMcOption21776127Responses];

export type QuestionnaireDeleteMcOptionE2Ed64CbData = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Option Id
		 */
		option_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/multiple-choice-options/{option_id}';
};

export type QuestionnaireDeleteMcOptionE2Ed64CbResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type QuestionnaireDeleteMcOptionE2Ed64CbResponse =
	QuestionnaireDeleteMcOptionE2Ed64CbResponses[keyof QuestionnaireDeleteMcOptionE2Ed64CbResponses];

export type QuestionnaireUpdateMcOption40390478Data = {
	body: MultipleChoiceOptionUpdateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Option Id
		 */
		option_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/multiple-choice-options/{option_id}';
};

export type QuestionnaireUpdateMcOption40390478Responses = {
	/**
	 * OK
	 */
	200: MultipleChoiceOptionUpdateSchema;
};

export type QuestionnaireUpdateMcOption40390478Response =
	QuestionnaireUpdateMcOption40390478Responses[keyof QuestionnaireUpdateMcOption40390478Responses];

export type QuestionnaireCreateFtQuestion8721178fData = {
	body: FreeTextQuestionCreateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/free-text-questions';
};

export type QuestionnaireCreateFtQuestion8721178fResponses = {
	/**
	 * OK
	 */
	200: FreeTextQuestionUpdateSchema;
};

export type QuestionnaireCreateFtQuestion8721178fResponse =
	QuestionnaireCreateFtQuestion8721178fResponses[keyof QuestionnaireCreateFtQuestion8721178fResponses];

export type QuestionnaireDeleteFtQuestionD4Ab1Af7Data = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Question Id
		 */
		question_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/free-text-questions/{question_id}';
};

export type QuestionnaireDeleteFtQuestionD4Ab1Af7Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type QuestionnaireDeleteFtQuestionD4Ab1Af7Response =
	QuestionnaireDeleteFtQuestionD4Ab1Af7Responses[keyof QuestionnaireDeleteFtQuestionD4Ab1Af7Responses];

export type QuestionnaireUpdateFtQuestionC3550EdfData = {
	body: FreeTextQuestionUpdateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Question Id
		 */
		question_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/free-text-questions/{question_id}';
};

export type QuestionnaireUpdateFtQuestionC3550EdfResponses = {
	/**
	 * OK
	 */
	200: FreeTextQuestionUpdateSchema;
};

export type QuestionnaireUpdateFtQuestionC3550EdfResponse =
	QuestionnaireUpdateFtQuestionC3550EdfResponses[keyof QuestionnaireUpdateFtQuestionC3550EdfResponses];

export type QuestionnaireListSubmissions185F178eData = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: {
		/**
		 * Evaluation Status
		 */
		evaluation_status?: string | null;
		/**
		 * Order By
		 */
		order_by?: 'submitted_at' | '-submitted_at';
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/questionnaires/{org_questionnaire_id}/submissions';
};

export type QuestionnaireListSubmissions185F178eResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaSubmissionListItemSchema;
};

export type QuestionnaireListSubmissions185F178eResponse =
	QuestionnaireListSubmissions185F178eResponses[keyof QuestionnaireListSubmissions185F178eResponses];

export type QuestionnaireGetSubmissionDetail7D2Ea569Data = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Submission Id
		 */
		submission_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/submissions/{submission_id}';
};

export type QuestionnaireGetSubmissionDetail7D2Ea569Responses = {
	/**
	 * OK
	 */
	200: SubmissionDetailSchema;
};

export type QuestionnaireGetSubmissionDetail7D2Ea569Response =
	QuestionnaireGetSubmissionDetail7D2Ea569Responses[keyof QuestionnaireGetSubmissionDetail7D2Ea569Responses];

export type QuestionnaireEvaluateSubmissionCd240832Data = {
	body: EvaluationCreateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Submission Id
		 */
		submission_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/submissions/{submission_id}/evaluate';
};

export type QuestionnaireEvaluateSubmissionCd240832Errors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type QuestionnaireEvaluateSubmissionCd240832Error =
	QuestionnaireEvaluateSubmissionCd240832Errors[keyof QuestionnaireEvaluateSubmissionCd240832Errors];

export type QuestionnaireEvaluateSubmissionCd240832Responses = {
	/**
	 * OK
	 */
	200: EvaluationResponseSchema;
};

export type QuestionnaireEvaluateSubmissionCd240832Response =
	QuestionnaireEvaluateSubmissionCd240832Responses[keyof QuestionnaireEvaluateSubmissionCd240832Responses];

export type QuestionnaireUpdateQuestionnaireStatus65Da0A3dData = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Status
		 */
		status: 'draft' | 'ready' | 'published';
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/status/{status}';
};

export type QuestionnaireUpdateQuestionnaireStatus65Da0A3dResponses = {
	/**
	 * OK
	 */
	200: OrganizationQuestionnaireSchema;
};

export type QuestionnaireUpdateQuestionnaireStatus65Da0A3dResponse =
	QuestionnaireUpdateQuestionnaireStatus65Da0A3dResponses[keyof QuestionnaireUpdateQuestionnaireStatus65Da0A3dResponses];

export type QuestionnaireReplaceEvents765Ce8DbData = {
	body: EventAssignmentSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/events';
};

export type QuestionnaireReplaceEvents765Ce8DbResponses = {
	/**
	 * OK
	 */
	200: OrganizationQuestionnaireSchema;
};

export type QuestionnaireReplaceEvents765Ce8DbResponse =
	QuestionnaireReplaceEvents765Ce8DbResponses[keyof QuestionnaireReplaceEvents765Ce8DbResponses];

export type QuestionnaireUnassignEvent3A37Ba42Data = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/events/{event_id}';
};

export type QuestionnaireUnassignEvent3A37Ba42Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type QuestionnaireUnassignEvent3A37Ba42Response =
	QuestionnaireUnassignEvent3A37Ba42Responses[keyof QuestionnaireUnassignEvent3A37Ba42Responses];

export type QuestionnaireAssignEventC9E36280Data = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/events/{event_id}';
};

export type QuestionnaireAssignEventC9E36280Responses = {
	/**
	 * OK
	 */
	200: OrganizationQuestionnaireSchema;
};

export type QuestionnaireAssignEventC9E36280Response =
	QuestionnaireAssignEventC9E36280Responses[keyof QuestionnaireAssignEventC9E36280Responses];

export type QuestionnaireReplaceEventSeries64Ea4349Data = {
	body: EventSeriesAssignmentSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/event-series';
};

export type QuestionnaireReplaceEventSeries64Ea4349Responses = {
	/**
	 * OK
	 */
	200: OrganizationQuestionnaireSchema;
};

export type QuestionnaireReplaceEventSeries64Ea4349Response =
	QuestionnaireReplaceEventSeries64Ea4349Responses[keyof QuestionnaireReplaceEventSeries64Ea4349Responses];

export type QuestionnaireUnassignEventSeriesA5F605BfData = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/event-series/{series_id}';
};

export type QuestionnaireUnassignEventSeriesA5F605BfResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type QuestionnaireUnassignEventSeriesA5F605BfResponse =
	QuestionnaireUnassignEventSeriesA5F605BfResponses[keyof QuestionnaireUnassignEventSeriesA5F605BfResponses];

export type QuestionnaireAssignEventSeries79Ddf487Data = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/event-series/{series_id}';
};

export type QuestionnaireAssignEventSeries79Ddf487Responses = {
	/**
	 * OK
	 */
	200: OrganizationQuestionnaireSchema;
};

export type QuestionnaireAssignEventSeries79Ddf487Response =
	QuestionnaireAssignEventSeries79Ddf487Responses[keyof QuestionnaireAssignEventSeries79Ddf487Responses];

export type UserpreferencesGetGeneralPreferences8Aa97144Data = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/preferences/general';
};

export type UserpreferencesGetGeneralPreferences8Aa97144Responses = {
	/**
	 * OK
	 */
	200: GeneralUserPreferencesSchema;
};

export type UserpreferencesGetGeneralPreferences8Aa97144Response =
	UserpreferencesGetGeneralPreferences8Aa97144Responses[keyof UserpreferencesGetGeneralPreferences8Aa97144Responses];

export type UserpreferencesUpdateGlobalPreferencesF506FfbaData = {
	body: GeneralUserPreferencesUpdateSchema;
	path?: never;
	query?: {
		/**
		 * Overwrite Children
		 */
		overwrite_children?: boolean;
	};
	url: '/api/preferences/general';
};

export type UserpreferencesUpdateGlobalPreferencesF506FfbaResponses = {
	/**
	 * OK
	 */
	200: GeneralUserPreferencesSchema;
};

export type UserpreferencesUpdateGlobalPreferencesF506FfbaResponse =
	UserpreferencesUpdateGlobalPreferencesF506FfbaResponses[keyof UserpreferencesUpdateGlobalPreferencesF506FfbaResponses];

export type UserpreferencesGetOrganizationPreferencesFf7B8651Data = {
	body?: never;
	path: {
		/**
		 * Organization Id
		 */
		organization_id: string;
	};
	query?: never;
	url: '/api/preferences/organization/{organization_id}';
};

export type UserpreferencesGetOrganizationPreferencesFf7B8651Responses = {
	/**
	 * OK
	 */
	200: UserOrganizationPreferencesSchema;
};

export type UserpreferencesGetOrganizationPreferencesFf7B8651Response =
	UserpreferencesGetOrganizationPreferencesFf7B8651Responses[keyof UserpreferencesGetOrganizationPreferencesFf7B8651Responses];

export type UserpreferencesUpdateOrganizationPreferences741Eaad1Data = {
	body: UserOrganizationPreferencesUpdateSchema;
	path: {
		/**
		 * Organization Id
		 */
		organization_id: string;
	};
	query?: {
		/**
		 * Overwrite Children
		 */
		overwrite_children?: boolean;
	};
	url: '/api/preferences/organization/{organization_id}';
};

export type UserpreferencesUpdateOrganizationPreferences741Eaad1Responses = {
	/**
	 * OK
	 */
	200: UserOrganizationPreferencesSchema;
};

export type UserpreferencesUpdateOrganizationPreferences741Eaad1Response =
	UserpreferencesUpdateOrganizationPreferences741Eaad1Responses[keyof UserpreferencesUpdateOrganizationPreferences741Eaad1Responses];

export type UserpreferencesGetEventSeriesPreferences96A3Bd97Data = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/preferences/event-series/{series_id}';
};

export type UserpreferencesGetEventSeriesPreferences96A3Bd97Responses = {
	/**
	 * OK
	 */
	200: UserEventSeriesPreferencesSchema;
};

export type UserpreferencesGetEventSeriesPreferences96A3Bd97Response =
	UserpreferencesGetEventSeriesPreferences96A3Bd97Responses[keyof UserpreferencesGetEventSeriesPreferences96A3Bd97Responses];

export type UserpreferencesUpdateEventSeriesPreferences9D776070Data = {
	body: UserEventSeriesPreferencesUpdateSchema;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: {
		/**
		 * Overwrite Children
		 */
		overwrite_children?: boolean;
	};
	url: '/api/preferences/event-series/{series_id}';
};

export type UserpreferencesUpdateEventSeriesPreferences9D776070Responses = {
	/**
	 * OK
	 */
	200: UserEventSeriesPreferencesSchema;
};

export type UserpreferencesUpdateEventSeriesPreferences9D776070Response =
	UserpreferencesUpdateEventSeriesPreferences9D776070Responses[keyof UserpreferencesUpdateEventSeriesPreferences9D776070Responses];

export type UserpreferencesGetEventPreferencesEcefbc5cData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/preferences/event/{event_id}';
};

export type UserpreferencesGetEventPreferencesEcefbc5cResponses = {
	/**
	 * OK
	 */
	200: UserEventPreferencesSchema;
};

export type UserpreferencesGetEventPreferencesEcefbc5cResponse =
	UserpreferencesGetEventPreferencesEcefbc5cResponses[keyof UserpreferencesGetEventPreferencesEcefbc5cResponses];

export type UserpreferencesUpdateEventPreferences873C34BfData = {
	body: UserEventPreferencesUpdateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Overwrite Children
		 */
		overwrite_children?: boolean;
	};
	url: '/api/preferences/event/{event_id}';
};

export type UserpreferencesUpdateEventPreferences873C34BfResponses = {
	/**
	 * OK
	 */
	200: UserEventPreferencesSchema;
};

export type UserpreferencesUpdateEventPreferences873C34BfResponse =
	UserpreferencesUpdateEventPreferences873C34BfResponses[keyof UserpreferencesUpdateEventPreferences873C34BfResponses];

export type StripewebhookHandleWebhook65Bf2770Data = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/stripe/webhook';
};

export type StripewebhookHandleWebhook65Bf2770Responses = {
	/**
	 * OK
	 */
	200: unknown;
};

export type TagListTagsF5F59E8aData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/tags/';
};

export type TagListTagsF5F59E8aResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaTagSchema;
};

export type TagListTagsF5F59E8aResponse =
	TagListTagsF5F59E8aResponses[keyof TagListTagsF5F59E8aResponses];

export type CityListCities40Ae254dData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Country
		 */
		country?: string | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/cities/';
};

export type CityListCities40Ae254dResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaCitySchema;
};

export type CityListCities40Ae254dResponse =
	CityListCities40Ae254dResponses[keyof CityListCities40Ae254dResponses];

export type CityListCountriesC44D27DfData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/cities/countries';
};

export type CityListCountriesC44D27DfResponses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<string>;
};

export type CityListCountriesC44D27DfResponse =
	CityListCountriesC44D27DfResponses[keyof CityListCountriesC44D27DfResponses];

export type CityGetCity44D62EdeData = {
	body?: never;
	path: {
		/**
		 * City Id
		 */
		city_id: number;
	};
	query?: never;
	url: '/api/cities/{city_id}';
};

export type CityGetCity44D62EdeResponses = {
	/**
	 * OK
	 */
	200: CitySchema;
};

export type CityGetCity44D62EdeResponse =
	CityGetCity44D62EdeResponses[keyof CityGetCity44D62EdeResponses];
