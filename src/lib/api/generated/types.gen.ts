// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
	baseUrl: 'http://localhost:8000' | (string & {});
};

/**
 * VersionResponse
 */
export type VersionResponse = {
	/**
	 * Version
	 */
	version: string;
};

/**
 * ResponseOk
 */
export type ResponseOk = {
	/**
	 * Status
	 */
	status?: 'ok';
};

/**
 * TempToken
 */
export type TempToken = {
	/**
	 * Token
	 *
	 * The temporary token to be used with OTP.
	 */
	token: string;
	/**
	 * Type
	 */
	type?: 'otp';
};

/**
 * TokenObtainPairOutputSchema
 */
export type TokenObtainPairOutputSchema = {
	/**
	 * Username
	 *
	 * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
	 */
	username: string;
	/**
	 * Refresh
	 */
	refresh: string;
	/**
	 * Access
	 */
	access: string;
};

/**
 * TokenObtainPairInputSchema
 */
export type TokenObtainPairInputSchema = {
	/**
	 * Password
	 */
	password: string;
	/**
	 * Username
	 *
	 * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
	 */
	username: string;
};

/**
 * TokenRefreshOutputSchema
 */
export type TokenRefreshOutputSchema = {
	/**
	 * Refresh
	 */
	refresh: string;
	/**
	 * Access
	 */
	access: string | null;
};

/**
 * TokenRefreshInputSchema
 */
export type TokenRefreshInputSchema = {
	/**
	 * Refresh
	 */
	refresh: string;
};

/**
 * DemoLoginSchema
 */
export type DemoLoginSchema = {
	/**
	 * Username
	 */
	username: string;
	/**
	 * Password
	 */
	password: string;
};

/**
 * TempTokenWithTOTP
 */
export type TempTokenWithTotp = {
	/**
	 * Token
	 */
	token: string;
	/**
	 * Otp
	 *
	 * The one-time password to verify.
	 */
	otp: string;
};

/**
 * GoogleIDTokenSchema
 */
export type GoogleIdTokenSchema = {
	/**
	 * Id Token
	 *
	 * The Google ID token to verify.
	 */
	id_token: string;
};

/**
 * TOTPProvisioningUriSchema
 */
export type TotpProvisioningUriSchema = {
	/**
	 * Uri
	 *
	 * The provisioning URI for the TOTP app, to be rendered in a QR code.
	 */
	uri: string;
};

/**
 * RevelUserSchema
 */
export type RevelUserSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Email
	 */
	email: string;
	/**
	 * Email Verified
	 */
	email_verified: boolean;
	/**
	 * Preferred Name
	 */
	preferred_name: string;
	/**
	 * Pronouns
	 */
	pronouns: string;
	/**
	 * Is Active
	 */
	is_active: boolean;
	/**
	 * First Name
	 */
	first_name: string;
	/**
	 * Last Name
	 */
	last_name: string;
	/**
	 * Totp Active
	 */
	totp_active: boolean;
};

/**
 * OTPVerifySchema
 */
export type OtpVerifySchema = {
	/**
	 * Otp
	 *
	 * The one-time password to verify.
	 */
	otp: string;
};

/**
 * ResponseMessage
 */
export type ResponseMessage = {
	/**
	 * Message
	 */
	message: string;
};

/**
 * ProfileUpdateSchema
 *
 * Schema for updating user profile information.
 */
export type ProfileUpdateSchema = {
	/**
	 * Preferred Name
	 *
	 * User's preferred name
	 */
	preferred_name: string;
	/**
	 * Pronouns
	 *
	 * User's pronouns
	 */
	pronouns: string;
	/**
	 * First Name
	 *
	 * User's first name
	 */
	first_name: string;
	/**
	 * Last Name
	 *
	 * User's last name
	 */
	last_name: string;
};

/**
 * RegisterUserSchema
 */
export type RegisterUserSchema = {
	/**
	 * Password1
	 *
	 * Password
	 */
	password1: string;
	/**
	 * Password2
	 *
	 * Password confirmation
	 */
	password2: string;
	/**
	 * Email
	 */
	email: string;
	/**
	 * First Name
	 */
	first_name?: string;
	/**
	 * Last Name
	 */
	last_name?: string;
};

/**
 * VerifyEmailResponseSchema
 */
export type VerifyEmailResponseSchema = {
	user: RevelUserSchema;
	token: TokenObtainPairOutputSchema;
};

/**
 * VerifyEmailSchema
 */
export type VerifyEmailSchema = {
	/**
	 * Token
	 */
	token: string;
};

/**
 * DeleteAccountConfirmSchema
 */
export type DeleteAccountConfirmSchema = {
	/**
	 * Token
	 */
	token: string;
};

/**
 * PasswordResetRequestSchema
 */
export type PasswordResetRequestSchema = {
	/**
	 * Email
	 */
	email: string;
};

/**
 * PasswordResetSchema
 */
export type PasswordResetSchema = {
	/**
	 * Password1
	 *
	 * Password
	 */
	password1: string;
	/**
	 * Password2
	 *
	 * Password confirmation
	 */
	password2: string;
	/**
	 * Token
	 */
	token: string;
};

/**
 * DashboardOrganizationsFiltersSchema
 */
export type DashboardOrganizationsFiltersSchema = {
	/**
	 * Owner
	 */
	owner?: boolean;
	/**
	 * Staff
	 */
	staff?: boolean;
	/**
	 * Member
	 */
	member?: boolean;
	/**
	 * Subscriber
	 */
	subscriber?: boolean;
};

/**
 * DynamicInput
 */
export type DynamicInput = {
	/**
	 * Page
	 */
	page?: number;
	/**
	 * Page Size
	 */
	page_size?: number;
};

/**
 * Input
 */
export type Input = {
	/**
	 * Search
	 */
	search?: string | null;
};

/**
 * CitySchema
 */
export type CitySchema = {
	/**
	 * ID
	 */
	id?: number | null;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Country
	 */
	country: string;
	/**
	 * Admin Name
	 */
	admin_name?: string | null;
};

/**
 * OrganizationRetrieveSchema
 */
export type OrganizationRetrieveSchema = {
	/**
	 * Tags
	 */
	tags?: Array<string>;
	city?: CitySchema | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Id
	 */
	id: string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Slug
	 */
	slug: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Logo
	 */
	logo?: string | null;
	/**
	 * Cover Art
	 */
	cover_art?: string | null;
	visibility: Visibility;
	/**
	 * Is Stripe Connected
	 */
	is_stripe_connected: boolean;
	/**
	 * Platform Fee Percent
	 */
	platform_fee_percent?: number | string | null;
};

/**
 * PaginatedResponseSchema[OrganizationRetrieveSchema]
 */
export type PaginatedResponseSchemaOrganizationRetrieveSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<OrganizationRetrieveSchema>;
};

/**
 * Visibility
 */
export type Visibility = 'public' | 'private' | 'members-only' | 'staff-only';

/**
 * DashboardEventsFiltersSchema
 */
export type DashboardEventsFiltersSchema = {
	/**
	 * Owner
	 */
	owner?: boolean;
	/**
	 * Staff
	 */
	staff?: boolean;
	/**
	 * Member
	 */
	member?: boolean;
	/**
	 * Rsvp Yes
	 */
	rsvp_yes?: boolean;
	/**
	 * Rsvp No
	 */
	rsvp_no?: boolean;
	/**
	 * Rsvp Maybe
	 */
	rsvp_maybe?: boolean;
	/**
	 * Got Ticket
	 */
	got_ticket?: boolean;
	/**
	 * Got Invitation
	 */
	got_invitation?: boolean;
	/**
	 * Subscriber
	 */
	subscriber?: boolean;
};

/**
 * EventInListSchema
 */
export type EventInListSchema = {
	/**
	 * Tags
	 */
	tags?: Array<string>;
	city?: CitySchema | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Id
	 */
	id: string;
	event_type: Types;
	visibility: Visibility;
	organization: OrganizationRetrieveSchema;
	status: Status;
	event_series?: EventSeriesRetrieveSchema | null;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Slug
	 */
	slug: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Invitation Message
	 */
	invitation_message?: string | null;
	/**
	 * Invitation Message Html
	 */
	invitation_message_html?: string;
	/**
	 * Max Attendees
	 */
	max_attendees?: number;
	/**
	 * Waitlist Open
	 */
	waitlist_open?: boolean | null;
	/**
	 * Start
	 */
	start: string;
	/**
	 * End
	 */
	end: string;
	/**
	 * Rsvp Before
	 */
	rsvp_before?: string | null;
	/**
	 * Logo
	 */
	logo?: string | null;
	/**
	 * Cover Art
	 */
	cover_art?: string | null;
	/**
	 * Free For Members
	 */
	free_for_members: boolean;
	/**
	 * Free For Staff
	 */
	free_for_staff: boolean;
	/**
	 * Requires Ticket
	 */
	requires_ticket: boolean;
	/**
	 * Potluck Open
	 */
	potluck_open: boolean;
	/**
	 * Attendee Count
	 */
	attendee_count: number;
};

/**
 * EventSeriesRetrieveSchema
 */
export type EventSeriesRetrieveSchema = {
	/**
	 * Tags
	 */
	tags?: Array<string>;
	/**
	 * Id
	 */
	id: string;
	organization: OrganizationRetrieveSchema;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Slug
	 */
	slug: string;
	/**
	 * Logo
	 */
	logo?: string | null;
	/**
	 * Cover Art
	 */
	cover_art?: string | null;
};

/**
 * PaginatedResponseSchema[EventInListSchema]
 */
export type PaginatedResponseSchemaEventInListSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<EventInListSchema>;
};

/**
 * Status
 */
export type Status = 'draft' | 'ready' | 'published';

/**
 * Types
 */
export type Types = 'admission' | 'membership' | 'feedback' | 'generic';

/**
 * DashboardEventSeriesFiltersSchema
 */
export type DashboardEventSeriesFiltersSchema = {
	/**
	 * Owner
	 */
	owner?: boolean;
	/**
	 * Staff
	 */
	staff?: boolean;
	/**
	 * Member
	 */
	member?: boolean;
	/**
	 * Subscriber
	 */
	subscriber?: boolean;
};

/**
 * PaginatedResponseSchema[EventSeriesRetrieveSchema]
 */
export type PaginatedResponseSchemaEventSeriesRetrieveSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<EventSeriesRetrieveSchema>;
};

/**
 * InvitationSchema
 */
export type InvitationSchema = {
	/**
	 * Waives Questionnaire
	 */
	waives_questionnaire?: boolean;
	/**
	 * Waives Purchase
	 */
	waives_purchase?: boolean;
	/**
	 * Overrides Max Attendees
	 */
	overrides_max_attendees?: boolean;
	/**
	 * Waives Membership Required
	 */
	waives_membership_required?: boolean;
	/**
	 * Waives Rsvp Deadline
	 */
	waives_rsvp_deadline?: boolean;
	/**
	 * Custom Message
	 */
	custom_message?: string | null;
	event: EventInListSchema;
	tier?: TierSchema | null;
	/**
	 * User Id
	 */
	user_id: string;
};

/**
 * PaginatedResponseSchema[InvitationSchema]
 */
export type PaginatedResponseSchemaInvitationSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<InvitationSchema>;
};

/**
 * TierSchema
 */
export type TierSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Event Id
	 */
	event_id: string;
	/**
	 * Price
	 */
	price: number | string;
	/**
	 * Currency
	 */
	currency: string;
	/**
	 * Total Available
	 */
	total_available: number | null;
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Price Type
	 *
	 * Whether this tier has a fixed price or allows pay-what-you-can pricing
	 */
	price_type?: string;
	/**
	 * Pwyc Min
	 *
	 * Minimum amount for pay-what-you-can pricing
	 */
	pwyc_min?: number | string;
	/**
	 * Pwyc Max
	 *
	 * Maximum amount for pay-what-you-can pricing (optional)
	 */
	pwyc_max?: number | string | null;
	/**
	 * Sales Start At
	 *
	 * When ticket sales begin for this tier
	 */
	sales_start_at?: string | null;
	/**
	 * Sales End At
	 *
	 * When ticket sales end for this tier
	 */
	sales_end_at?: string | null;
	/**
	 * Purchasable By
	 */
	purchasable_by?: string;
	/**
	 * Payment Method
	 */
	payment_method?: string;
};

/**
 * OrganizationFilterSchema
 */
export type OrganizationFilterSchema = {
	/**
	 * Country
	 */
	country?: string | null;
	/**
	 * City Id
	 */
	city_id?: number | null;
	/**
	 * Tags
	 */
	tags?: Array<string> | null;
};

/**
 * ResourceFilterSchema
 */
export type ResourceFilterSchema = {
	resource_type?: ResourceTypes | null;
};

/**
 * ResourceTypes
 */
export type ResourceTypes = 'file' | 'link' | 'text';

/**
 * AdditionalResourceSchema
 */
export type AdditionalResourceSchema = {
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Text Html
	 */
	text_html?: string;
	/**
	 * Event Ids
	 */
	event_ids?: Array<string>;
	/**
	 * Event Series Ids
	 */
	event_series_ids?: Array<string>;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Resource Type
	 */
	resource_type: string;
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * File
	 */
	file?: string | null;
	/**
	 * Link
	 */
	link?: string | null;
	/**
	 * Text
	 */
	text?: string | null;
	/**
	 * Visibility
	 */
	visibility?: string;
	/**
	 * Display On Organization Page
	 *
	 * Whether the resource should be displayed on organization pages.
	 */
	display_on_organization_page?: boolean;
};

/**
 * PaginatedResponseSchema[AdditionalResourceSchema]
 */
export type PaginatedResponseSchemaAdditionalResourceSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<AdditionalResourceSchema>;
};

/**
 * MinimalRevelUserSchema
 */
export type MinimalRevelUserSchema = {
	/**
	 * Preferred Name
	 *
	 * Preferred name
	 */
	preferred_name?: string | null;
	/**
	 * Pronouns
	 *
	 * Pronouns
	 */
	pronouns?: string | null;
	/**
	 * First Name
	 */
	first_name?: string | null;
	/**
	 * Last Name
	 */
	last_name?: string | null;
};

/**
 * OrganizationMembershipRequestRetrieve
 */
export type OrganizationMembershipRequestRetrieve = {
	user: MinimalRevelUserSchema;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Status
	 */
	status?: string;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * OrganizationAdminDetailSchema
 *
 * Comprehensive organization schema for admin use with all fields including platform fees and Stripe details.
 */
export type OrganizationAdminDetailSchema = {
	/**
	 * Tags
	 */
	tags?: Array<string>;
	city?: CitySchema | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Id
	 */
	id: string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Slug
	 */
	slug: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Logo
	 */
	logo?: string | null;
	/**
	 * Cover Art
	 */
	cover_art?: string | null;
	visibility: Visibility;
	/**
	 * Platform Fee Percent
	 */
	platform_fee_percent: number | string;
	/**
	 * Platform Fee Fixed
	 */
	platform_fee_fixed: number | string;
	/**
	 * Is Stripe Connected
	 */
	is_stripe_connected: boolean;
	/**
	 * Stripe Account Id
	 */
	stripe_account_id?: string | null;
	/**
	 * Stripe Charges Enabled
	 */
	stripe_charges_enabled: boolean;
	/**
	 * Stripe Details Submitted
	 */
	stripe_details_submitted: boolean;
};

/**
 * OrganizationEditSchema
 */
export type OrganizationEditSchema = {
	/**
	 * City Id
	 */
	city_id?: number | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Description
	 */
	description?: string;
	visibility: Visibility;
};

/**
 * StripeOnboardingLinkSchema
 */
export type StripeOnboardingLinkSchema = {
	/**
	 * Onboarding Url
	 */
	onboarding_url: string;
};

/**
 * StripeAccountStatusSchema
 */
export type StripeAccountStatusSchema = {
	/**
	 * Is Connected
	 */
	is_connected: boolean;
	/**
	 * Charges Enabled
	 */
	charges_enabled?: boolean;
	/**
	 * Details Submitted
	 */
	details_submitted?: boolean;
};

/**
 * ValidationErrorResponse
 */
export type ValidationErrorResponse = {
	/**
	 * Errors
	 */
	errors: {
		[key: string]: string | Array<string>;
	};
};

/**
 * EventSeriesEditSchema
 */
export type EventSeriesEditSchema = {
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
};

/**
 * EventDetailSchema
 */
export type EventDetailSchema = {
	/**
	 * Tags
	 */
	tags?: Array<string>;
	city?: CitySchema | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Id
	 */
	id: string;
	event_type: Types;
	visibility: Visibility;
	organization: OrganizationRetrieveSchema;
	status: Status;
	event_series?: EventSeriesRetrieveSchema | null;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Slug
	 */
	slug: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Invitation Message
	 */
	invitation_message?: string | null;
	/**
	 * Invitation Message Html
	 */
	invitation_message_html?: string;
	/**
	 * Max Attendees
	 */
	max_attendees?: number;
	/**
	 * Waitlist Open
	 */
	waitlist_open?: boolean | null;
	/**
	 * Start
	 */
	start: string;
	/**
	 * End
	 */
	end: string;
	/**
	 * Rsvp Before
	 */
	rsvp_before?: string | null;
	/**
	 * Logo
	 */
	logo?: string | null;
	/**
	 * Cover Art
	 */
	cover_art?: string | null;
	/**
	 * Free For Members
	 */
	free_for_members: boolean;
	/**
	 * Free For Staff
	 */
	free_for_staff: boolean;
	/**
	 * Requires Ticket
	 */
	requires_ticket: boolean;
	/**
	 * Potluck Open
	 */
	potluck_open: boolean;
	/**
	 * Attendee Count
	 */
	attendee_count: number;
};

/**
 * EventCreateSchema
 */
export type EventCreateSchema = {
	/**
	 * City Id
	 */
	city_id?: number | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
	event_type?: Types | null;
	status?: Status;
	visibility?: Visibility | null;
	/**
	 * Invitation Message
	 *
	 * Invitation message
	 */
	invitation_message?: string | null;
	/**
	 * Max Attendees
	 */
	max_attendees?: number;
	/**
	 * Waitlist Open
	 */
	waitlist_open?: boolean;
	/**
	 * Start
	 */
	start: string;
	/**
	 * End
	 */
	end?: string | null;
	/**
	 * Rsvp Before
	 *
	 * RSVP deadline for events that do not require tickets
	 */
	rsvp_before?: string | null;
	/**
	 * Check In Starts At
	 *
	 * When check-in opens for this event
	 */
	check_in_starts_at?: string | null;
	/**
	 * Check In Ends At
	 *
	 * When check-in closes for this event
	 */
	check_in_ends_at?: string | null;
	/**
	 * Event Series Id
	 */
	event_series_id?: string | null;
	/**
	 * Free For Members
	 */
	free_for_members?: boolean;
	/**
	 * Free For Staff
	 */
	free_for_staff?: boolean;
	/**
	 * Requires Ticket
	 */
	requires_ticket?: boolean;
	/**
	 * Potluck Open
	 */
	potluck_open?: boolean;
};

/**
 * OrganizationTokenFilterSchema
 */
export type OrganizationTokenFilterSchema = {
	/**
	 * Is Active
	 */
	is_active?: boolean | null;
	/**
	 * Organization Id
	 */
	organization_id?: string | null;
	/**
	 * Membership Pass
	 */
	membership_pass?: boolean | null;
};

/**
 * OrganizationTokenSchema
 */
export type OrganizationTokenSchema = {
	/**
	 * Created At
	 */
	created_at: string;
	/**
	 * Updated At
	 */
	updated_at: string;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Issuer
	 */
	issuer: string;
	/**
	 * Expires At
	 */
	expires_at?: string | null;
	/**
	 * Uses
	 */
	uses?: number;
	/**
	 * Max Uses
	 *
	 * The maximum number of invites allowed for this token. 0 Means unlimited.
	 */
	max_uses?: number;
	/**
	 * Organization
	 */
	organization: string;
	/**
	 * Grants Membership
	 */
	grants_membership?: boolean;
	/**
	 * Grants Staff Status
	 */
	grants_staff_status?: boolean;
};

/**
 * PaginatedResponseSchema[OrganizationTokenSchema]
 */
export type PaginatedResponseSchemaOrganizationTokenSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<OrganizationTokenSchema>;
};

/**
 * OrganizationTokenCreateSchema
 */
export type OrganizationTokenCreateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Max Uses
	 */
	max_uses?: number;
	/**
	 * Grants Membership
	 */
	grants_membership?: boolean;
	/**
	 * Grants Staff Status
	 */
	grants_staff_status?: boolean;
	/**
	 * Duration
	 */
	duration?: number;
};

/**
 * OrganizationTokenUpdateSchema
 */
export type OrganizationTokenUpdateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Max Uses
	 */
	max_uses?: number;
	/**
	 * Grants Membership
	 */
	grants_membership?: boolean;
	/**
	 * Grants Staff Status
	 */
	grants_staff_status?: boolean;
	/**
	 * Expires At
	 */
	expires_at?: string | null;
};

/**
 * PaginatedResponseSchema[OrganizationMembershipRequestRetrieve]
 */
export type PaginatedResponseSchemaOrganizationMembershipRequestRetrieve = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<OrganizationMembershipRequestRetrieve>;
};

/**
 * AdditionalResourceCreateSchema
 */
export type AdditionalResourceCreateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Description
	 */
	description?: string | null;
	resource_type: ResourceTypes;
	/**
	 * Visibility
	 */
	visibility?: 'public' | 'private' | 'members-only' | 'staff-only';
	/**
	 * Display On Organization Page
	 */
	display_on_organization_page?: boolean;
	/**
	 * Link
	 */
	link?: string | null;
	/**
	 * Text
	 */
	text?: string | null;
	/**
	 * Event Series Ids
	 */
	event_series_ids?: Array<string>;
	/**
	 * Event Ids
	 */
	event_ids?: Array<string>;
};

/**
 * AdditionalResourceUpdateSchema
 */
export type AdditionalResourceUpdateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Description
	 */
	description?: string | null;
	visibility?: Visibility | null;
	/**
	 * Display On Organization Page
	 */
	display_on_organization_page?: boolean | null;
	/**
	 * Link
	 */
	link?: string | null;
	/**
	 * Text
	 */
	text?: string | null;
	/**
	 * Event Series Ids
	 */
	event_series_ids?: Array<string> | null;
	/**
	 * Event Ids
	 */
	event_ids?: Array<string> | null;
};

/**
 * MemberUserSchema
 */
export type MemberUserSchema = {
	/**
	 * Email Address
	 */
	email?: string | null;
	/**
	 * Phone Number
	 *
	 * Phone number
	 */
	phone_number?: string | null;
	/**
	 * Preferred Name
	 *
	 * Preferred name
	 */
	preferred_name?: string | null;
	/**
	 * Pronouns
	 *
	 * Pronouns
	 */
	pronouns?: string | null;
	/**
	 * First Name
	 */
	first_name?: string | null;
	/**
	 * Last Name
	 */
	last_name?: string | null;
};

/**
 * OrganizationMemberSchema
 */
export type OrganizationMemberSchema = {
	user: MemberUserSchema;
	/**
	 * Member Since
	 */
	member_since: string;
};

/**
 * PaginatedResponseSchema[OrganizationMemberSchema]
 */
export type PaginatedResponseSchemaOrganizationMemberSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<OrganizationMemberSchema>;
};

/**
 * OrganizationStaffSchema
 */
export type OrganizationStaffSchema = {
	user: MemberUserSchema;
	/**
	 * Staff Since
	 */
	staff_since: string;
	permissions: PermissionsSchema;
};

/**
 * PaginatedResponseSchema[OrganizationStaffSchema]
 */
export type PaginatedResponseSchemaOrganizationStaffSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<OrganizationStaffSchema>;
};

/**
 * PermissionMap
 */
export type PermissionMap = {
	/**
	 * View Organization Details
	 */
	view_organization_details?: boolean;
	/**
	 * Create Event
	 */
	create_event?: boolean;
	/**
	 * Create Event Series
	 */
	create_event_series?: boolean;
	/**
	 * Edit Event Series
	 */
	edit_event_series?: boolean;
	/**
	 * Delete Event Series
	 */
	delete_event_series?: boolean;
	/**
	 * Edit Event
	 */
	edit_event?: boolean;
	/**
	 * Delete Event
	 */
	delete_event?: boolean;
	/**
	 * Open Event
	 */
	open_event?: boolean;
	/**
	 * Manage Tickets
	 */
	manage_tickets?: boolean;
	/**
	 * Close Event
	 */
	close_event?: boolean;
	/**
	 * Manage Event
	 */
	manage_event?: boolean;
	/**
	 * Check In Attendees
	 */
	check_in_attendees?: boolean;
	/**
	 * Invite To Event
	 */
	invite_to_event?: boolean;
	/**
	 * Edit Organization
	 */
	edit_organization?: boolean;
	/**
	 * Manage Members
	 */
	manage_members?: boolean;
	/**
	 * Manage Potluck
	 */
	manage_potluck?: boolean;
	/**
	 * Create Questionnaire
	 */
	create_questionnaire?: boolean;
	/**
	 * Edit Questionnaire
	 */
	edit_questionnaire?: boolean;
	/**
	 * Delete Questionnaire
	 */
	delete_questionnaire?: boolean;
	/**
	 * Evaluate Questionnaire
	 */
	evaluate_questionnaire?: boolean;
	/**
	 * Manage Membership
	 */
	manage_membership?: boolean;
};

/**
 * PermissionsSchema
 */
export type PermissionsSchema = {
	default?: PermissionMap;
	/**
	 * Event Overrides
	 */
	event_overrides?: {
		[key: string]: PermissionMap;
	};
};

/**
 * TagSchema
 */
export type TagSchema = {
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Color
	 *
	 * Hex color (e.g. #FF0099)
	 */
	color?: string | null;
	/**
	 * Icon
	 *
	 * Optional icon name
	 */
	icon?: string | null;
};

/**
 * TagUpdateSchema
 */
export type TagUpdateSchema = {
	/**
	 * Tags
	 *
	 * A list of tag names to add or remove.
	 */
	tags: Array<string>;
};

/**
 * EventFilterSchema
 */
export type EventFilterSchema = {
	/**
	 * Country
	 */
	country?: string | null;
	/**
	 * City Id
	 */
	city_id?: number | null;
	/**
	 * Organization
	 */
	organization?: string | null;
	event_type?: Types | null;
	visibility?: Visibility | null;
	/**
	 * Event Series
	 */
	event_series?: string | null;
	/**
	 * Next Events
	 */
	next_events?: boolean | null;
	/**
	 * Past Events
	 */
	past_events?: boolean | null;
	status?: Status | null;
	/**
	 * Tags
	 */
	tags?: Array<string> | null;
};

/**
 * MinimalEventSchema
 */
export type MinimalEventSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Slug
	 */
	slug: string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Start
	 */
	start?: string | null;
	/**
	 * Logo
	 */
	logo?: string | null;
};

/**
 * PaginatedResponseSchema[MinimalRevelUserSchema]
 */
export type PaginatedResponseSchemaMinimalRevelUserSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<MinimalRevelUserSchema>;
};

/**
 * EventRSVPSchema
 */
export type EventRsvpSchema = {
	/**
	 * Event Id
	 */
	event_id: string;
	status: Status;
};

/**
 * EventTicketSchema
 */
export type EventTicketSchema = {
	/**
	 * Event Id
	 */
	event_id: string | null;
	tier?: TierSchema | null;
	status: Status;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Checked In At
	 */
	checked_in_at?: string | null;
};

/**
 * EventUserEligibility
 */
export type EventUserEligibility = {
	/**
	 * Allowed
	 */
	allowed: boolean;
	/**
	 * Event Id
	 */
	event_id: string;
	/**
	 * Reason
	 */
	reason?: string | null;
	next_step?: NextStep | null;
	/**
	 * Questionnaires Missing
	 */
	questionnaires_missing?: Array<string> | null;
	/**
	 * Questionnaires Pending Review
	 */
	questionnaires_pending_review?: Array<string> | null;
	/**
	 * Questionnaires Failed
	 */
	questionnaires_failed?: Array<string> | null;
	/**
	 * Retry On
	 */
	retry_on?: string | null;
};

/**
 * NextStep
 */
export type NextStep =
	| 'request_invitation'
	| 'become_member'
	| 'complete_questionnaire'
	| 'wait_for_questionnaire_evaluation'
	| 'wait_to_retake_questionnaire'
	| 'wait_for_event_to_open'
	| 'join_waitlist'
	| 'purchase_ticket'
	| 'rsvp';

/**
 * Status
 */
export type EventsModelsEventEventRsvpStatus = 'yes' | 'no' | 'maybe';

/**
 * Status
 */
export type EventsModelsEventTicketStatus = 'pending' | 'active' | 'checked_in' | 'cancelled';

/**
 * EventInvitationRequestSchema
 */
export type EventInvitationRequestSchema = {
	user: MinimalRevelUserSchema;
	event: EventInListSchema;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Message
	 */
	message?: string | null;
	/**
	 * Status
	 */
	status?: string;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * EventInvitationRequestCreateSchema
 */
export type EventInvitationRequestCreateSchema = {
	/**
	 * Message
	 */
	message?: string | null;
};

/**
 * PaginatedResponseSchema[EventInvitationRequestSchema]
 */
export type PaginatedResponseSchemaEventInvitationRequestSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<EventInvitationRequestSchema>;
};

/**
 * StripeCheckoutSessionSchema
 */
export type StripeCheckoutSessionSchema = {
	/**
	 * Checkout Url
	 */
	checkout_url: string;
};

/**
 * PWYCCheckoutPayloadSchema
 *
 * Schema for Pay What You Can checkout payload.
 */
export type PwycCheckoutPayloadSchema = {
	/**
	 * Pwyc
	 *
	 * Pay what you can amount, minimum 1
	 */
	pwyc: number | string;
};

/**
 * EvaluationMode
 */
export type EvaluationMode = 'automatic' | 'manual' | 'hybrid';

/**
 * FreeTextQuestionSchema
 */
export type FreeTextQuestionSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Question
	 */
	question: string;
	/**
	 * Is Mandatory
	 */
	is_mandatory: boolean;
	/**
	 * Order
	 */
	order: number;
};

/**
 * MultipleChoiceOptionSchema
 */
export type MultipleChoiceOptionSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Option
	 */
	option: string;
	/**
	 * Order
	 */
	order: number;
};

/**
 * MultipleChoiceQuestionSchema
 */
export type MultipleChoiceQuestionSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Question
	 */
	question: string;
	/**
	 * Is Mandatory
	 */
	is_mandatory: boolean;
	/**
	 * Order
	 */
	order: number;
	/**
	 * Allow Multiple Answers
	 */
	allow_multiple_answers: boolean;
	/**
	 * Options
	 */
	options: Array<MultipleChoiceOptionSchema>;
};

/**
 * QuestionnaireSchema
 */
export type QuestionnaireSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Multiple Choice Questions
	 */
	multiple_choice_questions?: Array<MultipleChoiceQuestionSchema>;
	/**
	 * Free Text Questions
	 */
	free_text_questions?: Array<FreeTextQuestionSchema>;
	/**
	 * Sections
	 */
	sections?: Array<SectionSchema>;
	evaluation_mode: EvaluationMode;
};

/**
 * SectionSchema
 */
export type SectionSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Multiple Choice Questions
	 */
	multiple_choice_questions?: Array<MultipleChoiceQuestionSchema>;
	/**
	 * Free Text Questions
	 */
	free_text_questions?: Array<FreeTextQuestionSchema>;
	/**
	 * Order
	 */
	order: number;
};

/**
 * QuestionnaireEvaluationForUserSchema
 */
export type QuestionnaireEvaluationForUserSchema = {
	submission: QuestionnaireSubmissionResponseSchema;
	/**
	 * Score
	 */
	score: number | string;
	status: QuestionnairesModelsQuestionnaireEvaluationStatus;
};

/**
 * QuestionnaireSubmissionResponseSchema
 */
export type QuestionnaireSubmissionResponseSchema = {
	/**
	 * Questionnaire Id
	 */
	questionnaire_id: string;
	status: QuestionnairesModelsQuestionnaireSubmissionStatus;
	/**
	 * Submitted At
	 */
	submitted_at: string;
};

/**
 * Status
 */
export type QuestionnairesModelsQuestionnaireEvaluationStatus =
	| 'approved'
	| 'rejected'
	| 'pending review';

/**
 * Status
 */
export type QuestionnairesModelsQuestionnaireSubmissionStatus = 'draft' | 'ready';

/**
 * FreeTextSubmissionSchema
 */
export type FreeTextSubmissionSchema = {
	/**
	 * Question Id
	 */
	question_id: string;
	/**
	 * Answer
	 */
	answer: string;
};

/**
 * MultipleChoiceSubmissionSchema
 */
export type MultipleChoiceSubmissionSchema = {
	/**
	 * Question Id
	 */
	question_id: string;
	/**
	 * Options Id
	 */
	options_id: Array<string>;
};

/**
 * QuestionnaireSubmissionSchema
 */
export type QuestionnaireSubmissionSchema = {
	/**
	 * Questionnaire Id
	 */
	questionnaire_id: string;
	/**
	 * Multiple Choice Answers
	 */
	multiple_choice_answers?: Array<MultipleChoiceSubmissionSchema>;
	/**
	 * Free Text Answers
	 */
	free_text_answers?: Array<FreeTextSubmissionSchema>;
	status: Status;
};

/**
 * EventTokenSchema
 */
export type EventTokenSchema = {
	/**
	 * Created At
	 */
	created_at: string;
	/**
	 * Updated At
	 */
	updated_at: string;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Issuer
	 */
	issuer: string;
	/**
	 * Expires At
	 */
	expires_at?: string | null;
	/**
	 * Uses
	 */
	uses?: number;
	/**
	 * Max Uses
	 *
	 * The maximum number of invites allowed for this token. 0 Means unlimited.
	 */
	max_uses?: number;
	/**
	 * Event
	 */
	event: string;
	/**
	 * Grants Invitation
	 */
	grants_invitation?: boolean;
	/**
	 * Invitation Tier
	 */
	invitation_tier?: string | null;
	/**
	 * Invitation Payload
	 *
	 * If provided, the token will we viable to claim invitations.
	 */
	invitation_payload?: {
		[key: string]: unknown;
	} | null;
};

/**
 * EventTokenUpdateSchema
 */
export type EventTokenUpdateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Max Uses
	 */
	max_uses?: number;
	invitation?: InvitationBaseSchema | null;
	/**
	 * Invitation Tier Id
	 */
	invitation_tier_id?: string | null;
	/**
	 * Expires At
	 */
	expires_at?: string | null;
};

/**
 * InvitationBaseSchema
 */
export type InvitationBaseSchema = {
	/**
	 * Waives Questionnaire
	 */
	waives_questionnaire?: boolean;
	/**
	 * Waives Purchase
	 */
	waives_purchase?: boolean;
	/**
	 * Overrides Max Attendees
	 */
	overrides_max_attendees?: boolean;
	/**
	 * Waives Membership Required
	 */
	waives_membership_required?: boolean;
	/**
	 * Waives Rsvp Deadline
	 */
	waives_rsvp_deadline?: boolean;
	/**
	 * Custom Message
	 */
	custom_message?: string | null;
};

/**
 * EventTokenFilterSchema
 */
export type EventTokenFilterSchema = {
	/**
	 * Is Active
	 */
	is_active?: boolean | null;
	/**
	 * Event Id
	 */
	event_id?: string | null;
	/**
	 * Has Invitation
	 */
	has_invitation?: boolean | null;
};

/**
 * PaginatedResponseSchema[EventTokenSchema]
 */
export type PaginatedResponseSchemaEventTokenSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<EventTokenSchema>;
};

/**
 * EventTokenCreateSchema
 */
export type EventTokenCreateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Max Uses
	 */
	max_uses?: number;
	invitation?: InvitationBaseSchema | null;
	/**
	 * Invitation Tier Id
	 */
	invitation_tier_id?: string | null;
	/**
	 * Duration
	 */
	duration?: number;
};

/**
 * EventInvitationRequestInternalSchema
 */
export type EventInvitationRequestInternalSchema = {
	user: MinimalRevelUserSchema;
	event: EventInListSchema;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Message
	 */
	message?: string | null;
	/**
	 * Status
	 */
	status?: string;
	/**
	 * Created At
	 */
	created_at: string;
	decided_by?: MinimalRevelUserSchema | null;
};

/**
 * PaginatedResponseSchema[EventInvitationRequestInternalSchema]
 */
export type PaginatedResponseSchemaEventInvitationRequestInternalSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<EventInvitationRequestInternalSchema>;
};

/**
 * EventEditSchema
 */
export type EventEditSchema = {
	/**
	 * City Id
	 */
	city_id?: number | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Description
	 */
	description?: string | null;
	event_type?: Types | null;
	status?: Status;
	visibility?: Visibility | null;
	/**
	 * Invitation Message
	 *
	 * Invitation message
	 */
	invitation_message?: string | null;
	/**
	 * Max Attendees
	 */
	max_attendees?: number;
	/**
	 * Waitlist Open
	 */
	waitlist_open?: boolean;
	/**
	 * Start
	 */
	start?: string | null;
	/**
	 * End
	 */
	end?: string | null;
	/**
	 * Rsvp Before
	 *
	 * RSVP deadline for events that do not require tickets
	 */
	rsvp_before?: string | null;
	/**
	 * Check In Starts At
	 *
	 * When check-in opens for this event
	 */
	check_in_starts_at?: string | null;
	/**
	 * Check In Ends At
	 *
	 * When check-in closes for this event
	 */
	check_in_ends_at?: string | null;
	/**
	 * Event Series Id
	 */
	event_series_id?: string | null;
	/**
	 * Free For Members
	 */
	free_for_members?: boolean;
	/**
	 * Free For Staff
	 */
	free_for_staff?: boolean;
	/**
	 * Requires Ticket
	 */
	requires_ticket?: boolean;
	/**
	 * Potluck Open
	 */
	potluck_open?: boolean;
};

/**
 * PaginatedResponseSchema[TicketTierDetailSchema]
 */
export type PaginatedResponseSchemaTicketTierDetailSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<TicketTierDetailSchema>;
};

/**
 * TicketTierDetailSchema
 */
export type TicketTierDetailSchema = {
	/**
	 * Event Id
	 */
	event_id: string;
	/**
	 * Total Available
	 */
	total_available?: number | null;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Visibility
	 */
	visibility?: string;
	/**
	 * Payment Method
	 */
	payment_method?: string;
	/**
	 * Purchasable By
	 */
	purchasable_by?: string;
	/**
	 * Price
	 */
	price?: number | string;
	/**
	 * Price Type
	 *
	 * Whether this tier has a fixed price or allows pay-what-you-can pricing
	 */
	price_type?: string;
	/**
	 * Pwyc Min
	 *
	 * Minimum amount for pay-what-you-can pricing
	 */
	pwyc_min?: number | string;
	/**
	 * Pwyc Max
	 *
	 * Maximum amount for pay-what-you-can pricing (optional)
	 */
	pwyc_max?: number | string | null;
	/**
	 * Currency
	 *
	 * ISO 4217 currency code
	 */
	currency?: string;
	/**
	 * Sales Start At
	 *
	 * When ticket sales begin for this tier
	 */
	sales_start_at?: string | null;
	/**
	 * Sales End At
	 *
	 * When ticket sales end for this tier
	 */
	sales_end_at?: string | null;
	/**
	 * Created At
	 */
	created_at: string;
	/**
	 * Updated At
	 */
	updated_at: string;
	/**
	 * Total Quantity
	 */
	total_quantity?: number | null;
	/**
	 * Quantity Sold
	 */
	quantity_sold?: number;
	/**
	 * Manual Payment Instructions
	 */
	manual_payment_instructions?: string | null;
};

/**
 * PaymentMethod
 */
export type PaymentMethod = 'online' | 'offline' | 'at_the_door' | 'free';

/**
 * PriceType
 */
export type PriceType = 'fixed' | 'pwyc';

/**
 * PurchasableBy
 */
export type PurchasableBy = 'public' | 'members' | 'invited' | 'invited_and_members';

/**
 * TicketTierCreateSchema
 */
export type TicketTierCreateSchema = {
	payment_method?: PaymentMethod;
	/**
	 * Price
	 */
	price?: number | string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
	visibility?: Visibility;
	purchasable_by?: PurchasableBy;
	price_type?: PriceType;
	/**
	 * Pwyc Min
	 */
	pwyc_min?: number | string;
	/**
	 * Pwyc Max
	 */
	pwyc_max?: number | string | null;
	/**
	 * Currency
	 */
	currency?:
		| 'EUR'
		| 'USD'
		| 'GBP'
		| 'JPY'
		| 'AUD'
		| 'CAD'
		| 'CHF'
		| 'CNY'
		| 'HKD'
		| 'NZD'
		| 'SEK'
		| 'KRW'
		| 'SGD'
		| 'NOK'
		| 'MXN'
		| 'INR'
		| 'RUB'
		| 'ZAR'
		| 'TRY'
		| 'BRL'
		| 'TWD'
		| 'DKK'
		| 'PLN'
		| 'THB'
		| 'IDR'
		| 'HUF'
		| 'CZK'
		| 'ILS'
		| 'AED'
		| 'SAR'
		| 'MYR'
		| 'PHP'
		| 'CLP'
		| 'COP'
		| 'PKR'
		| 'EGP'
		| 'NGN'
		| 'VND'
		| 'BDT'
		| 'ARS'
		| 'QAR'
		| 'KWD'
		| 'BHD'
		| 'OMR'
		| 'MAD'
		| 'KES'
		| 'UAH'
		| 'RON'
		| 'BGN'
		| 'HRK'
		| 'ISK';
	/**
	 * Sales Start At
	 */
	sales_start_at?: string | null;
	/**
	 * Sales End At
	 */
	sales_end_at?: string | null;
	/**
	 * Total Quantity
	 */
	total_quantity?: number | null;
};

/**
 * TicketTierUpdateSchema
 */
export type TicketTierUpdateSchema = {
	payment_method?: PaymentMethod;
	/**
	 * Price
	 */
	price?: number | string;
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Description
	 */
	description?: string | null;
	visibility?: Visibility | null;
	purchasable_by?: PurchasableBy | null;
	price_type?: PriceType | null;
	/**
	 * Pwyc Min
	 */
	pwyc_min?: number | string | null;
	/**
	 * Pwyc Max
	 */
	pwyc_max?: number | string | null;
	/**
	 * Currency
	 */
	currency?: string | null;
	/**
	 * Sales Start At
	 */
	sales_start_at?: string | null;
	/**
	 * Sales End At
	 */
	sales_end_at?: string | null;
	/**
	 * Total Quantity
	 */
	total_quantity?: number | null;
};

/**
 * PaginatedResponseSchema[PendingTicketSchema]
 */
export type PaginatedResponseSchemaPendingTicketSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<PendingTicketSchema>;
};

/**
 * PendingTicketSchema
 *
 * Schema for pending tickets in admin interface.
 */
export type PendingTicketSchema = {
	user: MemberUserSchema;
	tier: TierSchema;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Status
	 */
	status?: string;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * CheckInResponseSchema
 *
 * Schema for ticket check-in response.
 */
export type CheckInResponseSchema = {
	user: MinimalRevelUserSchema;
	tier?: TierSchema | null;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Status
	 */
	status?: string;
	/**
	 * Checked In At
	 */
	checked_in_at?: string | null;
};

/**
 * CheckInRequestSchema
 *
 * Schema for ticket check-in requests.
 */
export type CheckInRequestSchema = {
	/**
	 * Ticket Id
	 */
	ticket_id: string;
};

/**
 * DirectInvitationResponseSchema
 *
 * Response schema for direct invitation creation.
 */
export type DirectInvitationResponseSchema = {
	/**
	 * Created Invitations
	 *
	 * Number of EventInvitation objects created
	 */
	created_invitations: number;
	/**
	 * Pending Invitations
	 *
	 * Number of PendingEventInvitation objects created
	 */
	pending_invitations: number;
	/**
	 * Total Invited
	 *
	 * Total number of users invited
	 */
	total_invited: number;
};

/**
 * DirectInvitationCreateSchema
 *
 * Schema for creating direct invitations to events.
 */
export type DirectInvitationCreateSchema = {
	/**
	 * Waives Questionnaire
	 */
	waives_questionnaire?: boolean;
	/**
	 * Waives Purchase
	 */
	waives_purchase?: boolean;
	/**
	 * Overrides Max Attendees
	 */
	overrides_max_attendees?: boolean;
	/**
	 * Waives Membership Required
	 */
	waives_membership_required?: boolean;
	/**
	 * Waives Rsvp Deadline
	 */
	waives_rsvp_deadline?: boolean;
	/**
	 * Custom Message
	 */
	custom_message?: string | null;
	/**
	 * Emails
	 *
	 * List of email addresses to invite
	 */
	emails: Array<string>;
	/**
	 * Tier Id
	 *
	 * Ticket tier to assign to invitations
	 */
	tier_id: string;
	/**
	 * Send Notification
	 *
	 * Whether to send notification emails
	 */
	send_notification?: boolean;
};

/**
 * EventInvitationListSchema
 *
 * Schema for listing EventInvitation objects.
 */
export type EventInvitationListSchema = {
	/**
	 * Id
	 */
	id: string;
	user: MinimalRevelUserSchema;
	tier?: TierSchema | null;
	/**
	 * Waives Questionnaire
	 */
	waives_questionnaire: boolean;
	/**
	 * Waives Purchase
	 */
	waives_purchase: boolean;
	/**
	 * Overrides Max Attendees
	 */
	overrides_max_attendees: boolean;
	/**
	 * Waives Membership Required
	 */
	waives_membership_required: boolean;
	/**
	 * Waives Rsvp Deadline
	 */
	waives_rsvp_deadline: boolean;
	/**
	 * Custom Message
	 */
	custom_message?: string | null;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * PaginatedResponseSchema[EventInvitationListSchema]
 */
export type PaginatedResponseSchemaEventInvitationListSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<EventInvitationListSchema>;
};

/**
 * PaginatedResponseSchema[PendingEventInvitationListSchema]
 */
export type PaginatedResponseSchemaPendingEventInvitationListSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<PendingEventInvitationListSchema>;
};

/**
 * PendingEventInvitationListSchema
 *
 * Schema for listing PendingEventInvitation objects.
 */
export type PendingEventInvitationListSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Email
	 */
	email: string;
	tier?: TierSchema | null;
	/**
	 * Waives Questionnaire
	 */
	waives_questionnaire: boolean;
	/**
	 * Waives Purchase
	 */
	waives_purchase: boolean;
	/**
	 * Overrides Max Attendees
	 */
	overrides_max_attendees: boolean;
	/**
	 * Waives Membership Required
	 */
	waives_membership_required: boolean;
	/**
	 * Waives Rsvp Deadline
	 */
	waives_rsvp_deadline: boolean;
	/**
	 * Custom Message
	 */
	custom_message?: string | null;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * RSVPFilterSchema
 *
 * Filter schema for event RSVPs.
 */
export type RsvpFilterSchema = {
	/**
	 * Status
	 */
	status?: string | null;
	/**
	 * User Id
	 */
	user_id?: string | null;
};

/**
 * PaginatedResponseSchema[RSVPDetailSchema]
 */
export type PaginatedResponseSchemaRsvpDetailSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<RsvpDetailSchema>;
};

/**
 * RSVPDetailSchema
 *
 * Schema for RSVP details in admin views.
 */
export type RsvpDetailSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Event Id
	 */
	event_id: string;
	user: MinimalRevelUserSchema;
	status: Status;
	/**
	 * Created At
	 */
	created_at: string;
	/**
	 * Updated At
	 */
	updated_at: string;
};

/**
 * RSVPCreateSchema
 *
 * Schema for creating an RSVP on behalf of a user.
 */
export type RsvpCreateSchema = {
	/**
	 * User Id
	 */
	user_id: string;
	status: Status;
};

/**
 * RSVPUpdateSchema
 *
 * Schema for updating an RSVP.
 */
export type RsvpUpdateSchema = {
	status: Status;
};

/**
 * OrganizationPermissionsSchema
 */
export type OrganizationPermissionsSchema = {
	/**
	 * Organization Permissions
	 */
	organization_permissions?: {
		[key: string]: PermissionsSchema | 'owner';
	} | null;
};

/**
 * EventSeriesFilterSchema
 */
export type EventSeriesFilterSchema = {
	/**
	 * Organization
	 */
	organization?: string | null;
	/**
	 * Tags
	 */
	tags?: Array<string> | null;
};

/**
 * PotluckItemRetrieveSchema
 */
export type PotluckItemRetrieveSchema = {
	/**
	 * Is Assigned
	 */
	is_assigned?: boolean;
	/**
	 * Is Owned
	 */
	is_owned?: boolean;
	/**
	 * Note Html
	 */
	note_html?: string;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Item Type
	 */
	item_type: string;
	/**
	 * Quantity
	 */
	quantity?: string | null;
	/**
	 * Note
	 */
	note?: string | null;
};

/**
 * ItemTypes
 */
export type ItemTypes =
	| 'food'
	| 'main_course'
	| 'side_dish'
	| 'dessert'
	| 'drink'
	| 'alcohol'
	| 'non_alcoholic'
	| 'supplies'
	| 'labor'
	| 'entertainment'
	| 'sexual_health'
	| 'toys'
	| 'care'
	| 'transport'
	| 'misc';

/**
 * PotluckItemCreateSchema
 */
export type PotluckItemCreateSchema = {
	item_type: ItemTypes;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Quantity
	 */
	quantity?: string | null;
	/**
	 * Note
	 */
	note?: string | null;
};

/**
 * QuestionnaireFilterSchema
 */
export type QuestionnaireFilterSchema = {
	/**
	 * Organization Id
	 */
	organization_id?: string | null;
	/**
	 * Event Id
	 */
	event_id?: string | null;
	/**
	 * Event Series Id
	 */
	event_series_id?: string | null;
};

/**
 * OrganizationQuestionnaireInListSchema
 */
export type OrganizationQuestionnaireInListSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Events
	 */
	events?: Array<MinimalEventSchema>;
	/**
	 * Event Series
	 */
	event_series?: Array<EventSeriesRetrieveSchema>;
	/**
	 * Max Submission Age
	 */
	max_submission_age?: string | number | null;
	questionnaire_type: Types;
	questionnaire: QuestionnaireInListSchema;
	/**
	 * Pending Evaluations Count
	 */
	pending_evaluations_count?: number;
};

/**
 * PaginatedResponseSchema[OrganizationQuestionnaireInListSchema]
 */
export type PaginatedResponseSchemaOrganizationQuestionnaireInListSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<OrganizationQuestionnaireInListSchema>;
};

/**
 * QuestionnaireInListSchema
 */
export type QuestionnaireInListSchema = {
	/**
	 * Name
	 */
	name: string;
	status: QuestionnairesModelsQuestionnaireStatus;
	/**
	 * Min Score
	 */
	min_score: number | string;
	/**
	 * Shuffle Questions
	 */
	shuffle_questions?: boolean;
	/**
	 * Shuffle Sections
	 */
	shuffle_sections?: boolean;
	evaluation_mode: EvaluationMode;
	/**
	 * Id
	 */
	id: string;
};

/**
 * FreeTextQuestionCreateSchema
 *
 * Schema for creating a FreeTextQuestion.
 */
export type FreeTextQuestionCreateSchema = {
	/**
	 * Section Id
	 */
	section_id?: string | null;
	/**
	 * Question
	 */
	question: string;
	/**
	 * Is Mandatory
	 */
	is_mandatory?: boolean;
	/**
	 * Order
	 */
	order?: number;
	/**
	 * Positive Weight
	 */
	positive_weight?: number | string;
	/**
	 * Negative Weight
	 */
	negative_weight?: number | string;
	/**
	 * Is Fatal
	 */
	is_fatal?: boolean;
	/**
	 * Llm Guidelines
	 */
	llm_guidelines?: string | null;
};

/**
 * MultipleChoiceOptionCreateSchema
 *
 * Schema for creating a MultipleChoiceOption.
 */
export type MultipleChoiceOptionCreateSchema = {
	/**
	 * Option
	 */
	option: string;
	/**
	 * Is Correct
	 */
	is_correct?: boolean;
	/**
	 * Order
	 */
	order?: number;
};

/**
 * MultipleChoiceQuestionCreateSchema
 *
 * Schema for creating a MultipleChoiceQuestion.
 */
export type MultipleChoiceQuestionCreateSchema = {
	/**
	 * Section Id
	 */
	section_id?: string | null;
	/**
	 * Question
	 */
	question: string;
	/**
	 * Is Mandatory
	 */
	is_mandatory?: boolean;
	/**
	 * Order
	 */
	order?: number;
	/**
	 * Positive Weight
	 */
	positive_weight?: number | string;
	/**
	 * Negative Weight
	 */
	negative_weight?: number | string;
	/**
	 * Is Fatal
	 */
	is_fatal?: boolean;
	/**
	 * Allow Multiple Answers
	 */
	allow_multiple_answers?: boolean;
	/**
	 * Shuffle Options
	 */
	shuffle_options?: boolean;
	/**
	 * Options
	 */
	options: Array<MultipleChoiceOptionCreateSchema>;
};

/**
 * OrganizationQuestionnaireSchema
 */
export type OrganizationQuestionnaireSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Events
	 */
	events?: Array<MinimalEventSchema>;
	/**
	 * Event Series
	 */
	event_series?: Array<EventSeriesRetrieveSchema>;
	/**
	 * Max Submission Age
	 */
	max_submission_age?: string | number | null;
	questionnaire_type: Types;
	questionnaire: QuestionnaireCreateSchema;
};

/**
 * QuestionnaireCreateSchema
 *
 * Schema for creating a new Questionnaire with its sections and questions.
 */
export type QuestionnaireCreateSchema = {
	/**
	 * Name
	 */
	name: string;
	status?: Status;
	/**
	 * Min Score
	 */
	min_score: number | string;
	/**
	 * Shuffle Questions
	 */
	shuffle_questions?: boolean;
	/**
	 * Shuffle Sections
	 */
	shuffle_sections?: boolean;
	evaluation_mode: EvaluationMode;
	/**
	 * Sections
	 */
	sections?: Array<SectionCreateSchema>;
	/**
	 * Multiplechoicequestion Questions
	 */
	multiplechoicequestion_questions?: Array<MultipleChoiceQuestionCreateSchema>;
	/**
	 * Freetextquestion Questions
	 */
	freetextquestion_questions?: Array<FreeTextQuestionCreateSchema>;
	/**
	 * Llm Guidelines
	 */
	llm_guidelines?: string | null;
	/**
	 * Can Retake After
	 */
	can_retake_after?: string | number | null;
};

/**
 * SectionCreateSchema
 *
 * Schema for creating a QuestionnaireSection.
 */
export type SectionCreateSchema = {
	/**
	 * Name
	 */
	name: string;
	/**
	 * Order
	 */
	order?: number;
	/**
	 * Multiplechoicequestion Questions
	 */
	multiplechoicequestion_questions?: Array<MultipleChoiceQuestionCreateSchema>;
	/**
	 * Freetextquestion Questions
	 */
	freetextquestion_questions?: Array<FreeTextQuestionCreateSchema>;
};

/**
 * OrganizationQuestionnaireCreateSchema
 *
 * Schema for creating OrganizationQuestionnaire with its underlying Questionnaire.
 *
 * Combines Questionnaire creation fields (name, sections, questions, etc.) with
 * OrganizationQuestionnaire wrapper fields (max_submission_age, questionnaire_type).
 */
export type OrganizationQuestionnaireCreateSchema = {
	/**
	 * Max Submission Age
	 */
	max_submission_age?: string | null;
	questionnaire_type?: Types;
	/**
	 * Name
	 */
	name: string;
	status?: Status;
	/**
	 * Min Score
	 */
	min_score: number | string;
	/**
	 * Shuffle Questions
	 */
	shuffle_questions?: boolean;
	/**
	 * Shuffle Sections
	 */
	shuffle_sections?: boolean;
	evaluation_mode: EvaluationMode;
	/**
	 * Sections
	 */
	sections?: Array<SectionCreateSchema>;
	/**
	 * Multiplechoicequestion Questions
	 */
	multiplechoicequestion_questions?: Array<MultipleChoiceQuestionCreateSchema>;
	/**
	 * Freetextquestion Questions
	 */
	freetextquestion_questions?: Array<FreeTextQuestionCreateSchema>;
	/**
	 * Llm Guidelines
	 */
	llm_guidelines?: string | null;
	/**
	 * Can Retake After
	 */
	can_retake_after?: string | number | null;
};

/**
 * OrganizationQuestionnaireUpdateSchema
 *
 * Schema for updating OrganizationQuestionnaire and its underlying Questionnaire.
 *
 * Includes fields from both OrganizationQuestionnaire (wrapper) and Questionnaire (the actual questionnaire).
 * All fields are optional to allow partial updates.
 */
export type OrganizationQuestionnaireUpdateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Min Score
	 */
	min_score?: number | string | null;
	/**
	 * Shuffle Questions
	 */
	shuffle_questions?: boolean | null;
	/**
	 * Shuffle Sections
	 */
	shuffle_sections?: boolean | null;
	evaluation_mode?: EvaluationMode | null;
	/**
	 * Llm Guidelines
	 */
	llm_guidelines?: string | null;
	/**
	 * Can Retake After
	 */
	can_retake_after?: string | null;
	/**
	 * Max Attempts
	 */
	max_attempts?: number;
	/**
	 * Max Submission Age
	 */
	max_submission_age?: string | null;
	questionnaire_type?: Types | null;
};

/**
 * SectionUpdateSchema
 *
 * Schema for updating a Section.
 */
export type SectionUpdateSchema = {
	/**
	 * Name
	 */
	name: string;
	/**
	 * Order
	 */
	order?: number;
	/**
	 * Multiplechoicequestion Questions
	 */
	multiplechoicequestion_questions?: Array<MultipleChoiceQuestionCreateSchema>;
	/**
	 * Freetextquestion Questions
	 */
	freetextquestion_questions?: Array<FreeTextQuestionCreateSchema>;
};

/**
 * MultipleChoiceQuestionUpdateSchema
 *
 * Schema for updating a MultipleChoiceQuestion.
 */
export type MultipleChoiceQuestionUpdateSchema = {
	/**
	 * Section Id
	 */
	section_id?: string | null;
	/**
	 * Question
	 */
	question: string;
	/**
	 * Is Mandatory
	 */
	is_mandatory?: boolean;
	/**
	 * Order
	 */
	order?: number;
	/**
	 * Positive Weight
	 */
	positive_weight?: number | string;
	/**
	 * Negative Weight
	 */
	negative_weight?: number | string;
	/**
	 * Is Fatal
	 */
	is_fatal?: boolean;
	/**
	 * Allow Multiple Answers
	 */
	allow_multiple_answers?: boolean;
	/**
	 * Shuffle Options
	 */
	shuffle_options?: boolean;
	/**
	 * Options
	 */
	options: Array<MultipleChoiceOptionCreateSchema>;
};

/**
 * MultipleChoiceOptionUpdateSchema
 *
 * Schema for updating a MultipleChoiceOption.
 */
export type MultipleChoiceOptionUpdateSchema = {
	/**
	 * Option
	 */
	option: string;
	/**
	 * Is Correct
	 */
	is_correct?: boolean;
	/**
	 * Order
	 */
	order?: number;
};

/**
 * FreeTextQuestionUpdateSchema
 *
 * Schema for updating a FreeTextQuestion.
 */
export type FreeTextQuestionUpdateSchema = {
	/**
	 * Section Id
	 */
	section_id?: string | null;
	/**
	 * Question
	 */
	question: string;
	/**
	 * Is Mandatory
	 */
	is_mandatory?: boolean;
	/**
	 * Order
	 */
	order?: number;
	/**
	 * Positive Weight
	 */
	positive_weight?: number | string;
	/**
	 * Negative Weight
	 */
	negative_weight?: number | string;
	/**
	 * Is Fatal
	 */
	is_fatal?: boolean;
	/**
	 * Llm Guidelines
	 */
	llm_guidelines?: string | null;
};

/**
 * SubmissionFilterSchema
 *
 * Filter schema for questionnaire submissions.
 */
export type SubmissionFilterSchema = {
	/**
	 * Evaluation Status
	 */
	evaluation_status?: string | null;
};

/**
 * PaginatedResponseSchema[SubmissionListItemSchema]
 */
export type PaginatedResponseSchemaSubmissionListItemSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<SubmissionListItemSchema>;
};

/**
 * SubmissionListItemSchema
 *
 * Schema for listing submissions for organization staff.
 */
export type SubmissionListItemSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * User Email
	 */
	user_email: string;
	/**
	 * User Name
	 */
	user_name: string;
	/**
	 * Questionnaire Name
	 */
	questionnaire_name: string;
	evaluation_status?: Status | null;
	/**
	 * Evaluation Score
	 */
	evaluation_score?: number | string | null;
	/**
	 * Status
	 *
	 * The status of the submission.
	 */
	status?: string;
	/**
	 * Submitted At
	 */
	submitted_at?: string | null;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * EvaluationResponseSchema
 *
 * Schema for evaluation response.
 */
export type EvaluationResponseSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Submission Id
	 */
	submission_id: string;
	status: Status;
	/**
	 * Score
	 */
	score: number | string | null;
	/**
	 * Comments
	 */
	comments: string | null;
	/**
	 * Evaluator Id
	 */
	evaluator_id: string | null;
	/**
	 * Created At
	 */
	created_at: string;
	/**
	 * Updated At
	 */
	updated_at: string;
};

/**
 * QuestionAnswerDetailSchema
 *
 * Schema for question and answer details.
 *
 * For multiple choice questions, answer_content is a list of dicts containing:
 * - option_id: UUID of the selected option
 * - option_text: Text of the selected option
 * - is_correct: Boolean indicating if this option is correct
 *
 * For free text questions, answer_content is a list with a single dict containing:
 * - answer: The free text answer string
 */
export type QuestionAnswerDetailSchema = {
	/**
	 * Question Id
	 */
	question_id: string;
	/**
	 * Question Text
	 */
	question_text: string;
	/**
	 * Question Type
	 */
	question_type: string;
	/**
	 * Answer Content
	 */
	answer_content: Array<{
		[key: string]: unknown;
	}>;
};

/**
 * SubmissionDetailSchema
 *
 * Schema for detailed view of a submission.
 */
export type SubmissionDetailSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * User Email
	 */
	user_email: string;
	/**
	 * User Name
	 */
	user_name: string;
	questionnaire: QuestionnaireInListSchema;
	status: QuestionnairesModelsQuestionnaireSubmissionStatus;
	/**
	 * Submitted At
	 */
	submitted_at: string | null;
	evaluation?: EvaluationResponseSchema | null;
	/**
	 * Answers
	 */
	answers: Array<QuestionAnswerDetailSchema>;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * Status
 */
export type QuestionnairesModelsQuestionnaireStatus = 'draft' | 'ready' | 'published';

/**
 * EvaluationCreateSchema
 *
 * Schema for creating/updating an evaluation.
 */
export type EvaluationCreateSchema = {
	status: Status;
	/**
	 * Score
	 */
	score?: number | string | null;
	/**
	 * Comments
	 */
	comments?: string | null;
};

/**
 * EventAssignmentSchema
 */
export type EventAssignmentSchema = {
	/**
	 * Event Ids
	 */
	event_ids: Array<string>;
};

/**
 * EventSeriesAssignmentSchema
 */
export type EventSeriesAssignmentSchema = {
	/**
	 * Event Series Ids
	 */
	event_series_ids: Array<string>;
};

/**
 * GeneralUserPreferencesSchema
 */
export type GeneralUserPreferencesSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	city?: CitySchema | null;
};

/**
 * VisibilityPreference
 */
export type VisibilityPreference = 'always' | 'never' | 'to_members' | 'to_invitees' | 'to_both';

/**
 * GeneralUserPreferencesUpdateSchema
 */
export type GeneralUserPreferencesUpdateSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * City Id
	 */
	city_id?: number | null;
};

/**
 * UserOrganizationPreferencesSchema
 */
export type UserOrganizationPreferencesSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * Is Subscribed
	 */
	is_subscribed: boolean;
	/**
	 * Notify On New Events
	 */
	notify_on_new_events: boolean;
};

/**
 * UserOrganizationPreferencesUpdateSchema
 */
export type UserOrganizationPreferencesUpdateSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * Is Subscribed
	 */
	is_subscribed?: boolean;
	/**
	 * Notify On New Events
	 */
	notify_on_new_events?: boolean;
};

/**
 * UserEventSeriesPreferencesSchema
 */
export type UserEventSeriesPreferencesSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * Is Subscribed
	 */
	is_subscribed: boolean;
	/**
	 * Notify On New Events
	 */
	notify_on_new_events: boolean;
};

/**
 * UserEventSeriesPreferencesUpdateSchema
 */
export type UserEventSeriesPreferencesUpdateSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * Is Subscribed
	 */
	is_subscribed?: boolean;
	/**
	 * Notify On New Events
	 */
	notify_on_new_events?: boolean;
};

/**
 * UserEventPreferencesSchema
 */
export type UserEventPreferencesSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * Is Subscribed
	 */
	is_subscribed: boolean;
	/**
	 * Notify On Potluck Updates
	 */
	notify_on_potluck_updates: boolean;
};

/**
 * UserEventPreferencesUpdateSchema
 */
export type UserEventPreferencesUpdateSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * Is Subscribed
	 */
	is_subscribed?: boolean;
	/**
	 * Notify On Potluck Updates
	 */
	notify_on_potluck_updates?: boolean;
};

/**
 * PaginatedResponseSchema[TagSchema]
 */
export type PaginatedResponseSchemaTagSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<TagSchema>;
};

/**
 * CityFilterSchema
 */
export type CityFilterSchema = {
	/**
	 * Country
	 */
	country?: string | null;
};

/**
 * PaginatedResponseSchema[CitySchema]
 */
export type PaginatedResponseSchemaCitySchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<CitySchema>;
};

export type ApiApiVersionData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/version';
};

export type ApiApiVersionResponses = {
	/**
	 * OK
	 */
	200: VersionResponse;
};

export type ApiApiVersionResponse = ApiApiVersionResponses[keyof ApiApiVersionResponses];

export type ApiApiHealthcheckData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/healthcheck';
};

export type ApiApiHealthcheckResponses = {
	/**
	 * OK
	 */
	200: ResponseOk;
};

export type ApiApiHealthcheckResponse =
	ApiApiHealthcheckResponses[keyof ApiApiHealthcheckResponses];

export type AuthObtainToken6213B561Data = {
	body: TokenObtainPairInputSchema;
	path?: never;
	query?: never;
	url: '/api/auth/token/pair';
};

export type AuthObtainToken6213B561Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: TokenObtainPairOutputSchema | TempToken;
};

export type AuthObtainToken6213B561Response =
	AuthObtainToken6213B561Responses[keyof AuthObtainToken6213B561Responses];

export type TokenRefreshData = {
	body: TokenRefreshInputSchema;
	path?: never;
	query?: never;
	url: '/api/auth/refresh';
};

export type TokenRefreshResponses = {
	/**
	 * OK
	 */
	200: TokenRefreshOutputSchema;
};

export type TokenRefreshResponse = TokenRefreshResponses[keyof TokenRefreshResponses];

export type AuthDemoObtainToken444Bd397Data = {
	body: DemoLoginSchema;
	path?: never;
	query?: never;
	url: '/api/auth/demo/token/pair';
};

export type AuthDemoObtainToken444Bd397Responses = {
	/**
	 * OK
	 */
	200: TokenObtainPairOutputSchema;
};

export type AuthDemoObtainToken444Bd397Response =
	AuthDemoObtainToken444Bd397Responses[keyof AuthDemoObtainToken444Bd397Responses];

export type AuthObtainTokenWithOtpDa8Ff389Data = {
	body: TempTokenWithTotp;
	path?: never;
	query?: never;
	url: '/api/auth/token/pair/otp';
};

export type AuthObtainTokenWithOtpDa8Ff389Responses = {
	/**
	 * OK
	 */
	200: TokenObtainPairOutputSchema;
};

export type AuthObtainTokenWithOtpDa8Ff389Response =
	AuthObtainTokenWithOtpDa8Ff389Responses[keyof AuthObtainTokenWithOtpDa8Ff389Responses];

export type AuthGoogleLogin74A54BbeData = {
	body: GoogleIdTokenSchema;
	path?: never;
	query?: never;
	url: '/api/auth/google/login';
};

export type AuthGoogleLogin74A54BbeResponses = {
	/**
	 * OK
	 */
	200: TokenObtainPairOutputSchema;
};

export type AuthGoogleLogin74A54BbeResponse =
	AuthGoogleLogin74A54BbeResponses[keyof AuthGoogleLogin74A54BbeResponses];

export type OtpSetupOtp363E5C2aData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/otp/setup';
};

export type OtpSetupOtp363E5C2aResponses = {
	/**
	 * OK
	 */
	200: TotpProvisioningUriSchema;
};

export type OtpSetupOtp363E5C2aResponse =
	OtpSetupOtp363E5C2aResponses[keyof OtpSetupOtp363E5C2aResponses];

export type OtpEnableOtpD7Bde43fData = {
	body: OtpVerifySchema;
	path?: never;
	query?: never;
	url: '/api/otp/verify';
};

export type OtpEnableOtpD7Bde43fResponses = {
	/**
	 * OK
	 */
	200: RevelUserSchema;
};

export type OtpEnableOtpD7Bde43fResponse =
	OtpEnableOtpD7Bde43fResponses[keyof OtpEnableOtpD7Bde43fResponses];

export type OtpDisableOtpDb4Ed792Data = {
	body: OtpVerifySchema;
	path?: never;
	query?: never;
	url: '/api/otp/disable';
};

export type OtpDisableOtpDb4Ed792Responses = {
	/**
	 * OK
	 */
	200: RevelUserSchema;
};

export type OtpDisableOtpDb4Ed792Response =
	OtpDisableOtpDb4Ed792Responses[keyof OtpDisableOtpDb4Ed792Responses];

export type AccountExportData39Fa251bData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/account/export-data';
};

export type AccountExportData39Fa251bResponses = {
	/**
	 * OK
	 */
	200: ResponseMessage;
};

export type AccountExportData39Fa251bResponse =
	AccountExportData39Fa251bResponses[keyof AccountExportData39Fa251bResponses];

export type AccountMe2D059243Data = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/account/me';
};

export type AccountMe2D059243Responses = {
	/**
	 * OK
	 */
	200: RevelUserSchema;
};

export type AccountMe2D059243Response =
	AccountMe2D059243Responses[keyof AccountMe2D059243Responses];

export type AccountUpdateProfile25623FccData = {
	body: ProfileUpdateSchema;
	path?: never;
	query?: never;
	url: '/api/account/me';
};

export type AccountUpdateProfile25623FccResponses = {
	/**
	 * OK
	 */
	200: RevelUserSchema;
};

export type AccountUpdateProfile25623FccResponse =
	AccountUpdateProfile25623FccResponses[keyof AccountUpdateProfile25623FccResponses];

export type AccountRegisterE38Af1C4Data = {
	body: RegisterUserSchema;
	path?: never;
	query?: never;
	url: '/api/account/register';
};

export type AccountRegisterE38Af1C4Responses = {
	/**
	 * Created
	 */
	201: RevelUserSchema;
};

export type AccountRegisterE38Af1C4Response =
	AccountRegisterE38Af1C4Responses[keyof AccountRegisterE38Af1C4Responses];

export type AccountVerifyEmail822C2EfdData = {
	body: VerifyEmailSchema;
	path?: never;
	query?: never;
	url: '/api/account/verify';
};

export type AccountVerifyEmail822C2EfdResponses = {
	/**
	 * OK
	 */
	200: VerifyEmailResponseSchema;
};

export type AccountVerifyEmail822C2EfdResponse =
	AccountVerifyEmail822C2EfdResponses[keyof AccountVerifyEmail822C2EfdResponses];

export type AccountResendVerificationEmailCe7B8468Data = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/account/verify-resend';
};

export type AccountResendVerificationEmailCe7B8468Errors = {
	/**
	 * Bad Request
	 */
	400: ResponseMessage;
};

export type AccountResendVerificationEmailCe7B8468Error =
	AccountResendVerificationEmailCe7B8468Errors[keyof AccountResendVerificationEmailCe7B8468Errors];

export type AccountResendVerificationEmailCe7B8468Responses = {
	/**
	 * OK
	 */
	200: ResponseMessage;
};

export type AccountResendVerificationEmailCe7B8468Response =
	AccountResendVerificationEmailCe7B8468Responses[keyof AccountResendVerificationEmailCe7B8468Responses];

export type AccountDeleteAccountRequest73E637E0Data = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/account/delete-request';
};

export type AccountDeleteAccountRequest73E637E0Responses = {
	/**
	 * OK
	 */
	200: ResponseMessage;
};

export type AccountDeleteAccountRequest73E637E0Response =
	AccountDeleteAccountRequest73E637E0Responses[keyof AccountDeleteAccountRequest73E637E0Responses];

export type AccountDeleteAccountConfirm65333D29Data = {
	body: DeleteAccountConfirmSchema;
	path?: never;
	query?: never;
	url: '/api/account/delete-confirm';
};

export type AccountDeleteAccountConfirm65333D29Responses = {
	/**
	 * OK
	 */
	200: ResponseMessage;
};

export type AccountDeleteAccountConfirm65333D29Response =
	AccountDeleteAccountConfirm65333D29Responses[keyof AccountDeleteAccountConfirm65333D29Responses];

export type AccountResetPasswordRequestCc1De155Data = {
	body: PasswordResetRequestSchema;
	path?: never;
	query?: never;
	url: '/api/account/password/reset-request';
};

export type AccountResetPasswordRequestCc1De155Responses = {
	/**
	 * OK
	 */
	200: ResponseMessage;
};

export type AccountResetPasswordRequestCc1De155Response =
	AccountResetPasswordRequestCc1De155Responses[keyof AccountResetPasswordRequestCc1De155Responses];

export type AccountResetPassword969Ddb20Data = {
	body: PasswordResetSchema;
	path?: never;
	query?: never;
	url: '/api/account/password/reset';
};

export type AccountResetPassword969Ddb20Responses = {
	/**
	 * OK
	 */
	200: ResponseMessage;
};

export type AccountResetPassword969Ddb20Response =
	AccountResetPassword969Ddb20Responses[keyof AccountResetPassword969Ddb20Responses];

export type DashboardDashboardOrganizations0141647bData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Owner
		 */
		owner?: boolean;
		/**
		 * Staff
		 */
		staff?: boolean;
		/**
		 * Member
		 */
		member?: boolean;
		/**
		 * Subscriber
		 */
		subscriber?: boolean;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/dashboard/organizations';
};

export type DashboardDashboardOrganizations0141647bResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationRetrieveSchema;
};

export type DashboardDashboardOrganizations0141647bResponse =
	DashboardDashboardOrganizations0141647bResponses[keyof DashboardDashboardOrganizations0141647bResponses];

export type DashboardDashboardEvents39Ce148dData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Owner
		 */
		owner?: boolean;
		/**
		 * Staff
		 */
		staff?: boolean;
		/**
		 * Member
		 */
		member?: boolean;
		/**
		 * Rsvp Yes
		 */
		rsvp_yes?: boolean;
		/**
		 * Rsvp No
		 */
		rsvp_no?: boolean;
		/**
		 * Rsvp Maybe
		 */
		rsvp_maybe?: boolean;
		/**
		 * Got Ticket
		 */
		got_ticket?: boolean;
		/**
		 * Got Invitation
		 */
		got_invitation?: boolean;
		/**
		 * Subscriber
		 */
		subscriber?: boolean;
		/**
		 * Order By
		 */
		order_by?: 'start' | '-start';
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/dashboard/events';
};

export type DashboardDashboardEvents39Ce148dResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventInListSchema;
};

export type DashboardDashboardEvents39Ce148dResponse =
	DashboardDashboardEvents39Ce148dResponses[keyof DashboardDashboardEvents39Ce148dResponses];

export type DashboardDashboardEventSeriesA01651AfData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Owner
		 */
		owner?: boolean;
		/**
		 * Staff
		 */
		staff?: boolean;
		/**
		 * Member
		 */
		member?: boolean;
		/**
		 * Subscriber
		 */
		subscriber?: boolean;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/dashboard/event_series';
};

export type DashboardDashboardEventSeriesA01651AfResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventSeriesRetrieveSchema;
};

export type DashboardDashboardEventSeriesA01651AfResponse =
	DashboardDashboardEventSeriesA01651AfResponses[keyof DashboardDashboardEventSeriesA01651AfResponses];

export type DashboardDashboardInvitationsFb01E997Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/dashboard/invitations';
};

export type DashboardDashboardInvitationsFb01E997Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaInvitationSchema;
};

export type DashboardDashboardInvitationsFb01E997Response =
	DashboardDashboardInvitationsFb01E997Responses[keyof DashboardDashboardInvitationsFb01E997Responses];

export type OrganizationListOrganizationsE382Df81Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Country
		 */
		country?: string | null;
		/**
		 * City Id
		 */
		city_id?: number | null;
		/**
		 * Tags
		 */
		tags?: Array<string> | null;
		/**
		 * Order By
		 */
		order_by?: 'name' | '-name' | 'distance';
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organizations/';
};

export type OrganizationListOrganizationsE382Df81Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationRetrieveSchema;
};

export type OrganizationListOrganizationsE382Df81Response =
	OrganizationListOrganizationsE382Df81Responses[keyof OrganizationListOrganizationsE382Df81Responses];

export type OrganizationGetOrganization98Dfc360Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organizations/{slug}';
};

export type OrganizationGetOrganization98Dfc360Responses = {
	/**
	 * OK
	 */
	200: OrganizationRetrieveSchema;
};

export type OrganizationGetOrganization98Dfc360Response =
	OrganizationGetOrganization98Dfc360Responses[keyof OrganizationGetOrganization98Dfc360Responses];

export type OrganizationListResources030D884eData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		resource_type?: ResourceTypes | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organizations/{slug}/resources';
};

export type OrganizationListResources030D884eResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaAdditionalResourceSchema;
};

export type OrganizationListResources030D884eResponse =
	OrganizationListResources030D884eResponses[keyof OrganizationListResources030D884eResponses];

export type OrganizationCreateMembershipRequestDf1E7889Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organizations/{slug}/membership-requests';
};

export type OrganizationCreateMembershipRequestDf1E7889Responses = {
	/**
	 * OK
	 */
	200: OrganizationMembershipRequestRetrieve;
};

export type OrganizationCreateMembershipRequestDf1E7889Response =
	OrganizationCreateMembershipRequestDf1E7889Responses[keyof OrganizationCreateMembershipRequestDf1E7889Responses];

export type OrganizationClaimInvitationE7C96D18Data = {
	body?: never;
	path: {
		/**
		 * Token
		 */
		token: string;
	};
	query?: never;
	url: '/api/organizations/claim-invitation/{token}';
};

export type OrganizationClaimInvitationE7C96D18Errors = {
	/**
	 * Bad Request
	 */
	400: ResponseMessage;
};

export type OrganizationClaimInvitationE7C96D18Error =
	OrganizationClaimInvitationE7C96D18Errors[keyof OrganizationClaimInvitationE7C96D18Errors];

export type OrganizationClaimInvitationE7C96D18Responses = {
	/**
	 * OK
	 */
	200: OrganizationRetrieveSchema;
};

export type OrganizationClaimInvitationE7C96D18Response =
	OrganizationClaimInvitationE7C96D18Responses[keyof OrganizationClaimInvitationE7C96D18Responses];

export type OrganizationadminGetOrganization7Bc96190Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}';
};

export type OrganizationadminGetOrganization7Bc96190Responses = {
	/**
	 * OK
	 */
	200: OrganizationAdminDetailSchema;
};

export type OrganizationadminGetOrganization7Bc96190Response =
	OrganizationadminGetOrganization7Bc96190Responses[keyof OrganizationadminGetOrganization7Bc96190Responses];

export type OrganizationadminUpdateOrganizationB63F6F97Data = {
	body: OrganizationEditSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}';
};

export type OrganizationadminUpdateOrganizationB63F6F97Responses = {
	/**
	 * OK
	 */
	200: OrganizationRetrieveSchema;
};

export type OrganizationadminUpdateOrganizationB63F6F97Response =
	OrganizationadminUpdateOrganizationB63F6F97Responses[keyof OrganizationadminUpdateOrganizationB63F6F97Responses];

export type OrganizationadminStripeConnectD62F7C3bData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/stripe/connect';
};

export type OrganizationadminStripeConnectD62F7C3bResponses = {
	/**
	 * OK
	 */
	200: StripeOnboardingLinkSchema;
};

export type OrganizationadminStripeConnectD62F7C3bResponse =
	OrganizationadminStripeConnectD62F7C3bResponses[keyof OrganizationadminStripeConnectD62F7C3bResponses];

export type OrganizationadminStripeAccountVerify427Cb65dData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/stripe/account/verify';
};

export type OrganizationadminStripeAccountVerify427Cb65dResponses = {
	/**
	 * OK
	 */
	200: StripeAccountStatusSchema;
};

export type OrganizationadminStripeAccountVerify427Cb65dResponse =
	OrganizationadminStripeAccountVerify427Cb65dResponses[keyof OrganizationadminStripeAccountVerify427Cb65dResponses];

export type OrganizationadminUploadLogo9A2F7706Data = {
	/**
	 * FileParams
	 */
	body: {
		/**
		 * Logo
		 */
		logo: Blob | File;
	};
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/upload-logo';
};

export type OrganizationadminUploadLogo9A2F7706Responses = {
	/**
	 * OK
	 */
	200: OrganizationRetrieveSchema;
};

export type OrganizationadminUploadLogo9A2F7706Response =
	OrganizationadminUploadLogo9A2F7706Responses[keyof OrganizationadminUploadLogo9A2F7706Responses];

export type OrganizationadminUploadCoverArt968Ad681Data = {
	/**
	 * FileParams
	 */
	body: {
		/**
		 * Cover Art
		 */
		cover_art: Blob | File;
	};
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/upload-cover-art';
};

export type OrganizationadminUploadCoverArt968Ad681Responses = {
	/**
	 * OK
	 */
	200: OrganizationRetrieveSchema;
};

export type OrganizationadminUploadCoverArt968Ad681Response =
	OrganizationadminUploadCoverArt968Ad681Responses[keyof OrganizationadminUploadCoverArt968Ad681Responses];

export type OrganizationadminDeleteLogo267F8E75Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/delete-logo';
};

export type OrganizationadminDeleteLogo267F8E75Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminDeleteLogo267F8E75Response =
	OrganizationadminDeleteLogo267F8E75Responses[keyof OrganizationadminDeleteLogo267F8E75Responses];

export type OrganizationadminDeleteCoverArt27F73767Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/delete-cover-art';
};

export type OrganizationadminDeleteCoverArt27F73767Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminDeleteCoverArt27F73767Response =
	OrganizationadminDeleteCoverArt27F73767Responses[keyof OrganizationadminDeleteCoverArt27F73767Responses];

export type OrganizationadminCreateEventSeries9B49Bc17Data = {
	body: EventSeriesEditSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/create-event-series';
};

export type OrganizationadminCreateEventSeries9B49Bc17Errors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type OrganizationadminCreateEventSeries9B49Bc17Error =
	OrganizationadminCreateEventSeries9B49Bc17Errors[keyof OrganizationadminCreateEventSeries9B49Bc17Errors];

export type OrganizationadminCreateEventSeries9B49Bc17Responses = {
	/**
	 * OK
	 */
	200: EventSeriesRetrieveSchema;
};

export type OrganizationadminCreateEventSeries9B49Bc17Response =
	OrganizationadminCreateEventSeries9B49Bc17Responses[keyof OrganizationadminCreateEventSeries9B49Bc17Responses];

export type OrganizationadminCreateEvent018Aca57Data = {
	body: EventCreateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/create-event';
};

export type OrganizationadminCreateEvent018Aca57Errors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type OrganizationadminCreateEvent018Aca57Error =
	OrganizationadminCreateEvent018Aca57Errors[keyof OrganizationadminCreateEvent018Aca57Errors];

export type OrganizationadminCreateEvent018Aca57Responses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type OrganizationadminCreateEvent018Aca57Response =
	OrganizationadminCreateEvent018Aca57Responses[keyof OrganizationadminCreateEvent018Aca57Responses];

export type OrganizationadminListOrganizationTokens8Bfc7C19Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		/**
		 * Is Active
		 */
		is_active?: boolean | null;
		/**
		 * Organization Id
		 */
		organization_id?: string | null;
		/**
		 * Membership Pass
		 */
		membership_pass?: boolean | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organization-admin/{slug}/tokens';
};

export type OrganizationadminListOrganizationTokens8Bfc7C19Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationTokenSchema;
};

export type OrganizationadminListOrganizationTokens8Bfc7C19Response =
	OrganizationadminListOrganizationTokens8Bfc7C19Responses[keyof OrganizationadminListOrganizationTokens8Bfc7C19Responses];

export type OrganizationadminCreateOrganizationToken87Bde273Data = {
	body: OrganizationTokenCreateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/token';
};

export type OrganizationadminCreateOrganizationToken87Bde273Responses = {
	/**
	 * OK
	 */
	200: OrganizationTokenSchema;
};

export type OrganizationadminCreateOrganizationToken87Bde273Response =
	OrganizationadminCreateOrganizationToken87Bde273Responses[keyof OrganizationadminCreateOrganizationToken87Bde273Responses];

export type OrganizationadminDeleteOrganizationToken912Bf98cData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Token Id
		 */
		token_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/token/{token_id}';
};

export type OrganizationadminDeleteOrganizationToken912Bf98cResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminDeleteOrganizationToken912Bf98cResponse =
	OrganizationadminDeleteOrganizationToken912Bf98cResponses[keyof OrganizationadminDeleteOrganizationToken912Bf98cResponses];

export type OrganizationadminUpdateOrganizationToken29584E6eData = {
	body: OrganizationTokenUpdateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Token Id
		 */
		token_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/token/{token_id}';
};

export type OrganizationadminUpdateOrganizationToken29584E6eResponses = {
	/**
	 * OK
	 */
	200: OrganizationTokenSchema;
};

export type OrganizationadminUpdateOrganizationToken29584E6eResponse =
	OrganizationadminUpdateOrganizationToken29584E6eResponses[keyof OrganizationadminUpdateOrganizationToken29584E6eResponses];

export type OrganizationadminListMembershipRequests7Ff5B9C2Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organization-admin/{slug}/membership-requests';
};

export type OrganizationadminListMembershipRequests7Ff5B9C2Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationMembershipRequestRetrieve;
};

export type OrganizationadminListMembershipRequests7Ff5B9C2Response =
	OrganizationadminListMembershipRequests7Ff5B9C2Responses[keyof OrganizationadminListMembershipRequests7Ff5B9C2Responses];

export type OrganizationadminApproveMembershipRequestCd46545aData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Request Id
		 */
		request_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/membership-requests/{request_id}/approve';
};

export type OrganizationadminApproveMembershipRequestCd46545aResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminApproveMembershipRequestCd46545aResponse =
	OrganizationadminApproveMembershipRequestCd46545aResponses[keyof OrganizationadminApproveMembershipRequestCd46545aResponses];

export type OrganizationadminRejectMembershipRequestA47851B8Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Request Id
		 */
		request_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/membership-requests/{request_id}/reject';
};

export type OrganizationadminRejectMembershipRequestA47851B8Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminRejectMembershipRequestA47851B8Response =
	OrganizationadminRejectMembershipRequestA47851B8Responses[keyof OrganizationadminRejectMembershipRequestA47851B8Responses];

export type OrganizationadminListResourcesB34E059bData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		resource_type?: ResourceTypes | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organization-admin/{slug}/resources';
};

export type OrganizationadminListResourcesB34E059bResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaAdditionalResourceSchema;
};

export type OrganizationadminListResourcesB34E059bResponse =
	OrganizationadminListResourcesB34E059bResponses[keyof OrganizationadminListResourcesB34E059bResponses];

export type OrganizationadminCreateResource07B641EeData = {
	/**
	 * FormParams
	 */
	body: {
		/**
		 * Name
		 */
		name?: string | null;
		/**
		 * Description
		 */
		description?: string | null;
		/**
		 * ResourceTypes
		 */
		resource_type: 'file' | 'link' | 'text';
		/**
		 * Visibility
		 */
		visibility?: 'public' | 'private' | 'members-only' | 'staff-only';
		/**
		 * Display On Organization Page
		 */
		display_on_organization_page?: boolean;
		/**
		 * Link
		 */
		link?: string | null;
		/**
		 * Text
		 */
		text?: string | null;
		/**
		 * Event Series Ids
		 */
		event_series_ids?: Array<string>;
		/**
		 * Event Ids
		 */
		event_ids?: Array<string>;
	};
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/resources';
};

export type OrganizationadminCreateResource07B641EeResponses = {
	/**
	 * OK
	 */
	200: AdditionalResourceSchema;
};

export type OrganizationadminCreateResource07B641EeResponse =
	OrganizationadminCreateResource07B641EeResponses[keyof OrganizationadminCreateResource07B641EeResponses];

export type OrganizationadminDeleteResource1Fdc146dData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Resource Id
		 */
		resource_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/resources/{resource_id}';
};

export type OrganizationadminDeleteResource1Fdc146dResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminDeleteResource1Fdc146dResponse =
	OrganizationadminDeleteResource1Fdc146dResponses[keyof OrganizationadminDeleteResource1Fdc146dResponses];

export type OrganizationadminGetResourceA525A9BcData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Resource Id
		 */
		resource_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/resources/{resource_id}';
};

export type OrganizationadminGetResourceA525A9BcResponses = {
	/**
	 * OK
	 */
	200: AdditionalResourceSchema;
};

export type OrganizationadminGetResourceA525A9BcResponse =
	OrganizationadminGetResourceA525A9BcResponses[keyof OrganizationadminGetResourceA525A9BcResponses];

export type OrganizationadminUpdateResource8B5Eb5C2Data = {
	body: AdditionalResourceUpdateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Resource Id
		 */
		resource_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/resources/{resource_id}';
};

export type OrganizationadminUpdateResource8B5Eb5C2Responses = {
	/**
	 * OK
	 */
	200: AdditionalResourceSchema;
};

export type OrganizationadminUpdateResource8B5Eb5C2Response =
	OrganizationadminUpdateResource8B5Eb5C2Responses[keyof OrganizationadminUpdateResource8B5Eb5C2Responses];

export type OrganizationadminListMembersC15E5684Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organization-admin/{slug}/members';
};

export type OrganizationadminListMembersC15E5684Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationMemberSchema;
};

export type OrganizationadminListMembersC15E5684Response =
	OrganizationadminListMembersC15E5684Responses[keyof OrganizationadminListMembersC15E5684Responses];

export type OrganizationadminRemoveMember057Bbf72Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * User Id
		 */
		user_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/members/{user_id}';
};

export type OrganizationadminRemoveMember057Bbf72Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminRemoveMember057Bbf72Response =
	OrganizationadminRemoveMember057Bbf72Responses[keyof OrganizationadminRemoveMember057Bbf72Responses];

export type OrganizationadminListStaff80035121Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organization-admin/{slug}/staff';
};

export type OrganizationadminListStaff80035121Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationStaffSchema;
};

export type OrganizationadminListStaff80035121Response =
	OrganizationadminListStaff80035121Responses[keyof OrganizationadminListStaff80035121Responses];

export type OrganizationadminRemoveStaff678D76A4Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * User Id
		 */
		user_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/staff/{user_id}';
};

export type OrganizationadminRemoveStaff678D76A4Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminRemoveStaff678D76A4Response =
	OrganizationadminRemoveStaff678D76A4Responses[keyof OrganizationadminRemoveStaff678D76A4Responses];

export type OrganizationadminAddStaff6396E5A3Data = {
	body?: PermissionsSchema | null;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * User Id
		 */
		user_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/staff/{user_id}';
};

export type OrganizationadminAddStaff6396E5A3Responses = {
	/**
	 * Created
	 */
	201: OrganizationStaffSchema;
};

export type OrganizationadminAddStaff6396E5A3Response =
	OrganizationadminAddStaff6396E5A3Responses[keyof OrganizationadminAddStaff6396E5A3Responses];

export type OrganizationadminUpdateStaffPermissions0Ff0B92bData = {
	body: PermissionsSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * User Id
		 */
		user_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/staff/{user_id}/permissions';
};

export type OrganizationadminUpdateStaffPermissions0Ff0B92bResponses = {
	/**
	 * OK
	 */
	200: OrganizationStaffSchema;
};

export type OrganizationadminUpdateStaffPermissions0Ff0B92bResponse =
	OrganizationadminUpdateStaffPermissions0Ff0B92bResponses[keyof OrganizationadminUpdateStaffPermissions0Ff0B92bResponses];

export type OrganizationadminClearTags5D1Fa176Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/tags';
};

export type OrganizationadminClearTags5D1Fa176Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminClearTags5D1Fa176Response =
	OrganizationadminClearTags5D1Fa176Responses[keyof OrganizationadminClearTags5D1Fa176Responses];

export type OrganizationadminAddTags0Cf4F2BbData = {
	body: TagUpdateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/tags';
};

export type OrganizationadminAddTags0Cf4F2BbResponses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TagSchema>;
};

export type OrganizationadminAddTags0Cf4F2BbResponse =
	OrganizationadminAddTags0Cf4F2BbResponses[keyof OrganizationadminAddTags0Cf4F2BbResponses];

export type OrganizationadminRemoveTags1Baa50F4Data = {
	body: TagUpdateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/tags/remove';
};

export type OrganizationadminRemoveTags1Baa50F4Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TagSchema>;
};

export type OrganizationadminRemoveTags1Baa50F4Response =
	OrganizationadminRemoveTags1Baa50F4Responses[keyof OrganizationadminRemoveTags1Baa50F4Responses];

export type EventListEvents2A0F87CdData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Country
		 */
		country?: string | null;
		/**
		 * City Id
		 */
		city_id?: number | null;
		/**
		 * Organization
		 */
		organization?: string | null;
		event_type?: Types | null;
		visibility?: Visibility | null;
		/**
		 * Event Series
		 */
		event_series?: string | null;
		/**
		 * Next Events
		 */
		next_events?: boolean | null;
		/**
		 * Past Events
		 */
		past_events?: boolean | null;
		status?: Status | null;
		/**
		 * Tags
		 */
		tags?: Array<string> | null;
		/**
		 * Order By
		 */
		order_by?: 'start' | '-start' | 'distance';
		/**
		 * Include Past
		 */
		include_past?: boolean;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/events/';
};

export type EventListEvents2A0F87CdResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventInListSchema;
};

export type EventListEvents2A0F87CdResponse =
	EventListEvents2A0F87CdResponses[keyof EventListEvents2A0F87CdResponses];

export type EventClaimInvitation53C58BffData = {
	body?: never;
	path: {
		/**
		 * Token
		 */
		token: string;
	};
	query?: never;
	url: '/api/events/claim-invitation/{token}';
};

export type EventClaimInvitation53C58BffErrors = {
	/**
	 * Bad Request
	 */
	400: ResponseMessage;
};

export type EventClaimInvitation53C58BffError =
	EventClaimInvitation53C58BffErrors[keyof EventClaimInvitation53C58BffErrors];

export type EventClaimInvitation53C58BffResponses = {
	/**
	 * OK
	 */
	200: MinimalEventSchema;
};

export type EventClaimInvitation53C58BffResponse =
	EventClaimInvitation53C58BffResponses[keyof EventClaimInvitation53C58BffResponses];

export type EventGetEventAttendees860340D3Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/events/{event_id}/attendee-list';
};

export type EventGetEventAttendees860340D3Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaMinimalRevelUserSchema;
};

export type EventGetEventAttendees860340D3Response =
	EventGetEventAttendees860340D3Responses[keyof EventGetEventAttendees860340D3Responses];

export type EventGetMyEventStatusEa2D5FbdData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/my-status';
};

export type EventGetMyEventStatusEa2D5FbdResponses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: EventRsvpSchema | EventTicketSchema | EventUserEligibility;
};

export type EventGetMyEventStatusEa2D5FbdResponse =
	EventGetMyEventStatusEa2D5FbdResponses[keyof EventGetMyEventStatusEa2D5FbdResponses];

export type EventRequestInvitation5A4F6125Data = {
	body: EventInvitationRequestCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/request-invitation';
};

export type EventRequestInvitation5A4F6125Errors = {
	/**
	 * Bad Request
	 */
	400: ResponseMessage;
};

export type EventRequestInvitation5A4F6125Error =
	EventRequestInvitation5A4F6125Errors[keyof EventRequestInvitation5A4F6125Errors];

export type EventRequestInvitation5A4F6125Responses = {
	/**
	 * Created
	 */
	201: EventInvitationRequestSchema;
};

export type EventRequestInvitation5A4F6125Response =
	EventRequestInvitation5A4F6125Responses[keyof EventRequestInvitation5A4F6125Responses];

export type EventListResources6C7B27A8Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		resource_type?: ResourceTypes | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/events/{event_id}/resources';
};

export type EventListResources6C7B27A8Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaAdditionalResourceSchema;
};

export type EventListResources6C7B27A8Response =
	EventListResources6C7B27A8Responses[keyof EventListResources6C7B27A8Responses];

export type EventDeleteInvitationRequest15F93979Data = {
	body?: never;
	path: {
		/**
		 * Request Id
		 */
		request_id: string;
	};
	query?: never;
	url: '/api/events/invitation-request/{request_id}';
};

export type EventDeleteInvitationRequest15F93979Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventDeleteInvitationRequest15F93979Response =
	EventDeleteInvitationRequest15F93979Responses[keyof EventDeleteInvitationRequest15F93979Responses];

export type EventListUserInvitationRequests86Ec7Dd8Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Event Id
		 */
		event_id?: string | null;
		/**
		 * Status
		 */
		status?: 'pending' | 'approved' | 'rejected';
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/events/me/pending_invitation_requests';
};

export type EventListUserInvitationRequests86Ec7Dd8Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventInvitationRequestSchema;
};

export type EventListUserInvitationRequests86Ec7Dd8Response =
	EventListUserInvitationRequests86Ec7Dd8Responses[keyof EventListUserInvitationRequests86Ec7Dd8Responses];

export type EventGetEventBySlugs3Ade106eData = {
	body?: never;
	path: {
		/**
		 * Org Slug
		 */
		org_slug: string;
		/**
		 * Event Slug
		 */
		event_slug: string;
	};
	query?: never;
	url: '/api/events/{org_slug}/{event_slug}';
};

export type EventGetEventBySlugs3Ade106eResponses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type EventGetEventBySlugs3Ade106eResponse =
	EventGetEventBySlugs3Ade106eResponses[keyof EventGetEventBySlugs3Ade106eResponses];

export type EventGetEvent7E80A852Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}';
};

export type EventGetEvent7E80A852Responses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type EventGetEvent7E80A852Response =
	EventGetEvent7E80A852Responses[keyof EventGetEvent7E80A852Responses];

export type EventRsvpEventFd27A275Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Status
		 */
		answer: 'yes' | 'no' | 'maybe';
	};
	query?: never;
	url: '/api/events/{event_id}/rsvp/{answer}';
};

export type EventRsvpEventFd27A275Errors = {
	/**
	 * Bad Request
	 */
	400: EventUserEligibility;
};

export type EventRsvpEventFd27A275Error =
	EventRsvpEventFd27A275Errors[keyof EventRsvpEventFd27A275Errors];

export type EventRsvpEventFd27A275Responses = {
	/**
	 * OK
	 */
	200: EventRsvpSchema;
};

export type EventRsvpEventFd27A275Response =
	EventRsvpEventFd27A275Responses[keyof EventRsvpEventFd27A275Responses];

export type EventListTiersC1Bb8FfbData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/tickets/tiers';
};

export type EventListTiersC1Bb8FfbResponses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TierSchema>;
};

export type EventListTiersC1Bb8FfbResponse =
	EventListTiersC1Bb8FfbResponses[keyof EventListTiersC1Bb8FfbResponses];

export type EventTicketCheckout49Cfb904Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Tier Id
		 */
		tier_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/tickets/{tier_id}/checkout';
};

export type EventTicketCheckout49Cfb904Errors = {
	/**
	 * Bad Request
	 */
	400: EventUserEligibility;
};

export type EventTicketCheckout49Cfb904Error =
	EventTicketCheckout49Cfb904Errors[keyof EventTicketCheckout49Cfb904Errors];

export type EventTicketCheckout49Cfb904Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: StripeCheckoutSessionSchema | EventTicketSchema;
};

export type EventTicketCheckout49Cfb904Response =
	EventTicketCheckout49Cfb904Responses[keyof EventTicketCheckout49Cfb904Responses];

export type EventTicketPwycCheckoutEae2174dData = {
	body: PwycCheckoutPayloadSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Tier Id
		 */
		tier_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/tickets/{tier_id}/checkout/pwyc';
};

export type EventTicketPwycCheckoutEae2174dErrors = {
	/**
	 * Bad Request
	 */
	400: EventUserEligibility;
};

export type EventTicketPwycCheckoutEae2174dError =
	EventTicketPwycCheckoutEae2174dErrors[keyof EventTicketPwycCheckoutEae2174dErrors];

export type EventTicketPwycCheckoutEae2174dResponses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: StripeCheckoutSessionSchema | EventTicketSchema;
};

export type EventTicketPwycCheckoutEae2174dResponse =
	EventTicketPwycCheckoutEae2174dResponses[keyof EventTicketPwycCheckoutEae2174dResponses];

export type EventGetQuestionnaire66B2B94cData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Questionnaire Id
		 */
		questionnaire_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/questionnaire/{questionnaire_id}';
};

export type EventGetQuestionnaire66B2B94cResponses = {
	/**
	 * OK
	 */
	200: QuestionnaireSchema;
};

export type EventGetQuestionnaire66B2B94cResponse =
	EventGetQuestionnaire66B2B94cResponses[keyof EventGetQuestionnaire66B2B94cResponses];

export type EventSubmitQuestionnaire0Ee3E3BeData = {
	body: QuestionnaireSubmissionSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Questionnaire Id
		 */
		questionnaire_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/questionnaire/{questionnaire_id}/submit';
};

export type EventSubmitQuestionnaire0Ee3E3BeErrors = {
	/**
	 * Bad Request
	 */
	400: ResponseMessage;
};

export type EventSubmitQuestionnaire0Ee3E3BeError =
	EventSubmitQuestionnaire0Ee3E3BeErrors[keyof EventSubmitQuestionnaire0Ee3E3BeErrors];

export type EventSubmitQuestionnaire0Ee3E3BeResponses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: QuestionnaireSubmissionResponseSchema | QuestionnaireEvaluationForUserSchema;
};

export type EventSubmitQuestionnaire0Ee3E3BeResponse =
	EventSubmitQuestionnaire0Ee3E3BeResponses[keyof EventSubmitQuestionnaire0Ee3E3BeResponses];

export type EventadminDeleteEventToken5E18F495Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Token Id
		 */
		token_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/token/{token_id}';
};

export type EventadminDeleteEventToken5E18F495Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminDeleteEventToken5E18F495Response =
	EventadminDeleteEventToken5E18F495Responses[keyof EventadminDeleteEventToken5E18F495Responses];

export type EventadminUpdateEventToken0Bdbae0dData = {
	body: EventTokenUpdateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Token Id
		 */
		token_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/token/{token_id}';
};

export type EventadminUpdateEventToken0Bdbae0dResponses = {
	/**
	 * OK
	 */
	200: EventTokenSchema;
};

export type EventadminUpdateEventToken0Bdbae0dResponse =
	EventadminUpdateEventToken0Bdbae0dResponses[keyof EventadminUpdateEventToken0Bdbae0dResponses];

export type EventadminListEventTokens3B5Ffb02Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Is Active
		 */
		is_active?: boolean | null;
		/**
		 * Event Id
		 */
		event_id?: string | null;
		/**
		 * Has Invitation
		 */
		has_invitation?: boolean | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/tokens';
};

export type EventadminListEventTokens3B5Ffb02Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventTokenSchema;
};

export type EventadminListEventTokens3B5Ffb02Response =
	EventadminListEventTokens3B5Ffb02Responses[keyof EventadminListEventTokens3B5Ffb02Responses];

export type EventadminCreateEventToken346A7F88Data = {
	body: EventTokenCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/token';
};

export type EventadminCreateEventToken346A7F88Responses = {
	/**
	 * OK
	 */
	200: EventTokenSchema;
};

export type EventadminCreateEventToken346A7F88Response =
	EventadminCreateEventToken346A7F88Responses[keyof EventadminCreateEventToken346A7F88Responses];

export type EventadminDecideInvitationRequest5Edb2520Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Request Id
		 */
		request_id: string;
		/**
		 * Decision
		 */
		decision: 'approve' | 'reject';
	};
	query?: never;
	url: '/api/event-admin/{event_id}/invitation-request/{request_id}/{decision}';
};

export type EventadminDecideInvitationRequest5Edb2520Responses = {
	/**
	 * OK
	 */
	200: EventInvitationRequestSchema;
};

export type EventadminDecideInvitationRequest5Edb2520Response =
	EventadminDecideInvitationRequest5Edb2520Responses[keyof EventadminDecideInvitationRequest5Edb2520Responses];

export type EventadminListEventInvitationRequests282277AeData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Status
		 */
		status?: 'pending' | 'approved' | 'rejected';
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/invitation_requests';
};

export type EventadminListEventInvitationRequests282277AeResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventInvitationRequestInternalSchema;
};

export type EventadminListEventInvitationRequests282277AeResponse =
	EventadminListEventInvitationRequests282277AeResponses[keyof EventadminListEventInvitationRequests282277AeResponses];

export type EventadminUpdateEventE262812fData = {
	body: EventEditSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}';
};

export type EventadminUpdateEventE262812fErrors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type EventadminUpdateEventE262812fError =
	EventadminUpdateEventE262812fErrors[keyof EventadminUpdateEventE262812fErrors];

export type EventadminUpdateEventE262812fResponses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type EventadminUpdateEventE262812fResponse =
	EventadminUpdateEventE262812fResponses[keyof EventadminUpdateEventE262812fResponses];

export type EventadminUpdateEventStatusFee7720dData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Status
		 */
		status: 'open' | 'closed' | 'draft' | 'deleted';
	};
	query?: never;
	url: '/api/event-admin/{event_id}/actions/update-status/{status}';
};

export type EventadminUpdateEventStatusFee7720dResponses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type EventadminUpdateEventStatusFee7720dResponse =
	EventadminUpdateEventStatusFee7720dResponses[keyof EventadminUpdateEventStatusFee7720dResponses];

export type EventadminUploadLogo67D322F7Data = {
	/**
	 * FileParams
	 */
	body: {
		/**
		 * Logo
		 */
		logo: Blob | File;
	};
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/upload-logo';
};

export type EventadminUploadLogo67D322F7Responses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type EventadminUploadLogo67D322F7Response =
	EventadminUploadLogo67D322F7Responses[keyof EventadminUploadLogo67D322F7Responses];

export type EventadminUploadCoverArt18Db0324Data = {
	/**
	 * FileParams
	 */
	body: {
		/**
		 * Cover Art
		 */
		cover_art: Blob | File;
	};
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/upload-cover-art';
};

export type EventadminUploadCoverArt18Db0324Responses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type EventadminUploadCoverArt18Db0324Response =
	EventadminUploadCoverArt18Db0324Responses[keyof EventadminUploadCoverArt18Db0324Responses];

export type EventadminDeleteLogoDe60527fData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/delete-logo';
};

export type EventadminDeleteLogoDe60527fResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminDeleteLogoDe60527fResponse =
	EventadminDeleteLogoDe60527fResponses[keyof EventadminDeleteLogoDe60527fResponses];

export type EventadminDeleteCoverArtC8488D49Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/delete-cover-art';
};

export type EventadminDeleteCoverArtC8488D49Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminDeleteCoverArtC8488D49Response =
	EventadminDeleteCoverArtC8488D49Responses[keyof EventadminDeleteCoverArtC8488D49Responses];

export type EventadminClearTags344Fb290Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tags';
};

export type EventadminClearTags344Fb290Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminClearTags344Fb290Response =
	EventadminClearTags344Fb290Responses[keyof EventadminClearTags344Fb290Responses];

export type EventadminAddTags4Fd759E8Data = {
	body: TagUpdateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tags';
};

export type EventadminAddTags4Fd759E8Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TagSchema>;
};

export type EventadminAddTags4Fd759E8Response =
	EventadminAddTags4Fd759E8Responses[keyof EventadminAddTags4Fd759E8Responses];

export type EventadminRemoveTags6F221Ad6Data = {
	body: TagUpdateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tags/remove';
};

export type EventadminRemoveTags6F221Ad6Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TagSchema>;
};

export type EventadminRemoveTags6F221Ad6Response =
	EventadminRemoveTags6F221Ad6Responses[keyof EventadminRemoveTags6F221Ad6Responses];

export type EventadminListTicketTiersD0B8Dd22Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/ticket-tiers';
};

export type EventadminListTicketTiersD0B8Dd22Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaTicketTierDetailSchema;
};

export type EventadminListTicketTiersD0B8Dd22Response =
	EventadminListTicketTiersD0B8Dd22Responses[keyof EventadminListTicketTiersD0B8Dd22Responses];

export type EventadminCreateTicketTierEc89C673Data = {
	body: TicketTierCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/ticket-tier';
};

export type EventadminCreateTicketTierEc89C673Responses = {
	/**
	 * OK
	 */
	200: TicketTierDetailSchema;
};

export type EventadminCreateTicketTierEc89C673Response =
	EventadminCreateTicketTierEc89C673Responses[keyof EventadminCreateTicketTierEc89C673Responses];

export type EventadminDeleteTicketTier7C158605Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Tier Id
		 */
		tier_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/ticket-tier/{tier_id}';
};

export type EventadminDeleteTicketTier7C158605Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminDeleteTicketTier7C158605Response =
	EventadminDeleteTicketTier7C158605Responses[keyof EventadminDeleteTicketTier7C158605Responses];

export type EventadminUpdateTicketTier9266Af02Data = {
	body: TicketTierUpdateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Tier Id
		 */
		tier_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/ticket-tier/{tier_id}';
};

export type EventadminUpdateTicketTier9266Af02Responses = {
	/**
	 * OK
	 */
	200: TicketTierDetailSchema;
};

export type EventadminUpdateTicketTier9266Af02Response =
	EventadminUpdateTicketTier9266Af02Responses[keyof EventadminUpdateTicketTier9266Af02Responses];

export type EventadminListPendingTicketsF783965eData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/pending-tickets';
};

export type EventadminListPendingTicketsF783965eResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaPendingTicketSchema;
};

export type EventadminListPendingTicketsF783965eResponse =
	EventadminListPendingTicketsF783965eResponses[keyof EventadminListPendingTicketsF783965eResponses];

export type EventadminConfirmTicketPayment592E618fData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Ticket Id
		 */
		ticket_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tickets/{ticket_id}/confirm-payment';
};

export type EventadminConfirmTicketPayment592E618fResponses = {
	/**
	 * OK
	 */
	200: EventTicketSchema;
};

export type EventadminConfirmTicketPayment592E618fResponse =
	EventadminConfirmTicketPayment592E618fResponses[keyof EventadminConfirmTicketPayment592E618fResponses];

export type EventadminCheckInTicketA823356bData = {
	body: CheckInRequestSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/check-in';
};

export type EventadminCheckInTicketA823356bErrors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type EventadminCheckInTicketA823356bError =
	EventadminCheckInTicketA823356bErrors[keyof EventadminCheckInTicketA823356bErrors];

export type EventadminCheckInTicketA823356bResponses = {
	/**
	 * OK
	 */
	200: CheckInResponseSchema;
};

export type EventadminCheckInTicketA823356bResponse =
	EventadminCheckInTicketA823356bResponses[keyof EventadminCheckInTicketA823356bResponses];

export type EventadminListInvitations0096D084Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/invitations';
};

export type EventadminListInvitations0096D084Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventInvitationListSchema;
};

export type EventadminListInvitations0096D084Response =
	EventadminListInvitations0096D084Responses[keyof EventadminListInvitations0096D084Responses];

export type EventadminCreateInvitationsA50F70D8Data = {
	body: DirectInvitationCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/invitations';
};

export type EventadminCreateInvitationsA50F70D8Errors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type EventadminCreateInvitationsA50F70D8Error =
	EventadminCreateInvitationsA50F70D8Errors[keyof EventadminCreateInvitationsA50F70D8Errors];

export type EventadminCreateInvitationsA50F70D8Responses = {
	/**
	 * OK
	 */
	200: DirectInvitationResponseSchema;
};

export type EventadminCreateInvitationsA50F70D8Response =
	EventadminCreateInvitationsA50F70D8Responses[keyof EventadminCreateInvitationsA50F70D8Responses];

export type EventadminListPendingInvitations09700FeaData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/pending-invitations';
};

export type EventadminListPendingInvitations09700FeaResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaPendingEventInvitationListSchema;
};

export type EventadminListPendingInvitations09700FeaResponse =
	EventadminListPendingInvitations09700FeaResponses[keyof EventadminListPendingInvitations09700FeaResponses];

export type EventadminDeleteInvitationEndpoint10D40019Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Invitation Type
		 */
		invitation_type: 'registered' | 'pending';
		/**
		 * Invitation Id
		 */
		invitation_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/invitations/{invitation_type}/{invitation_id}';
};

export type EventadminDeleteInvitationEndpoint10D40019Errors = {
	/**
	 * Not Found
	 */
	404: ValidationErrorResponse;
};

export type EventadminDeleteInvitationEndpoint10D40019Error =
	EventadminDeleteInvitationEndpoint10D40019Errors[keyof EventadminDeleteInvitationEndpoint10D40019Errors];

export type EventadminDeleteInvitationEndpoint10D40019Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminDeleteInvitationEndpoint10D40019Response =
	EventadminDeleteInvitationEndpoint10D40019Responses[keyof EventadminDeleteInvitationEndpoint10D40019Responses];

export type EventadminListRsvps5C84A06bData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Status
		 */
		status?: string | null;
		/**
		 * User Id
		 */
		user_id?: string | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/rsvps';
};

export type EventadminListRsvps5C84A06bResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaRsvpDetailSchema;
};

export type EventadminListRsvps5C84A06bResponse =
	EventadminListRsvps5C84A06bResponses[keyof EventadminListRsvps5C84A06bResponses];

export type EventadminCreateRsvpF5B5Bf04Data = {
	body: RsvpCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/rsvps';
};

export type EventadminCreateRsvpF5B5Bf04Responses = {
	/**
	 * OK
	 */
	200: RsvpDetailSchema;
};

export type EventadminCreateRsvpF5B5Bf04Response =
	EventadminCreateRsvpF5B5Bf04Responses[keyof EventadminCreateRsvpF5B5Bf04Responses];

export type EventadminDeleteRsvpEc12C093Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Rsvp Id
		 */
		rsvp_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/rsvps/{rsvp_id}';
};

export type EventadminDeleteRsvpEc12C093Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminDeleteRsvpEc12C093Response =
	EventadminDeleteRsvpEc12C093Responses[keyof EventadminDeleteRsvpEc12C093Responses];

export type EventadminGetRsvp547A88EaData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Rsvp Id
		 */
		rsvp_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/rsvps/{rsvp_id}';
};

export type EventadminGetRsvp547A88EaResponses = {
	/**
	 * OK
	 */
	200: RsvpDetailSchema;
};

export type EventadminGetRsvp547A88EaResponse =
	EventadminGetRsvp547A88EaResponses[keyof EventadminGetRsvp547A88EaResponses];

export type EventadminUpdateRsvpC627E0A6Data = {
	body: RsvpUpdateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Rsvp Id
		 */
		rsvp_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/rsvps/{rsvp_id}';
};

export type EventadminUpdateRsvpC627E0A6Responses = {
	/**
	 * OK
	 */
	200: RsvpDetailSchema;
};

export type EventadminUpdateRsvpC627E0A6Response =
	EventadminUpdateRsvpC627E0A6Responses[keyof EventadminUpdateRsvpC627E0A6Responses];

export type PermissionMyPermissions39915A61Data = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/permissions/my-permissions';
};

export type PermissionMyPermissions39915A61Responses = {
	/**
	 * OK
	 */
	200: OrganizationPermissionsSchema;
};

export type PermissionMyPermissions39915A61Response =
	PermissionMyPermissions39915A61Responses[keyof PermissionMyPermissions39915A61Responses];

export type EventseriesListEventSeriesD0Bde580Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Organization
		 */
		organization?: string | null;
		/**
		 * Tags
		 */
		tags?: Array<string> | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-series/';
};

export type EventseriesListEventSeriesD0Bde580Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventSeriesRetrieveSchema;
};

export type EventseriesListEventSeriesD0Bde580Response =
	EventseriesListEventSeriesD0Bde580Responses[keyof EventseriesListEventSeriesD0Bde580Responses];

export type EventseriesGetEventSeriesBySlugsAd2C6Ee2Data = {
	body?: never;
	path: {
		/**
		 * Org Slug
		 */
		org_slug: string;
		/**
		 * Series Slug
		 */
		series_slug: string;
	};
	query?: never;
	url: '/api/event-series/{org_slug}/{series_slug}';
};

export type EventseriesGetEventSeriesBySlugsAd2C6Ee2Responses = {
	/**
	 * OK
	 */
	200: EventSeriesRetrieveSchema;
};

export type EventseriesGetEventSeriesBySlugsAd2C6Ee2Response =
	EventseriesGetEventSeriesBySlugsAd2C6Ee2Responses[keyof EventseriesGetEventSeriesBySlugsAd2C6Ee2Responses];

export type EventseriesGetEventSeriesD6052557Data = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series/{series_id}';
};

export type EventseriesGetEventSeriesD6052557Responses = {
	/**
	 * OK
	 */
	200: EventSeriesRetrieveSchema;
};

export type EventseriesGetEventSeriesD6052557Response =
	EventseriesGetEventSeriesD6052557Responses[keyof EventseriesGetEventSeriesD6052557Responses];

export type EventseriesListResources57Df8195Data = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: {
		resource_type?: ResourceTypes | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-series/{series_id}/resources';
};

export type EventseriesListResources57Df8195Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaAdditionalResourceSchema;
};

export type EventseriesListResources57Df8195Response =
	EventseriesListResources57Df8195Responses[keyof EventseriesListResources57Df8195Responses];

export type EventseriesadminDeleteEventSeries7476E8D8Data = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/';
};

export type EventseriesadminDeleteEventSeries7476E8D8Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventseriesadminDeleteEventSeries7476E8D8Response =
	EventseriesadminDeleteEventSeries7476E8D8Responses[keyof EventseriesadminDeleteEventSeries7476E8D8Responses];

export type EventseriesadminUpdateEventSeries9A545Da1Data = {
	body: EventSeriesEditSchema;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/';
};

export type EventseriesadminUpdateEventSeries9A545Da1Errors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type EventseriesadminUpdateEventSeries9A545Da1Error =
	EventseriesadminUpdateEventSeries9A545Da1Errors[keyof EventseriesadminUpdateEventSeries9A545Da1Errors];

export type EventseriesadminUpdateEventSeries9A545Da1Responses = {
	/**
	 * OK
	 */
	200: EventSeriesRetrieveSchema;
};

export type EventseriesadminUpdateEventSeries9A545Da1Response =
	EventseriesadminUpdateEventSeries9A545Da1Responses[keyof EventseriesadminUpdateEventSeries9A545Da1Responses];

export type EventseriesadminUploadLogo337C0E13Data = {
	/**
	 * FileParams
	 */
	body: {
		/**
		 * Logo
		 */
		logo: Blob | File;
	};
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/upload-logo';
};

export type EventseriesadminUploadLogo337C0E13Responses = {
	/**
	 * OK
	 */
	200: EventSeriesRetrieveSchema;
};

export type EventseriesadminUploadLogo337C0E13Response =
	EventseriesadminUploadLogo337C0E13Responses[keyof EventseriesadminUploadLogo337C0E13Responses];

export type EventseriesadminUploadCoverArt9Acebd74Data = {
	/**
	 * FileParams
	 */
	body: {
		/**
		 * Cover Art
		 */
		cover_art: Blob | File;
	};
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/upload-cover-art';
};

export type EventseriesadminUploadCoverArt9Acebd74Responses = {
	/**
	 * OK
	 */
	200: EventSeriesRetrieveSchema;
};

export type EventseriesadminUploadCoverArt9Acebd74Response =
	EventseriesadminUploadCoverArt9Acebd74Responses[keyof EventseriesadminUploadCoverArt9Acebd74Responses];

export type EventseriesadminDeleteLogo58Fb3137Data = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/delete-logo';
};

export type EventseriesadminDeleteLogo58Fb3137Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventseriesadminDeleteLogo58Fb3137Response =
	EventseriesadminDeleteLogo58Fb3137Responses[keyof EventseriesadminDeleteLogo58Fb3137Responses];

export type EventseriesadminDeleteCoverArt7Ec8639dData = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/delete-cover-art';
};

export type EventseriesadminDeleteCoverArt7Ec8639dResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventseriesadminDeleteCoverArt7Ec8639dResponse =
	EventseriesadminDeleteCoverArt7Ec8639dResponses[keyof EventseriesadminDeleteCoverArt7Ec8639dResponses];

export type EventseriesadminClearTags5Db0733fData = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/tags';
};

export type EventseriesadminClearTags5Db0733fResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventseriesadminClearTags5Db0733fResponse =
	EventseriesadminClearTags5Db0733fResponses[keyof EventseriesadminClearTags5Db0733fResponses];

export type EventseriesadminAddTags1E8Ba548Data = {
	body: TagUpdateSchema;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/tags';
};

export type EventseriesadminAddTags1E8Ba548Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TagSchema>;
};

export type EventseriesadminAddTags1E8Ba548Response =
	EventseriesadminAddTags1E8Ba548Responses[keyof EventseriesadminAddTags1E8Ba548Responses];

export type EventseriesadminRemoveTags044E8754Data = {
	body: TagUpdateSchema;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/tags/remove';
};

export type EventseriesadminRemoveTags044E8754Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TagSchema>;
};

export type EventseriesadminRemoveTags044E8754Response =
	EventseriesadminRemoveTags044E8754Responses[keyof EventseriesadminRemoveTags044E8754Responses];

export type PotluckListPotluckItems78007A3cData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/potluck/';
};

export type PotluckListPotluckItems78007A3cResponses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<PotluckItemRetrieveSchema>;
};

export type PotluckListPotluckItems78007A3cResponse =
	PotluckListPotluckItems78007A3cResponses[keyof PotluckListPotluckItems78007A3cResponses];

export type PotluckCreatePotluckItem61Ace74eData = {
	body: PotluckItemCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/potluck/';
};

export type PotluckCreatePotluckItem61Ace74eResponses = {
	/**
	 * OK
	 */
	200: PotluckItemRetrieveSchema;
};

export type PotluckCreatePotluckItem61Ace74eResponse =
	PotluckCreatePotluckItem61Ace74eResponses[keyof PotluckCreatePotluckItem61Ace74eResponses];

export type PotluckDeletePotluckItem63F55395Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Item Id
		 */
		item_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/potluck/{item_id}';
};

export type PotluckDeletePotluckItem63F55395Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type PotluckDeletePotluckItem63F55395Response =
	PotluckDeletePotluckItem63F55395Responses[keyof PotluckDeletePotluckItem63F55395Responses];

export type PotluckUpdatePotluckItem1248Bf0fData = {
	body: PotluckItemCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Item Id
		 */
		item_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/potluck/{item_id}';
};

export type PotluckUpdatePotluckItem1248Bf0fResponses = {
	/**
	 * OK
	 */
	200: PotluckItemRetrieveSchema;
};

export type PotluckUpdatePotluckItem1248Bf0fResponse =
	PotluckUpdatePotluckItem1248Bf0fResponses[keyof PotluckUpdatePotluckItem1248Bf0fResponses];

export type PotluckClaimPotluckItem20237DceData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Item Id
		 */
		item_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/potluck/{item_id}/claim';
};

export type PotluckClaimPotluckItem20237DceResponses = {
	/**
	 * OK
	 */
	200: PotluckItemRetrieveSchema;
};

export type PotluckClaimPotluckItem20237DceResponse =
	PotluckClaimPotluckItem20237DceResponses[keyof PotluckClaimPotluckItem20237DceResponses];

export type PotluckUnclaimPotluckItem69B7E5B1Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Item Id
		 */
		item_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/potluck/{item_id}/unclaim';
};

export type PotluckUnclaimPotluckItem69B7E5B1Responses = {
	/**
	 * OK
	 */
	200: PotluckItemRetrieveSchema;
};

export type PotluckUnclaimPotluckItem69B7E5B1Response =
	PotluckUnclaimPotluckItem69B7E5B1Responses[keyof PotluckUnclaimPotluckItem69B7E5B1Responses];

export type QuestionnaireListOrgQuestionnaires63Db5382Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Organization Id
		 */
		organization_id?: string | null;
		/**
		 * Event Id
		 */
		event_id?: string | null;
		/**
		 * Event Series Id
		 */
		event_series_id?: string | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/questionnaires/';
};

export type QuestionnaireListOrgQuestionnaires63Db5382Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationQuestionnaireInListSchema;
};

export type QuestionnaireListOrgQuestionnaires63Db5382Response =
	QuestionnaireListOrgQuestionnaires63Db5382Responses[keyof QuestionnaireListOrgQuestionnaires63Db5382Responses];

export type QuestionnaireCreateOrgQuestionnaire00208D30Data = {
	body: OrganizationQuestionnaireCreateSchema;
	path: {
		/**
		 * Organization Id
		 */
		organization_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{organization_id}/create-questionnaire';
};

export type QuestionnaireCreateOrgQuestionnaire00208D30Errors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type QuestionnaireCreateOrgQuestionnaire00208D30Error =
	QuestionnaireCreateOrgQuestionnaire00208D30Errors[keyof QuestionnaireCreateOrgQuestionnaire00208D30Errors];

export type QuestionnaireCreateOrgQuestionnaire00208D30Responses = {
	/**
	 * OK
	 */
	200: OrganizationQuestionnaireSchema;
};

export type QuestionnaireCreateOrgQuestionnaire00208D30Response =
	QuestionnaireCreateOrgQuestionnaire00208D30Responses[keyof QuestionnaireCreateOrgQuestionnaire00208D30Responses];

export type QuestionnaireDeleteOrgQuestionnaire084Eb30aData = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}';
};

export type QuestionnaireDeleteOrgQuestionnaire084Eb30aResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type QuestionnaireDeleteOrgQuestionnaire084Eb30aResponse =
	QuestionnaireDeleteOrgQuestionnaire084Eb30aResponses[keyof QuestionnaireDeleteOrgQuestionnaire084Eb30aResponses];

export type QuestionnaireGetOrgQuestionnaireE458Bda1Data = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}';
};

export type QuestionnaireGetOrgQuestionnaireE458Bda1Responses = {
	/**
	 * OK
	 */
	200: OrganizationQuestionnaireSchema;
};

export type QuestionnaireGetOrgQuestionnaireE458Bda1Response =
	QuestionnaireGetOrgQuestionnaireE458Bda1Responses[keyof QuestionnaireGetOrgQuestionnaireE458Bda1Responses];

export type QuestionnaireUpdateOrgQuestionnaireFc54B1FfData = {
	body: OrganizationQuestionnaireUpdateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}';
};

export type QuestionnaireUpdateOrgQuestionnaireFc54B1FfResponses = {
	/**
	 * OK
	 */
	200: OrganizationQuestionnaireSchema;
};

export type QuestionnaireUpdateOrgQuestionnaireFc54B1FfResponse =
	QuestionnaireUpdateOrgQuestionnaireFc54B1FfResponses[keyof QuestionnaireUpdateOrgQuestionnaireFc54B1FfResponses];

export type QuestionnaireCreateSectionF354D77fData = {
	body: SectionCreateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/sections';
};

export type QuestionnaireCreateSectionF354D77fResponses = {
	/**
	 * OK
	 */
	200: SectionUpdateSchema;
};

export type QuestionnaireCreateSectionF354D77fResponse =
	QuestionnaireCreateSectionF354D77fResponses[keyof QuestionnaireCreateSectionF354D77fResponses];

export type QuestionnaireDeleteSection62A0568aData = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Section Id
		 */
		section_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/sections/{section_id}';
};

export type QuestionnaireDeleteSection62A0568aResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type QuestionnaireDeleteSection62A0568aResponse =
	QuestionnaireDeleteSection62A0568aResponses[keyof QuestionnaireDeleteSection62A0568aResponses];

export type QuestionnaireUpdateSection1B5B176aData = {
	body: SectionUpdateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Section Id
		 */
		section_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/sections/{section_id}';
};

export type QuestionnaireUpdateSection1B5B176aResponses = {
	/**
	 * OK
	 */
	200: SectionUpdateSchema;
};

export type QuestionnaireUpdateSection1B5B176aResponse =
	QuestionnaireUpdateSection1B5B176aResponses[keyof QuestionnaireUpdateSection1B5B176aResponses];

export type QuestionnaireCreateMcQuestion6079F81dData = {
	body: MultipleChoiceQuestionCreateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/multiple-choice-questions';
};

export type QuestionnaireCreateMcQuestion6079F81dResponses = {
	/**
	 * OK
	 */
	200: MultipleChoiceQuestionUpdateSchema;
};

export type QuestionnaireCreateMcQuestion6079F81dResponse =
	QuestionnaireCreateMcQuestion6079F81dResponses[keyof QuestionnaireCreateMcQuestion6079F81dResponses];

export type QuestionnaireDeleteMcQuestion96C12Cf0Data = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Question Id
		 */
		question_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/multiple-choice-questions/{question_id}';
};

export type QuestionnaireDeleteMcQuestion96C12Cf0Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type QuestionnaireDeleteMcQuestion96C12Cf0Response =
	QuestionnaireDeleteMcQuestion96C12Cf0Responses[keyof QuestionnaireDeleteMcQuestion96C12Cf0Responses];

export type QuestionnaireUpdateMcQuestion346E4B95Data = {
	body: MultipleChoiceQuestionUpdateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Question Id
		 */
		question_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/multiple-choice-questions/{question_id}';
};

export type QuestionnaireUpdateMcQuestion346E4B95Responses = {
	/**
	 * OK
	 */
	200: MultipleChoiceQuestionUpdateSchema;
};

export type QuestionnaireUpdateMcQuestion346E4B95Response =
	QuestionnaireUpdateMcQuestion346E4B95Responses[keyof QuestionnaireUpdateMcQuestion346E4B95Responses];

export type QuestionnaireCreateMcOption98F031F8Data = {
	body: MultipleChoiceOptionCreateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Question Id
		 */
		question_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/multiple-choice-questions/{question_id}/options';
};

export type QuestionnaireCreateMcOption98F031F8Responses = {
	/**
	 * OK
	 */
	200: MultipleChoiceOptionUpdateSchema;
};

export type QuestionnaireCreateMcOption98F031F8Response =
	QuestionnaireCreateMcOption98F031F8Responses[keyof QuestionnaireCreateMcOption98F031F8Responses];

export type QuestionnaireDeleteMcOptionF5Ace4BbData = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Option Id
		 */
		option_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/multiple-choice-options/{option_id}';
};

export type QuestionnaireDeleteMcOptionF5Ace4BbResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type QuestionnaireDeleteMcOptionF5Ace4BbResponse =
	QuestionnaireDeleteMcOptionF5Ace4BbResponses[keyof QuestionnaireDeleteMcOptionF5Ace4BbResponses];

export type QuestionnaireUpdateMcOption249B4D63Data = {
	body: MultipleChoiceOptionUpdateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Option Id
		 */
		option_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/multiple-choice-options/{option_id}';
};

export type QuestionnaireUpdateMcOption249B4D63Responses = {
	/**
	 * OK
	 */
	200: MultipleChoiceOptionUpdateSchema;
};

export type QuestionnaireUpdateMcOption249B4D63Response =
	QuestionnaireUpdateMcOption249B4D63Responses[keyof QuestionnaireUpdateMcOption249B4D63Responses];

export type QuestionnaireCreateFtQuestionBf891801Data = {
	body: FreeTextQuestionCreateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/free-text-questions';
};

export type QuestionnaireCreateFtQuestionBf891801Responses = {
	/**
	 * OK
	 */
	200: FreeTextQuestionUpdateSchema;
};

export type QuestionnaireCreateFtQuestionBf891801Response =
	QuestionnaireCreateFtQuestionBf891801Responses[keyof QuestionnaireCreateFtQuestionBf891801Responses];

export type QuestionnaireDeleteFtQuestion4C1733B8Data = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Question Id
		 */
		question_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/free-text-questions/{question_id}';
};

export type QuestionnaireDeleteFtQuestion4C1733B8Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type QuestionnaireDeleteFtQuestion4C1733B8Response =
	QuestionnaireDeleteFtQuestion4C1733B8Responses[keyof QuestionnaireDeleteFtQuestion4C1733B8Responses];

export type QuestionnaireUpdateFtQuestion77B7A27bData = {
	body: FreeTextQuestionUpdateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Question Id
		 */
		question_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/free-text-questions/{question_id}';
};

export type QuestionnaireUpdateFtQuestion77B7A27bResponses = {
	/**
	 * OK
	 */
	200: FreeTextQuestionUpdateSchema;
};

export type QuestionnaireUpdateFtQuestion77B7A27bResponse =
	QuestionnaireUpdateFtQuestion77B7A27bResponses[keyof QuestionnaireUpdateFtQuestion77B7A27bResponses];

export type QuestionnaireListSubmissions248Df8F4Data = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: {
		/**
		 * Evaluation Status
		 */
		evaluation_status?: string | null;
		/**
		 * Order By
		 */
		order_by?: 'submitted_at' | '-submitted_at';
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/questionnaires/{org_questionnaire_id}/submissions';
};

export type QuestionnaireListSubmissions248Df8F4Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaSubmissionListItemSchema;
};

export type QuestionnaireListSubmissions248Df8F4Response =
	QuestionnaireListSubmissions248Df8F4Responses[keyof QuestionnaireListSubmissions248Df8F4Responses];

export type QuestionnaireGetSubmissionDetail01051Ef9Data = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Submission Id
		 */
		submission_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/submissions/{submission_id}';
};

export type QuestionnaireGetSubmissionDetail01051Ef9Responses = {
	/**
	 * OK
	 */
	200: SubmissionDetailSchema;
};

export type QuestionnaireGetSubmissionDetail01051Ef9Response =
	QuestionnaireGetSubmissionDetail01051Ef9Responses[keyof QuestionnaireGetSubmissionDetail01051Ef9Responses];

export type QuestionnaireEvaluateSubmission037C13D7Data = {
	body: EvaluationCreateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Submission Id
		 */
		submission_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/submissions/{submission_id}/evaluate';
};

export type QuestionnaireEvaluateSubmission037C13D7Errors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type QuestionnaireEvaluateSubmission037C13D7Error =
	QuestionnaireEvaluateSubmission037C13D7Errors[keyof QuestionnaireEvaluateSubmission037C13D7Errors];

export type QuestionnaireEvaluateSubmission037C13D7Responses = {
	/**
	 * OK
	 */
	200: EvaluationResponseSchema;
};

export type QuestionnaireEvaluateSubmission037C13D7Response =
	QuestionnaireEvaluateSubmission037C13D7Responses[keyof QuestionnaireEvaluateSubmission037C13D7Responses];

export type QuestionnaireUpdateQuestionnaireStatus4263F66aData = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Status
		 */
		status: 'draft' | 'ready' | 'published';
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/status/{status}';
};

export type QuestionnaireUpdateQuestionnaireStatus4263F66aResponses = {
	/**
	 * OK
	 */
	200: OrganizationQuestionnaireSchema;
};

export type QuestionnaireUpdateQuestionnaireStatus4263F66aResponse =
	QuestionnaireUpdateQuestionnaireStatus4263F66aResponses[keyof QuestionnaireUpdateQuestionnaireStatus4263F66aResponses];

export type QuestionnaireReplaceEvents7De4C174Data = {
	body: EventAssignmentSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/events';
};

export type QuestionnaireReplaceEvents7De4C174Responses = {
	/**
	 * OK
	 */
	200: OrganizationQuestionnaireSchema;
};

export type QuestionnaireReplaceEvents7De4C174Response =
	QuestionnaireReplaceEvents7De4C174Responses[keyof QuestionnaireReplaceEvents7De4C174Responses];

export type QuestionnaireUnassignEventB0D5Ca70Data = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/events/{event_id}';
};

export type QuestionnaireUnassignEventB0D5Ca70Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type QuestionnaireUnassignEventB0D5Ca70Response =
	QuestionnaireUnassignEventB0D5Ca70Responses[keyof QuestionnaireUnassignEventB0D5Ca70Responses];

export type QuestionnaireAssignEvent1A55398dData = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/events/{event_id}';
};

export type QuestionnaireAssignEvent1A55398dResponses = {
	/**
	 * OK
	 */
	200: OrganizationQuestionnaireSchema;
};

export type QuestionnaireAssignEvent1A55398dResponse =
	QuestionnaireAssignEvent1A55398dResponses[keyof QuestionnaireAssignEvent1A55398dResponses];

export type QuestionnaireReplaceEventSeries305F3D28Data = {
	body: EventSeriesAssignmentSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/event-series';
};

export type QuestionnaireReplaceEventSeries305F3D28Responses = {
	/**
	 * OK
	 */
	200: OrganizationQuestionnaireSchema;
};

export type QuestionnaireReplaceEventSeries305F3D28Response =
	QuestionnaireReplaceEventSeries305F3D28Responses[keyof QuestionnaireReplaceEventSeries305F3D28Responses];

export type QuestionnaireUnassignEventSeriesE46799A3Data = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/event-series/{series_id}';
};

export type QuestionnaireUnassignEventSeriesE46799A3Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type QuestionnaireUnassignEventSeriesE46799A3Response =
	QuestionnaireUnassignEventSeriesE46799A3Responses[keyof QuestionnaireUnassignEventSeriesE46799A3Responses];

export type QuestionnaireAssignEventSeries2Fcf8014Data = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/event-series/{series_id}';
};

export type QuestionnaireAssignEventSeries2Fcf8014Responses = {
	/**
	 * OK
	 */
	200: OrganizationQuestionnaireSchema;
};

export type QuestionnaireAssignEventSeries2Fcf8014Response =
	QuestionnaireAssignEventSeries2Fcf8014Responses[keyof QuestionnaireAssignEventSeries2Fcf8014Responses];

export type UserpreferencesGetGeneralPreferencesB187B502Data = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/preferences/general';
};

export type UserpreferencesGetGeneralPreferencesB187B502Responses = {
	/**
	 * OK
	 */
	200: GeneralUserPreferencesSchema;
};

export type UserpreferencesGetGeneralPreferencesB187B502Response =
	UserpreferencesGetGeneralPreferencesB187B502Responses[keyof UserpreferencesGetGeneralPreferencesB187B502Responses];

export type UserpreferencesUpdateGlobalPreferences98A6662dData = {
	body: GeneralUserPreferencesUpdateSchema;
	path?: never;
	query?: {
		/**
		 * Overwrite Children
		 */
		overwrite_children?: boolean;
	};
	url: '/api/preferences/general';
};

export type UserpreferencesUpdateGlobalPreferences98A6662dResponses = {
	/**
	 * OK
	 */
	200: GeneralUserPreferencesSchema;
};

export type UserpreferencesUpdateGlobalPreferences98A6662dResponse =
	UserpreferencesUpdateGlobalPreferences98A6662dResponses[keyof UserpreferencesUpdateGlobalPreferences98A6662dResponses];

export type UserpreferencesGetOrganizationPreferences60Efa429Data = {
	body?: never;
	path: {
		/**
		 * Organization Id
		 */
		organization_id: string;
	};
	query?: never;
	url: '/api/preferences/organization/{organization_id}';
};

export type UserpreferencesGetOrganizationPreferences60Efa429Responses = {
	/**
	 * OK
	 */
	200: UserOrganizationPreferencesSchema;
};

export type UserpreferencesGetOrganizationPreferences60Efa429Response =
	UserpreferencesGetOrganizationPreferences60Efa429Responses[keyof UserpreferencesGetOrganizationPreferences60Efa429Responses];

export type UserpreferencesUpdateOrganizationPreferences2978BbdeData = {
	body: UserOrganizationPreferencesUpdateSchema;
	path: {
		/**
		 * Organization Id
		 */
		organization_id: string;
	};
	query?: {
		/**
		 * Overwrite Children
		 */
		overwrite_children?: boolean;
	};
	url: '/api/preferences/organization/{organization_id}';
};

export type UserpreferencesUpdateOrganizationPreferences2978BbdeResponses = {
	/**
	 * OK
	 */
	200: UserOrganizationPreferencesSchema;
};

export type UserpreferencesUpdateOrganizationPreferences2978BbdeResponse =
	UserpreferencesUpdateOrganizationPreferences2978BbdeResponses[keyof UserpreferencesUpdateOrganizationPreferences2978BbdeResponses];

export type UserpreferencesGetEventSeriesPreferencesF77E7Bf7Data = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/preferences/event-series/{series_id}';
};

export type UserpreferencesGetEventSeriesPreferencesF77E7Bf7Responses = {
	/**
	 * OK
	 */
	200: UserEventSeriesPreferencesSchema;
};

export type UserpreferencesGetEventSeriesPreferencesF77E7Bf7Response =
	UserpreferencesGetEventSeriesPreferencesF77E7Bf7Responses[keyof UserpreferencesGetEventSeriesPreferencesF77E7Bf7Responses];

export type UserpreferencesUpdateEventSeriesPreferencesE3981091Data = {
	body: UserEventSeriesPreferencesUpdateSchema;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: {
		/**
		 * Overwrite Children
		 */
		overwrite_children?: boolean;
	};
	url: '/api/preferences/event-series/{series_id}';
};

export type UserpreferencesUpdateEventSeriesPreferencesE3981091Responses = {
	/**
	 * OK
	 */
	200: UserEventSeriesPreferencesSchema;
};

export type UserpreferencesUpdateEventSeriesPreferencesE3981091Response =
	UserpreferencesUpdateEventSeriesPreferencesE3981091Responses[keyof UserpreferencesUpdateEventSeriesPreferencesE3981091Responses];

export type UserpreferencesGetEventPreferences05236EabData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/preferences/event/{event_id}';
};

export type UserpreferencesGetEventPreferences05236EabResponses = {
	/**
	 * OK
	 */
	200: UserEventPreferencesSchema;
};

export type UserpreferencesGetEventPreferences05236EabResponse =
	UserpreferencesGetEventPreferences05236EabResponses[keyof UserpreferencesGetEventPreferences05236EabResponses];

export type UserpreferencesUpdateEventPreferencesDa445745Data = {
	body: UserEventPreferencesUpdateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Overwrite Children
		 */
		overwrite_children?: boolean;
	};
	url: '/api/preferences/event/{event_id}';
};

export type UserpreferencesUpdateEventPreferencesDa445745Responses = {
	/**
	 * OK
	 */
	200: UserEventPreferencesSchema;
};

export type UserpreferencesUpdateEventPreferencesDa445745Response =
	UserpreferencesUpdateEventPreferencesDa445745Responses[keyof UserpreferencesUpdateEventPreferencesDa445745Responses];

export type StripewebhookHandleWebhook49Aa9EdeData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/stripe/webhook';
};

export type StripewebhookHandleWebhook49Aa9EdeResponses = {
	/**
	 * OK
	 */
	200: unknown;
};

export type TagListTagsAdb8130fData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/tags/';
};

export type TagListTagsAdb8130fResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaTagSchema;
};

export type TagListTagsAdb8130fResponse =
	TagListTagsAdb8130fResponses[keyof TagListTagsAdb8130fResponses];

export type CityListCitiesC46B1C19Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Country
		 */
		country?: string | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/cities/';
};

export type CityListCitiesC46B1C19Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaCitySchema;
};

export type CityListCitiesC46B1C19Response =
	CityListCitiesC46B1C19Responses[keyof CityListCitiesC46B1C19Responses];

export type CityListCountriesF406D211Data = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/cities/countries';
};

export type CityListCountriesF406D211Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<string>;
};

export type CityListCountriesF406D211Response =
	CityListCountriesF406D211Responses[keyof CityListCountriesF406D211Responses];

export type CityGetCity3D2D59A8Data = {
	body?: never;
	path: {
		/**
		 * City Id
		 */
		city_id: number;
	};
	query?: never;
	url: '/api/cities/{city_id}';
};

export type CityGetCity3D2D59A8Responses = {
	/**
	 * OK
	 */
	200: CitySchema;
};

export type CityGetCity3D2D59A8Response =
	CityGetCity3D2D59A8Responses[keyof CityGetCity3D2D59A8Responses];
