// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
	baseUrl: 'http://localhost:8000' | (string & {});
};

/**
 * VersionResponse
 */
export type VersionResponse = {
	/**
	 * Version
	 */
	version: string;
};

/**
 * ResponseOk
 */
export type ResponseOk = {
	/**
	 * Status
	 */
	status?: 'ok';
};

/**
 * TempToken
 */
export type TempToken = {
	/**
	 * Token
	 *
	 * The temporary token to be used with OTP.
	 */
	token: string;
	/**
	 * Type
	 */
	type?: 'otp';
};

/**
 * TokenObtainPairOutputSchema
 */
export type TokenObtainPairOutputSchema = {
	/**
	 * Username
	 *
	 * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
	 */
	username: string;
	/**
	 * Refresh
	 */
	refresh: string;
	/**
	 * Access
	 */
	access: string;
};

/**
 * TokenObtainPairInputSchema
 */
export type TokenObtainPairInputSchema = {
	/**
	 * Password
	 */
	password: string;
	/**
	 * Username
	 *
	 * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
	 */
	username: string;
};

/**
 * TokenRefreshOutputSchema
 */
export type TokenRefreshOutputSchema = {
	/**
	 * Refresh
	 */
	refresh: string;
	/**
	 * Access
	 */
	access: string | null;
};

/**
 * TokenRefreshInputSchema
 */
export type TokenRefreshInputSchema = {
	/**
	 * Refresh
	 */
	refresh: string;
};

/**
 * DemoLoginSchema
 */
export type DemoLoginSchema = {
	/**
	 * Username
	 */
	username: string;
	/**
	 * Password
	 */
	password: string;
};

/**
 * TempTokenWithTOTP
 */
export type TempTokenWithTotp = {
	/**
	 * Token
	 */
	token: string;
	/**
	 * Otp
	 *
	 * The one-time password to verify.
	 */
	otp: string;
};

/**
 * GoogleIDTokenSchema
 */
export type GoogleIdTokenSchema = {
	/**
	 * Id Token
	 *
	 * The Google ID token to verify.
	 */
	id_token: string;
};

/**
 * TOTPProvisioningUriSchema
 */
export type TotpProvisioningUriSchema = {
	/**
	 * Uri
	 *
	 * The provisioning URI for the TOTP app, to be rendered in a QR code.
	 */
	uri: string;
};

/**
 * RevelUserSchema
 */
export type RevelUserSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Email
	 */
	email: string;
	/**
	 * Email Verified
	 */
	email_verified: boolean;
	/**
	 * Preferred Name
	 */
	preferred_name: string;
	/**
	 * Pronouns
	 */
	pronouns: string;
	/**
	 * Is Active
	 */
	is_active: boolean;
	/**
	 * First Name
	 */
	first_name: string;
	/**
	 * Last Name
	 */
	last_name: string;
	/**
	 * Totp Active
	 */
	totp_active: boolean;
};

/**
 * OTPVerifySchema
 */
export type OtpVerifySchema = {
	/**
	 * Otp
	 *
	 * The one-time password to verify.
	 */
	otp: string;
};

/**
 * ResponseMessage
 */
export type ResponseMessage = {
	/**
	 * Message
	 */
	message: string;
};

/**
 * ProfileUpdateSchema
 *
 * Schema for updating user profile information.
 */
export type ProfileUpdateSchema = {
	/**
	 * Preferred Name
	 *
	 * User's preferred name
	 */
	preferred_name: string;
	/**
	 * Pronouns
	 *
	 * User's pronouns
	 */
	pronouns: string;
	/**
	 * First Name
	 *
	 * User's first name
	 */
	first_name: string;
	/**
	 * Last Name
	 *
	 * User's last name
	 */
	last_name: string;
};

/**
 * RegisterUserSchema
 */
export type RegisterUserSchema = {
	/**
	 * Password1
	 *
	 * Password
	 */
	password1: string;
	/**
	 * Password2
	 *
	 * Password confirmation
	 */
	password2: string;
	/**
	 * Email
	 */
	email: string;
	/**
	 * First Name
	 */
	first_name?: string;
	/**
	 * Last Name
	 */
	last_name?: string;
};

/**
 * VerifyEmailResponseSchema
 */
export type VerifyEmailResponseSchema = {
	user: RevelUserSchema;
	token: TokenObtainPairOutputSchema;
};

/**
 * VerifyEmailSchema
 */
export type VerifyEmailSchema = {
	/**
	 * Token
	 */
	token: string;
};

/**
 * DeleteAccountConfirmSchema
 */
export type DeleteAccountConfirmSchema = {
	/**
	 * Token
	 */
	token: string;
};

/**
 * PasswordResetRequestSchema
 */
export type PasswordResetRequestSchema = {
	/**
	 * Email
	 */
	email: string;
};

/**
 * PasswordResetSchema
 */
export type PasswordResetSchema = {
	/**
	 * Password1
	 *
	 * Password
	 */
	password1: string;
	/**
	 * Password2
	 *
	 * Password confirmation
	 */
	password2: string;
	/**
	 * Token
	 */
	token: string;
};

/**
 * DashboardOrganizationsFiltersSchema
 */
export type DashboardOrganizationsFiltersSchema = {
	/**
	 * Owner
	 */
	owner?: boolean;
	/**
	 * Staff
	 */
	staff?: boolean;
	/**
	 * Member
	 */
	member?: boolean;
	/**
	 * Subscriber
	 */
	subscriber?: boolean;
};

/**
 * DynamicInput
 */
export type DynamicInput = {
	/**
	 * Page
	 */
	page?: number;
	/**
	 * Page Size
	 */
	page_size?: number;
};

/**
 * Input
 */
export type Input = {
	/**
	 * Search
	 */
	search?: string | null;
};

/**
 * CitySchema
 */
export type CitySchema = {
	/**
	 * ID
	 */
	id?: number | null;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Country
	 */
	country: string;
	/**
	 * Admin Name
	 */
	admin_name?: string | null;
};

/**
 * OrganizationRetrieveSchema
 */
export type OrganizationRetrieveSchema = {
	/**
	 * Tags
	 */
	tags?: Array<string>;
	city?: CitySchema | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Id
	 */
	id: string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Slug
	 */
	slug: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Logo
	 */
	logo?: string | null;
	/**
	 * Cover Art
	 */
	cover_art?: string | null;
	visibility: Visibility;
	/**
	 * Is Stripe Connected
	 */
	is_stripe_connected: boolean;
	/**
	 * Platform Fee Percent
	 */
	platform_fee_percent?: number | string | null;
	/**
	 * Accept New Members
	 */
	accept_new_members: boolean;
	/**
	 * Contact Email
	 */
	contact_email?: string | null;
	/**
	 * Contact Email Verified
	 */
	contact_email_verified: boolean;
};

/**
 * PaginatedResponseSchema[OrganizationRetrieveSchema]
 */
export type PaginatedResponseSchemaOrganizationRetrieveSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<OrganizationRetrieveSchema>;
};

/**
 * Visibility
 */
export type Visibility = 'public' | 'private' | 'members-only' | 'staff-only';

/**
 * DashboardEventsFiltersSchema
 */
export type DashboardEventsFiltersSchema = {
	/**
	 * Owner
	 */
	owner?: boolean;
	/**
	 * Staff
	 */
	staff?: boolean;
	/**
	 * Member
	 */
	member?: boolean;
	/**
	 * Rsvp Yes
	 */
	rsvp_yes?: boolean;
	/**
	 * Rsvp No
	 */
	rsvp_no?: boolean;
	/**
	 * Rsvp Maybe
	 */
	rsvp_maybe?: boolean;
	/**
	 * Got Ticket
	 */
	got_ticket?: boolean;
	/**
	 * Got Invitation
	 */
	got_invitation?: boolean;
	/**
	 * Subscriber
	 */
	subscriber?: boolean;
};

/**
 * EventInListSchema
 */
export type EventInListSchema = {
	/**
	 * Tags
	 */
	tags?: Array<string>;
	city?: CitySchema | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Id
	 */
	id: string;
	event_type: Types;
	visibility: Visibility;
	organization: OrganizationRetrieveSchema;
	status: Status;
	event_series?: EventSeriesRetrieveSchema | null;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Slug
	 */
	slug: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Invitation Message
	 */
	invitation_message?: string | null;
	/**
	 * Invitation Message Html
	 */
	invitation_message_html?: string;
	/**
	 * Max Attendees
	 */
	max_attendees?: number;
	/**
	 * Waitlist Open
	 */
	waitlist_open?: boolean | null;
	/**
	 * Start
	 */
	start: string;
	/**
	 * End
	 */
	end: string;
	/**
	 * Rsvp Before
	 */
	rsvp_before?: string | null;
	/**
	 * Logo
	 */
	logo?: string | null;
	/**
	 * Cover Art
	 */
	cover_art?: string | null;
	/**
	 * Free For Members
	 */
	free_for_members: boolean;
	/**
	 * Free For Staff
	 */
	free_for_staff: boolean;
	/**
	 * Requires Ticket
	 */
	requires_ticket: boolean;
	/**
	 * Potluck Open
	 */
	potluck_open: boolean;
	/**
	 * Attendee Count
	 */
	attendee_count: number;
	/**
	 * Accept Invitation Requests
	 */
	accept_invitation_requests: boolean;
};

/**
 * EventSeriesRetrieveSchema
 */
export type EventSeriesRetrieveSchema = {
	/**
	 * Tags
	 */
	tags?: Array<string>;
	/**
	 * Id
	 */
	id: string;
	organization: OrganizationRetrieveSchema;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Slug
	 */
	slug: string;
	/**
	 * Logo
	 */
	logo?: string | null;
	/**
	 * Cover Art
	 */
	cover_art?: string | null;
};

/**
 * PaginatedResponseSchema[EventInListSchema]
 */
export type PaginatedResponseSchemaEventInListSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<EventInListSchema>;
};

/**
 * Status
 */
export type Status = 'draft' | 'ready' | 'published';

/**
 * Types
 */
export type Types = 'admission' | 'membership' | 'feedback' | 'generic';

/**
 * DashboardEventSeriesFiltersSchema
 */
export type DashboardEventSeriesFiltersSchema = {
	/**
	 * Owner
	 */
	owner?: boolean;
	/**
	 * Staff
	 */
	staff?: boolean;
	/**
	 * Member
	 */
	member?: boolean;
	/**
	 * Subscriber
	 */
	subscriber?: boolean;
};

/**
 * PaginatedResponseSchema[EventSeriesRetrieveSchema]
 */
export type PaginatedResponseSchemaEventSeriesRetrieveSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<EventSeriesRetrieveSchema>;
};

/**
 * InvitationSchema
 */
export type InvitationSchema = {
	/**
	 * Waives Questionnaire
	 */
	waives_questionnaire?: boolean;
	/**
	 * Waives Purchase
	 */
	waives_purchase?: boolean;
	/**
	 * Overrides Max Attendees
	 */
	overrides_max_attendees?: boolean;
	/**
	 * Waives Membership Required
	 */
	waives_membership_required?: boolean;
	/**
	 * Waives Rsvp Deadline
	 */
	waives_rsvp_deadline?: boolean;
	/**
	 * Custom Message
	 */
	custom_message?: string | null;
	event: EventInListSchema;
	tier?: TierSchema | null;
	/**
	 * User Id
	 */
	user_id: string;
};

/**
 * PaginatedResponseSchema[InvitationSchema]
 */
export type PaginatedResponseSchemaInvitationSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<InvitationSchema>;
};

/**
 * TierSchema
 */
export type TierSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Event Id
	 */
	event_id: string;
	/**
	 * Price
	 */
	price: number | string;
	/**
	 * Currency
	 */
	currency: string;
	/**
	 * Total Available
	 */
	total_available: number | null;
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Price Type
	 *
	 * Whether this tier has a fixed price or allows pay-what-you-can pricing
	 */
	price_type?: string;
	/**
	 * Pwyc Min
	 *
	 * Minimum amount for pay-what-you-can pricing
	 */
	pwyc_min?: number | string;
	/**
	 * Pwyc Max
	 *
	 * Maximum amount for pay-what-you-can pricing (optional)
	 */
	pwyc_max?: number | string | null;
	/**
	 * Sales Start At
	 *
	 * When ticket sales begin for this tier
	 */
	sales_start_at?: string | null;
	/**
	 * Sales End At
	 *
	 * When ticket sales end for this tier
	 */
	sales_end_at?: string | null;
	/**
	 * Purchasable By
	 */
	purchasable_by?: string;
	/**
	 * Payment Method
	 */
	payment_method?: string;
};

/**
 * OrganizationFilterSchema
 */
export type OrganizationFilterSchema = {
	/**
	 * Country
	 */
	country?: string | null;
	/**
	 * City Id
	 */
	city_id?: number | null;
	/**
	 * Tags
	 */
	tags?: Array<string> | null;
};

/**
 * ResourceFilterSchema
 */
export type ResourceFilterSchema = {
	resource_type?: ResourceTypes | null;
};

/**
 * ResourceTypes
 */
export type ResourceTypes = 'file' | 'link' | 'text';

/**
 * AdditionalResourceSchema
 */
export type AdditionalResourceSchema = {
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Text Html
	 */
	text_html?: string;
	/**
	 * Event Ids
	 */
	event_ids?: Array<string>;
	/**
	 * Event Series Ids
	 */
	event_series_ids?: Array<string>;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Resource Type
	 */
	resource_type: string;
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * File
	 */
	file?: string | null;
	/**
	 * Link
	 */
	link?: string | null;
	/**
	 * Text
	 */
	text?: string | null;
	/**
	 * Visibility
	 */
	visibility?: string;
	/**
	 * Display On Organization Page
	 *
	 * Whether the resource should be displayed on organization pages.
	 */
	display_on_organization_page?: boolean;
};

/**
 * PaginatedResponseSchema[AdditionalResourceSchema]
 */
export type PaginatedResponseSchemaAdditionalResourceSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<AdditionalResourceSchema>;
};

/**
 * MinimalRevelUserSchema
 */
export type MinimalRevelUserSchema = {
	/**
	 * Preferred Name
	 *
	 * Preferred name
	 */
	preferred_name?: string | null;
	/**
	 * Pronouns
	 *
	 * Pronouns
	 */
	pronouns?: string | null;
	/**
	 * First Name
	 */
	first_name?: string | null;
	/**
	 * Last Name
	 */
	last_name?: string | null;
};

/**
 * OrganizationMembershipRequestRetrieve
 */
export type OrganizationMembershipRequestRetrieve = {
	user: MinimalRevelUserSchema;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Status
	 */
	status?: string;
	/**
	 * Message
	 */
	message?: string | null;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * OrganizationMembershipRequestCreateSchema
 */
export type OrganizationMembershipRequestCreateSchema = {
	/**
	 * Message
	 */
	message?: string | null;
};

/**
 * OrganizationAdminDetailSchema
 *
 * Comprehensive organization schema for admin use with all fields including platform fees and Stripe details.
 */
export type OrganizationAdminDetailSchema = {
	/**
	 * Tags
	 */
	tags?: Array<string>;
	city?: CitySchema | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Id
	 */
	id: string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Slug
	 */
	slug: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Logo
	 */
	logo?: string | null;
	/**
	 * Cover Art
	 */
	cover_art?: string | null;
	visibility: Visibility;
	/**
	 * Platform Fee Percent
	 */
	platform_fee_percent: number | string;
	/**
	 * Platform Fee Fixed
	 */
	platform_fee_fixed: number | string;
	/**
	 * Is Stripe Connected
	 */
	is_stripe_connected: boolean;
	/**
	 * Stripe Account Id
	 */
	stripe_account_id?: string | null;
	/**
	 * Stripe Charges Enabled
	 */
	stripe_charges_enabled: boolean;
	/**
	 * Stripe Details Submitted
	 */
	stripe_details_submitted: boolean;
	/**
	 * Accept New Members
	 */
	accept_new_members: boolean;
	/**
	 * Contact Email
	 */
	contact_email?: string | null;
	/**
	 * Contact Email Verified
	 */
	contact_email_verified: boolean;
};

/**
 * OrganizationEditSchema
 */
export type OrganizationEditSchema = {
	/**
	 * City Id
	 */
	city_id?: number | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Description
	 */
	description?: string;
	visibility: Visibility;
	/**
	 * Accept New Members
	 */
	accept_new_members?: boolean;
	/**
	 * Contact Email
	 */
	contact_email?: string | null;
};

/**
 * StripeOnboardingLinkSchema
 */
export type StripeOnboardingLinkSchema = {
	/**
	 * Onboarding Url
	 */
	onboarding_url: string;
};

/**
 * StripeAccountStatusSchema
 */
export type StripeAccountStatusSchema = {
	/**
	 * Is Connected
	 */
	is_connected: boolean;
	/**
	 * Charges Enabled
	 */
	charges_enabled?: boolean;
	/**
	 * Details Submitted
	 */
	details_submitted?: boolean;
};

/**
 * ValidationErrorResponse
 */
export type ValidationErrorResponse = {
	/**
	 * Errors
	 */
	errors: {
		[key: string]: string | Array<string>;
	};
};

/**
 * EventSeriesEditSchema
 */
export type EventSeriesEditSchema = {
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
};

/**
 * EventDetailSchema
 */
export type EventDetailSchema = {
	/**
	 * Tags
	 */
	tags?: Array<string>;
	city?: CitySchema | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Id
	 */
	id: string;
	event_type: Types;
	visibility: Visibility;
	organization: OrganizationRetrieveSchema;
	status: Status;
	event_series?: EventSeriesRetrieveSchema | null;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Slug
	 */
	slug: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Invitation Message
	 */
	invitation_message?: string | null;
	/**
	 * Invitation Message Html
	 */
	invitation_message_html?: string;
	/**
	 * Max Attendees
	 */
	max_attendees?: number;
	/**
	 * Waitlist Open
	 */
	waitlist_open?: boolean | null;
	/**
	 * Start
	 */
	start: string;
	/**
	 * End
	 */
	end: string;
	/**
	 * Rsvp Before
	 */
	rsvp_before?: string | null;
	/**
	 * Logo
	 */
	logo?: string | null;
	/**
	 * Cover Art
	 */
	cover_art?: string | null;
	/**
	 * Free For Members
	 */
	free_for_members: boolean;
	/**
	 * Free For Staff
	 */
	free_for_staff: boolean;
	/**
	 * Requires Ticket
	 */
	requires_ticket: boolean;
	/**
	 * Potluck Open
	 */
	potluck_open: boolean;
	/**
	 * Attendee Count
	 */
	attendee_count: number;
	/**
	 * Accept Invitation Requests
	 */
	accept_invitation_requests: boolean;
};

/**
 * EventCreateSchema
 */
export type EventCreateSchema = {
	/**
	 * City Id
	 */
	city_id?: number | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
	event_type?: Types | null;
	status?: Status;
	visibility?: Visibility | null;
	/**
	 * Invitation Message
	 *
	 * Invitation message
	 */
	invitation_message?: string | null;
	/**
	 * Max Attendees
	 */
	max_attendees?: number;
	/**
	 * Waitlist Open
	 */
	waitlist_open?: boolean;
	/**
	 * Start
	 */
	start: string;
	/**
	 * End
	 */
	end?: string | null;
	/**
	 * Rsvp Before
	 *
	 * RSVP deadline for events that do not require tickets
	 */
	rsvp_before?: string | null;
	/**
	 * Check In Starts At
	 *
	 * When check-in opens for this event
	 */
	check_in_starts_at?: string | null;
	/**
	 * Check In Ends At
	 *
	 * When check-in closes for this event
	 */
	check_in_ends_at?: string | null;
	/**
	 * Event Series Id
	 */
	event_series_id?: string | null;
	/**
	 * Free For Members
	 */
	free_for_members?: boolean;
	/**
	 * Free For Staff
	 */
	free_for_staff?: boolean;
	/**
	 * Potluck Open
	 */
	potluck_open?: boolean;
	/**
	 * Accept Invitation Requests
	 */
	accept_invitation_requests?: boolean;
};

/**
 * OrganizationTokenFilterSchema
 */
export type OrganizationTokenFilterSchema = {
	/**
	 * Is Active
	 */
	is_active?: boolean | null;
	/**
	 * Organization Id
	 */
	organization_id?: string | null;
	/**
	 * Membership Pass
	 */
	membership_pass?: boolean | null;
};

/**
 * OrganizationTokenSchema
 */
export type OrganizationTokenSchema = {
	/**
	 * Created At
	 */
	created_at: string;
	/**
	 * Updated At
	 */
	updated_at: string;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Issuer
	 */
	issuer: string;
	/**
	 * Expires At
	 */
	expires_at?: string | null;
	/**
	 * Uses
	 */
	uses?: number;
	/**
	 * Max Uses
	 *
	 * The maximum number of invites allowed for this token. 0 Means unlimited.
	 */
	max_uses?: number;
	/**
	 * Organization
	 */
	organization: string;
	/**
	 * Grants Membership
	 */
	grants_membership?: boolean;
	/**
	 * Grants Staff Status
	 */
	grants_staff_status?: boolean;
};

/**
 * PaginatedResponseSchema[OrganizationTokenSchema]
 */
export type PaginatedResponseSchemaOrganizationTokenSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<OrganizationTokenSchema>;
};

/**
 * OrganizationTokenCreateSchema
 */
export type OrganizationTokenCreateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Max Uses
	 */
	max_uses?: number;
	/**
	 * Grants Membership
	 */
	grants_membership?: boolean;
	/**
	 * Grants Staff Status
	 */
	grants_staff_status?: boolean;
	/**
	 * Duration
	 */
	duration?: number;
};

/**
 * OrganizationTokenUpdateSchema
 */
export type OrganizationTokenUpdateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Max Uses
	 */
	max_uses?: number;
	/**
	 * Grants Membership
	 */
	grants_membership?: boolean;
	/**
	 * Grants Staff Status
	 */
	grants_staff_status?: boolean;
	/**
	 * Expires At
	 */
	expires_at?: string | null;
};

/**
 * PaginatedResponseSchema[OrganizationMembershipRequestRetrieve]
 */
export type PaginatedResponseSchemaOrganizationMembershipRequestRetrieve = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<OrganizationMembershipRequestRetrieve>;
};

/**
 * AdditionalResourceCreateSchema
 */
export type AdditionalResourceCreateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Description
	 */
	description?: string | null;
	resource_type: ResourceTypes;
	/**
	 * Visibility
	 */
	visibility?: 'public' | 'private' | 'members-only' | 'staff-only';
	/**
	 * Display On Organization Page
	 */
	display_on_organization_page?: boolean;
	/**
	 * Link
	 */
	link?: string | null;
	/**
	 * Text
	 */
	text?: string | null;
	/**
	 * Event Series Ids
	 */
	event_series_ids?: Array<string>;
	/**
	 * Event Ids
	 */
	event_ids?: Array<string>;
};

/**
 * AdditionalResourceUpdateSchema
 */
export type AdditionalResourceUpdateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Description
	 */
	description?: string | null;
	visibility?: Visibility | null;
	/**
	 * Display On Organization Page
	 */
	display_on_organization_page?: boolean | null;
	/**
	 * Link
	 */
	link?: string | null;
	/**
	 * Text
	 */
	text?: string | null;
	/**
	 * Event Series Ids
	 */
	event_series_ids?: Array<string> | null;
	/**
	 * Event Ids
	 */
	event_ids?: Array<string> | null;
};

/**
 * MemberUserSchema
 */
export type MemberUserSchema = {
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Email Address
	 */
	email?: string | null;
	/**
	 * Phone Number
	 *
	 * Phone number
	 */
	phone_number?: string | null;
	/**
	 * Preferred Name
	 *
	 * Preferred name
	 */
	preferred_name?: string | null;
	/**
	 * Pronouns
	 *
	 * Pronouns
	 */
	pronouns?: string | null;
	/**
	 * First Name
	 */
	first_name?: string | null;
	/**
	 * Last Name
	 */
	last_name?: string | null;
};

/**
 * OrganizationMemberSchema
 */
export type OrganizationMemberSchema = {
	user: MemberUserSchema;
	/**
	 * Member Since
	 */
	member_since: string;
};

/**
 * PaginatedResponseSchema[OrganizationMemberSchema]
 */
export type PaginatedResponseSchemaOrganizationMemberSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<OrganizationMemberSchema>;
};

/**
 * OrganizationStaffSchema
 */
export type OrganizationStaffSchema = {
	user: MemberUserSchema;
	/**
	 * Staff Since
	 */
	staff_since: string;
	permissions: PermissionsSchema;
};

/**
 * PaginatedResponseSchema[OrganizationStaffSchema]
 */
export type PaginatedResponseSchemaOrganizationStaffSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<OrganizationStaffSchema>;
};

/**
 * PermissionMap
 */
export type PermissionMap = {
	/**
	 * View Organization Details
	 */
	view_organization_details?: boolean;
	/**
	 * Create Event
	 */
	create_event?: boolean;
	/**
	 * Create Event Series
	 */
	create_event_series?: boolean;
	/**
	 * Edit Event Series
	 */
	edit_event_series?: boolean;
	/**
	 * Delete Event Series
	 */
	delete_event_series?: boolean;
	/**
	 * Edit Event
	 */
	edit_event?: boolean;
	/**
	 * Delete Event
	 */
	delete_event?: boolean;
	/**
	 * Open Event
	 */
	open_event?: boolean;
	/**
	 * Manage Tickets
	 */
	manage_tickets?: boolean;
	/**
	 * Close Event
	 */
	close_event?: boolean;
	/**
	 * Manage Event
	 */
	manage_event?: boolean;
	/**
	 * Check In Attendees
	 */
	check_in_attendees?: boolean;
	/**
	 * Invite To Event
	 */
	invite_to_event?: boolean;
	/**
	 * Edit Organization
	 */
	edit_organization?: boolean;
	/**
	 * Manage Members
	 */
	manage_members?: boolean;
	/**
	 * Manage Potluck
	 */
	manage_potluck?: boolean;
	/**
	 * Create Questionnaire
	 */
	create_questionnaire?: boolean;
	/**
	 * Edit Questionnaire
	 */
	edit_questionnaire?: boolean;
	/**
	 * Delete Questionnaire
	 */
	delete_questionnaire?: boolean;
	/**
	 * Evaluate Questionnaire
	 */
	evaluate_questionnaire?: boolean;
};

/**
 * PermissionsSchema
 */
export type PermissionsSchema = {
	default?: PermissionMap;
	/**
	 * Event Overrides
	 */
	event_overrides?: {
		[key: string]: PermissionMap;
	};
};

/**
 * TagSchema
 */
export type TagSchema = {
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Color
	 *
	 * Hex color (e.g. #FF0099)
	 */
	color?: string | null;
	/**
	 * Icon
	 *
	 * Optional icon name
	 */
	icon?: string | null;
};

/**
 * TagUpdateSchema
 */
export type TagUpdateSchema = {
	/**
	 * Tags
	 *
	 * A list of tag names to add or remove.
	 */
	tags: Array<string>;
};

/**
 * EventFilterSchema
 */
export type EventFilterSchema = {
	/**
	 * Country
	 */
	country?: string | null;
	/**
	 * City Id
	 */
	city_id?: number | null;
	/**
	 * Organization
	 */
	organization?: string | null;
	event_type?: Types | null;
	visibility?: Visibility | null;
	/**
	 * Event Series
	 */
	event_series?: string | null;
	/**
	 * Next Events
	 */
	next_events?: boolean | null;
	/**
	 * Past Events
	 */
	past_events?: boolean | null;
	status?: Status | null;
	/**
	 * Tags
	 */
	tags?: Array<string> | null;
};

/**
 * MinimalEventSchema
 */
export type MinimalEventSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Slug
	 */
	slug: string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Start
	 */
	start?: string | null;
	/**
	 * Logo
	 */
	logo?: string | null;
};

/**
 * PaginatedResponseSchema[MinimalRevelUserSchema]
 */
export type PaginatedResponseSchemaMinimalRevelUserSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<MinimalRevelUserSchema>;
};

/**
 * EventRSVPSchema
 */
export type EventRsvpSchema = {
	/**
	 * Event Id
	 */
	event_id: string;
	status: Status;
};

/**
 * EventTicketSchema
 */
export type EventTicketSchema = {
	/**
	 * Event Id
	 */
	event_id: string | null;
	tier?: TierSchema | null;
	status: Status;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Checked In At
	 */
	checked_in_at?: string | null;
};

/**
 * EventUserEligibility
 */
export type EventUserEligibility = {
	/**
	 * Allowed
	 */
	allowed: boolean;
	/**
	 * Event Id
	 */
	event_id: string;
	/**
	 * Reason
	 */
	reason?: string | null;
	next_step?: NextStep | null;
	/**
	 * Questionnaires Missing
	 */
	questionnaires_missing?: Array<string> | null;
	/**
	 * Questionnaires Pending Review
	 */
	questionnaires_pending_review?: Array<string> | null;
	/**
	 * Questionnaires Failed
	 */
	questionnaires_failed?: Array<string> | null;
	/**
	 * Retry On
	 */
	retry_on?: string | null;
};

/**
 * NextStep
 */
export type NextStep =
	| 'request_invitation'
	| 'become_member'
	| 'complete_questionnaire'
	| 'wait_for_questionnaire_evaluation'
	| 'wait_to_retake_questionnaire'
	| 'wait_for_event_to_open'
	| 'join_waitlist'
	| 'purchase_ticket'
	| 'rsvp';

/**
 * Status
 */
export type EventsModelsEventEventRsvpStatus = 'yes' | 'no' | 'maybe';

/**
 * Status
 */
export type EventsModelsEventTicketStatus = 'pending' | 'active' | 'checked_in' | 'cancelled';

/**
 * EventInvitationRequestSchema
 */
export type EventInvitationRequestSchema = {
	user: MinimalRevelUserSchema;
	event: EventInListSchema;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Message
	 */
	message?: string | null;
	/**
	 * Status
	 */
	status?: string;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * EventInvitationRequestCreateSchema
 */
export type EventInvitationRequestCreateSchema = {
	/**
	 * Message
	 */
	message?: string | null;
};

/**
 * PaginatedResponseSchema[EventInvitationRequestSchema]
 */
export type PaginatedResponseSchemaEventInvitationRequestSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<EventInvitationRequestSchema>;
};

/**
 * StripeCheckoutSessionSchema
 */
export type StripeCheckoutSessionSchema = {
	/**
	 * Checkout Url
	 */
	checkout_url: string;
};

/**
 * PWYCCheckoutPayloadSchema
 *
 * Schema for Pay What You Can checkout payload.
 */
export type PwycCheckoutPayloadSchema = {
	/**
	 * Pwyc
	 *
	 * Pay what you can amount, minimum 1
	 */
	pwyc: number | string;
};

/**
 * EvaluationMode
 */
export type EvaluationMode = 'automatic' | 'manual' | 'hybrid';

/**
 * FreeTextQuestionSchema
 */
export type FreeTextQuestionSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Question
	 */
	question: string;
	/**
	 * Is Mandatory
	 */
	is_mandatory: boolean;
	/**
	 * Order
	 */
	order: number;
};

/**
 * MultipleChoiceOptionSchema
 */
export type MultipleChoiceOptionSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Option
	 */
	option: string;
	/**
	 * Order
	 */
	order: number;
};

/**
 * MultipleChoiceQuestionSchema
 */
export type MultipleChoiceQuestionSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Question
	 */
	question: string;
	/**
	 * Is Mandatory
	 */
	is_mandatory: boolean;
	/**
	 * Order
	 */
	order: number;
	/**
	 * Allow Multiple Answers
	 */
	allow_multiple_answers: boolean;
	/**
	 * Options
	 */
	options: Array<MultipleChoiceOptionSchema>;
};

/**
 * QuestionnaireSchema
 */
export type QuestionnaireSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Multiple Choice Questions
	 */
	multiple_choice_questions?: Array<MultipleChoiceQuestionSchema>;
	/**
	 * Free Text Questions
	 */
	free_text_questions?: Array<FreeTextQuestionSchema>;
	/**
	 * Sections
	 */
	sections?: Array<SectionSchema>;
	evaluation_mode: EvaluationMode;
};

/**
 * SectionSchema
 */
export type SectionSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Multiple Choice Questions
	 */
	multiple_choice_questions?: Array<MultipleChoiceQuestionSchema>;
	/**
	 * Free Text Questions
	 */
	free_text_questions?: Array<FreeTextQuestionSchema>;
	/**
	 * Order
	 */
	order: number;
};

/**
 * QuestionnaireEvaluationForUserSchema
 */
export type QuestionnaireEvaluationForUserSchema = {
	submission: QuestionnaireSubmissionResponseSchema;
	/**
	 * Score
	 */
	score: number | string;
	status: QuestionnairesModelsQuestionnaireEvaluationStatus;
};

/**
 * QuestionnaireSubmissionResponseSchema
 */
export type QuestionnaireSubmissionResponseSchema = {
	/**
	 * Questionnaire Id
	 */
	questionnaire_id: string;
	status: QuestionnairesModelsQuestionnaireSubmissionStatus;
	/**
	 * Submitted At
	 */
	submitted_at: string;
};

/**
 * Status
 */
export type QuestionnairesModelsQuestionnaireEvaluationStatus =
	| 'approved'
	| 'rejected'
	| 'pending review';

/**
 * Status
 */
export type QuestionnairesModelsQuestionnaireSubmissionStatus = 'draft' | 'ready';

/**
 * FreeTextSubmissionSchema
 */
export type FreeTextSubmissionSchema = {
	/**
	 * Question Id
	 */
	question_id: string;
	/**
	 * Answer
	 */
	answer: string;
};

/**
 * MultipleChoiceSubmissionSchema
 */
export type MultipleChoiceSubmissionSchema = {
	/**
	 * Question Id
	 */
	question_id: string;
	/**
	 * Options Id
	 */
	options_id: Array<string>;
};

/**
 * QuestionnaireSubmissionSchema
 */
export type QuestionnaireSubmissionSchema = {
	/**
	 * Questionnaire Id
	 */
	questionnaire_id: string;
	/**
	 * Multiple Choice Answers
	 */
	multiple_choice_answers?: Array<MultipleChoiceSubmissionSchema>;
	/**
	 * Free Text Answers
	 */
	free_text_answers?: Array<FreeTextSubmissionSchema>;
	status: Status;
};

/**
 * EventTokenSchema
 */
export type EventTokenSchema = {
	/**
	 * Created At
	 */
	created_at: string;
	/**
	 * Updated At
	 */
	updated_at: string;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Issuer
	 */
	issuer: string;
	/**
	 * Expires At
	 */
	expires_at?: string | null;
	/**
	 * Uses
	 */
	uses?: number;
	/**
	 * Max Uses
	 *
	 * The maximum number of invites allowed for this token. 0 Means unlimited.
	 */
	max_uses?: number;
	/**
	 * Event
	 */
	event: string;
	/**
	 * Grants Invitation
	 */
	grants_invitation?: boolean;
	/**
	 * Invitation Tier
	 */
	invitation_tier?: string | null;
	/**
	 * Invitation Payload
	 *
	 * If provided, the token will we viable to claim invitations.
	 */
	invitation_payload?: {
		[key: string]: unknown;
	} | null;
};

/**
 * EventTokenUpdateSchema
 */
export type EventTokenUpdateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Max Uses
	 */
	max_uses?: number;
	invitation?: InvitationBaseSchema | null;
	/**
	 * Invitation Tier Id
	 */
	invitation_tier_id?: string | null;
	/**
	 * Expires At
	 */
	expires_at?: string | null;
};

/**
 * InvitationBaseSchema
 */
export type InvitationBaseSchema = {
	/**
	 * Waives Questionnaire
	 */
	waives_questionnaire?: boolean;
	/**
	 * Waives Purchase
	 */
	waives_purchase?: boolean;
	/**
	 * Overrides Max Attendees
	 */
	overrides_max_attendees?: boolean;
	/**
	 * Waives Membership Required
	 */
	waives_membership_required?: boolean;
	/**
	 * Waives Rsvp Deadline
	 */
	waives_rsvp_deadline?: boolean;
	/**
	 * Custom Message
	 */
	custom_message?: string | null;
};

/**
 * EventTokenFilterSchema
 */
export type EventTokenFilterSchema = {
	/**
	 * Is Active
	 */
	is_active?: boolean | null;
	/**
	 * Event Id
	 */
	event_id?: string | null;
	/**
	 * Has Invitation
	 */
	has_invitation?: boolean | null;
};

/**
 * PaginatedResponseSchema[EventTokenSchema]
 */
export type PaginatedResponseSchemaEventTokenSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<EventTokenSchema>;
};

/**
 * EventTokenCreateSchema
 */
export type EventTokenCreateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Max Uses
	 */
	max_uses?: number;
	invitation?: InvitationBaseSchema | null;
	/**
	 * Invitation Tier Id
	 */
	invitation_tier_id?: string | null;
	/**
	 * Duration
	 */
	duration?: number;
};

/**
 * EventInvitationRequestInternalSchema
 */
export type EventInvitationRequestInternalSchema = {
	user: MinimalRevelUserSchema;
	event: EventInListSchema;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Message
	 */
	message?: string | null;
	/**
	 * Status
	 */
	status?: string;
	/**
	 * Created At
	 */
	created_at: string;
	decided_by?: MinimalRevelUserSchema | null;
};

/**
 * PaginatedResponseSchema[EventInvitationRequestInternalSchema]
 */
export type PaginatedResponseSchemaEventInvitationRequestInternalSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<EventInvitationRequestInternalSchema>;
};

/**
 * EventEditSchema
 */
export type EventEditSchema = {
	/**
	 * City Id
	 */
	city_id?: number | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Description
	 */
	description?: string | null;
	event_type?: Types | null;
	status?: Status;
	visibility?: Visibility | null;
	/**
	 * Invitation Message
	 *
	 * Invitation message
	 */
	invitation_message?: string | null;
	/**
	 * Max Attendees
	 */
	max_attendees?: number;
	/**
	 * Waitlist Open
	 */
	waitlist_open?: boolean;
	/**
	 * Start
	 */
	start?: string | null;
	/**
	 * End
	 */
	end?: string | null;
	/**
	 * Rsvp Before
	 *
	 * RSVP deadline for events that do not require tickets
	 */
	rsvp_before?: string | null;
	/**
	 * Check In Starts At
	 *
	 * When check-in opens for this event
	 */
	check_in_starts_at?: string | null;
	/**
	 * Check In Ends At
	 *
	 * When check-in closes for this event
	 */
	check_in_ends_at?: string | null;
	/**
	 * Event Series Id
	 */
	event_series_id?: string | null;
	/**
	 * Free For Members
	 */
	free_for_members?: boolean;
	/**
	 * Free For Staff
	 */
	free_for_staff?: boolean;
	/**
	 * Potluck Open
	 */
	potluck_open?: boolean;
	/**
	 * Accept Invitation Requests
	 */
	accept_invitation_requests?: boolean;
};

/**
 * PaginatedResponseSchema[TicketTierDetailSchema]
 */
export type PaginatedResponseSchemaTicketTierDetailSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<TicketTierDetailSchema>;
};

/**
 * TicketTierDetailSchema
 */
export type TicketTierDetailSchema = {
	/**
	 * Event Id
	 */
	event_id: string;
	/**
	 * Total Available
	 */
	total_available?: number | null;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Visibility
	 */
	visibility?: string;
	/**
	 * Payment Method
	 */
	payment_method?: string;
	/**
	 * Purchasable By
	 */
	purchasable_by?: string;
	/**
	 * Price
	 */
	price?: number | string;
	/**
	 * Price Type
	 *
	 * Whether this tier has a fixed price or allows pay-what-you-can pricing
	 */
	price_type?: string;
	/**
	 * Pwyc Min
	 *
	 * Minimum amount for pay-what-you-can pricing
	 */
	pwyc_min?: number | string;
	/**
	 * Pwyc Max
	 *
	 * Maximum amount for pay-what-you-can pricing (optional)
	 */
	pwyc_max?: number | string | null;
	/**
	 * Currency
	 *
	 * ISO 4217 currency code
	 */
	currency?: string;
	/**
	 * Sales Start At
	 *
	 * When ticket sales begin for this tier
	 */
	sales_start_at?: string | null;
	/**
	 * Sales End At
	 *
	 * When ticket sales end for this tier
	 */
	sales_end_at?: string | null;
	/**
	 * Created At
	 */
	created_at: string;
	/**
	 * Updated At
	 */
	updated_at: string;
	/**
	 * Total Quantity
	 */
	total_quantity?: number | null;
	/**
	 * Quantity Sold
	 */
	quantity_sold?: number;
	/**
	 * Manual Payment Instructions
	 */
	manual_payment_instructions?: string | null;
};

/**
 * PaymentMethod
 */
export type PaymentMethod = 'online' | 'offline' | 'at_the_door' | 'free';

/**
 * PriceType
 */
export type PriceType = 'fixed' | 'pwyc';

/**
 * PurchasableBy
 */
export type PurchasableBy = 'public' | 'members' | 'invited' | 'invited_and_members';

/**
 * TicketTierCreateSchema
 */
export type TicketTierCreateSchema = {
	payment_method?: PaymentMethod;
	/**
	 * Price
	 */
	price?: number | string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
	visibility?: Visibility;
	purchasable_by?: PurchasableBy;
	price_type?: PriceType;
	/**
	 * Pwyc Min
	 */
	pwyc_min?: number | string;
	/**
	 * Pwyc Max
	 */
	pwyc_max?: number | string | null;
	/**
	 * Currency
	 */
	currency?:
		| 'EUR'
		| 'USD'
		| 'GBP'
		| 'JPY'
		| 'AUD'
		| 'CAD'
		| 'CHF'
		| 'CNY'
		| 'HKD'
		| 'NZD'
		| 'SEK'
		| 'KRW'
		| 'SGD'
		| 'NOK'
		| 'MXN'
		| 'INR'
		| 'RUB'
		| 'ZAR'
		| 'TRY'
		| 'BRL'
		| 'TWD'
		| 'DKK'
		| 'PLN'
		| 'THB'
		| 'IDR'
		| 'HUF'
		| 'CZK'
		| 'ILS'
		| 'AED'
		| 'SAR'
		| 'MYR'
		| 'PHP'
		| 'CLP'
		| 'COP'
		| 'PKR'
		| 'EGP'
		| 'NGN'
		| 'VND'
		| 'BDT'
		| 'ARS'
		| 'QAR'
		| 'KWD'
		| 'BHD'
		| 'OMR'
		| 'MAD'
		| 'KES'
		| 'UAH'
		| 'RON'
		| 'BGN'
		| 'HRK'
		| 'ISK';
	/**
	 * Sales Start At
	 */
	sales_start_at?: string | null;
	/**
	 * Sales End At
	 */
	sales_end_at?: string | null;
	/**
	 * Total Quantity
	 */
	total_quantity?: number | null;
};

/**
 * TicketTierUpdateSchema
 */
export type TicketTierUpdateSchema = {
	payment_method?: PaymentMethod;
	/**
	 * Price
	 */
	price?: number | string;
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Description
	 */
	description?: string | null;
	visibility?: Visibility | null;
	purchasable_by?: PurchasableBy | null;
	price_type?: PriceType | null;
	/**
	 * Pwyc Min
	 */
	pwyc_min?: number | string | null;
	/**
	 * Pwyc Max
	 */
	pwyc_max?: number | string | null;
	/**
	 * Currency
	 */
	currency?: string | null;
	/**
	 * Sales Start At
	 */
	sales_start_at?: string | null;
	/**
	 * Sales End At
	 */
	sales_end_at?: string | null;
	/**
	 * Total Quantity
	 */
	total_quantity?: number | null;
};

/**
 * TicketFilterSchema
 *
 * Filter schema for tickets.
 */
export type TicketFilterSchema = {
	status?: Status | null;
	tier__payment_method?: PaymentMethod | null;
};

/**
 * AdminTicketSchema
 *
 * Schema for pending tickets in admin interface.
 */
export type AdminTicketSchema = {
	user: MemberUserSchema;
	tier: TierSchema;
	payment?: PaymentSchema | null;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Status
	 */
	status?: string;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * PaginatedResponseSchema[AdminTicketSchema]
 */
export type PaginatedResponseSchemaAdminTicketSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<AdminTicketSchema>;
};

/**
 * PaymentSchema
 *
 * Public representation of a Payment record.
 */
export type PaymentSchema = {
	status: Status;
	/**
	 * Currency
	 */
	currency:
		| 'EUR'
		| 'USD'
		| 'GBP'
		| 'JPY'
		| 'AUD'
		| 'CAD'
		| 'CHF'
		| 'CNY'
		| 'HKD'
		| 'NZD'
		| 'SEK'
		| 'KRW'
		| 'SGD'
		| 'NOK'
		| 'MXN'
		| 'INR'
		| 'RUB'
		| 'ZAR'
		| 'TRY'
		| 'BRL'
		| 'TWD'
		| 'DKK'
		| 'PLN'
		| 'THB'
		| 'IDR'
		| 'HUF'
		| 'CZK'
		| 'ILS'
		| 'AED'
		| 'SAR'
		| 'MYR'
		| 'PHP'
		| 'CLP'
		| 'COP'
		| 'PKR'
		| 'EGP'
		| 'NGN'
		| 'VND'
		| 'BDT'
		| 'ARS'
		| 'QAR'
		| 'KWD'
		| 'BHD'
		| 'OMR'
		| 'MAD'
		| 'KES'
		| 'UAH'
		| 'RON'
		| 'BGN'
		| 'HRK'
		| 'ISK';
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Created At
	 */
	created_at: string;
	/**
	 * Updated At
	 */
	updated_at: string;
	/**
	 * Stripe Session Id
	 */
	stripe_session_id: string;
	/**
	 * Stripe Payment Intent Id
	 *
	 * Stripe PaymentIntent ID for refund processing
	 */
	stripe_payment_intent_id?: string | null;
	/**
	 * Amount
	 */
	amount: number | string;
	/**
	 * Platform Fee
	 */
	platform_fee: number | string;
	/**
	 * Expires At
	 */
	expires_at?: string;
};

/**
 * CheckInResponseSchema
 *
 * Schema for ticket check-in response.
 */
export type CheckInResponseSchema = {
	user: MinimalRevelUserSchema;
	tier?: TierSchema | null;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Status
	 */
	status?: string;
	/**
	 * Checked In At
	 */
	checked_in_at?: string | null;
};

/**
 * DirectInvitationResponseSchema
 *
 * Response schema for direct invitation creation.
 */
export type DirectInvitationResponseSchema = {
	/**
	 * Created Invitations
	 *
	 * Number of EventInvitation objects created
	 */
	created_invitations: number;
	/**
	 * Pending Invitations
	 *
	 * Number of PendingEventInvitation objects created
	 */
	pending_invitations: number;
	/**
	 * Total Invited
	 *
	 * Total number of users invited
	 */
	total_invited: number;
};

/**
 * DirectInvitationCreateSchema
 *
 * Schema for creating direct invitations to events.
 */
export type DirectInvitationCreateSchema = {
	/**
	 * Waives Questionnaire
	 */
	waives_questionnaire?: boolean;
	/**
	 * Waives Purchase
	 */
	waives_purchase?: boolean;
	/**
	 * Overrides Max Attendees
	 */
	overrides_max_attendees?: boolean;
	/**
	 * Waives Membership Required
	 */
	waives_membership_required?: boolean;
	/**
	 * Waives Rsvp Deadline
	 */
	waives_rsvp_deadline?: boolean;
	/**
	 * Custom Message
	 */
	custom_message?: string | null;
	/**
	 * Emails
	 *
	 * List of email addresses to invite
	 */
	emails: Array<string>;
	/**
	 * Tier Id
	 *
	 * Ticket tier to assign to invitations
	 */
	tier_id: string;
	/**
	 * Send Notification
	 *
	 * Whether to send notification emails
	 */
	send_notification?: boolean;
};

/**
 * EventInvitationListSchema
 *
 * Schema for listing EventInvitation objects.
 */
export type EventInvitationListSchema = {
	/**
	 * Id
	 */
	id: string;
	user: MinimalRevelUserSchema;
	tier?: TierSchema | null;
	/**
	 * Waives Questionnaire
	 */
	waives_questionnaire: boolean;
	/**
	 * Waives Purchase
	 */
	waives_purchase: boolean;
	/**
	 * Overrides Max Attendees
	 */
	overrides_max_attendees: boolean;
	/**
	 * Waives Membership Required
	 */
	waives_membership_required: boolean;
	/**
	 * Waives Rsvp Deadline
	 */
	waives_rsvp_deadline: boolean;
	/**
	 * Custom Message
	 */
	custom_message?: string | null;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * PaginatedResponseSchema[EventInvitationListSchema]
 */
export type PaginatedResponseSchemaEventInvitationListSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<EventInvitationListSchema>;
};

/**
 * PaginatedResponseSchema[PendingEventInvitationListSchema]
 */
export type PaginatedResponseSchemaPendingEventInvitationListSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<PendingEventInvitationListSchema>;
};

/**
 * PendingEventInvitationListSchema
 *
 * Schema for listing PendingEventInvitation objects.
 */
export type PendingEventInvitationListSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Email
	 */
	email: string;
	tier?: TierSchema | null;
	/**
	 * Waives Questionnaire
	 */
	waives_questionnaire: boolean;
	/**
	 * Waives Purchase
	 */
	waives_purchase: boolean;
	/**
	 * Overrides Max Attendees
	 */
	overrides_max_attendees: boolean;
	/**
	 * Waives Membership Required
	 */
	waives_membership_required: boolean;
	/**
	 * Waives Rsvp Deadline
	 */
	waives_rsvp_deadline: boolean;
	/**
	 * Custom Message
	 */
	custom_message?: string | null;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * RSVPFilterSchema
 *
 * Filter schema for event RSVPs.
 */
export type RsvpFilterSchema = {
	status?: Status | null;
	/**
	 * User Id
	 */
	user_id?: string | null;
};

/**
 * PaginatedResponseSchema[RSVPDetailSchema]
 */
export type PaginatedResponseSchemaRsvpDetailSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<RsvpDetailSchema>;
};

/**
 * RSVPDetailSchema
 *
 * Schema for RSVP details in admin views.
 */
export type RsvpDetailSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Event Id
	 */
	event_id: string;
	user: MinimalRevelUserSchema;
	status: Status;
	/**
	 * Created At
	 */
	created_at: string;
	/**
	 * Updated At
	 */
	updated_at: string;
};

/**
 * RSVPCreateSchema
 *
 * Schema for creating an RSVP on behalf of a user.
 */
export type RsvpCreateSchema = {
	/**
	 * User Id
	 */
	user_id: string;
	status: Status;
};

/**
 * RSVPUpdateSchema
 *
 * Schema for updating an RSVP.
 */
export type RsvpUpdateSchema = {
	status: Status;
};

/**
 * OrganizationPermissionsSchema
 */
export type OrganizationPermissionsSchema = {
	/**
	 * Memberships
	 */
	memberships?: Array<string>;
	/**
	 * Organization Permissions
	 */
	organization_permissions?: {
		[key: string]: PermissionsSchema | 'owner';
	} | null;
};

/**
 * EventSeriesFilterSchema
 */
export type EventSeriesFilterSchema = {
	/**
	 * Organization
	 */
	organization?: string | null;
	/**
	 * Tags
	 */
	tags?: Array<string> | null;
};

/**
 * PotluckItemRetrieveSchema
 */
export type PotluckItemRetrieveSchema = {
	/**
	 * Is Assigned
	 */
	is_assigned?: boolean;
	/**
	 * Is Owned
	 */
	is_owned?: boolean;
	/**
	 * Note Html
	 */
	note_html?: string;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Item Type
	 */
	item_type: string;
	/**
	 * Quantity
	 */
	quantity?: string | null;
	/**
	 * Note
	 */
	note?: string | null;
};

/**
 * ItemTypes
 */
export type ItemTypes =
	| 'food'
	| 'main_course'
	| 'side_dish'
	| 'dessert'
	| 'drink'
	| 'alcohol'
	| 'non_alcoholic'
	| 'supplies'
	| 'labor'
	| 'entertainment'
	| 'sexual_health'
	| 'toys'
	| 'care'
	| 'transport'
	| 'misc';

/**
 * PotluckItemCreateSchema
 */
export type PotluckItemCreateSchema = {
	item_type: ItemTypes;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Quantity
	 */
	quantity?: string | null;
	/**
	 * Note
	 */
	note?: string | null;
};

/**
 * QuestionnaireFilterSchema
 */
export type QuestionnaireFilterSchema = {
	/**
	 * Organization Id
	 */
	organization_id?: string | null;
	/**
	 * Event Id
	 */
	event_id?: string | null;
	/**
	 * Event Series Id
	 */
	event_series_id?: string | null;
};

/**
 * OrganizationQuestionnaireInListSchema
 */
export type OrganizationQuestionnaireInListSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Events
	 */
	events?: Array<MinimalEventSchema>;
	/**
	 * Event Series
	 */
	event_series?: Array<EventSeriesRetrieveSchema>;
	/**
	 * Max Submission Age
	 */
	max_submission_age?: string | number | null;
	questionnaire_type: Types;
	questionnaire: QuestionnaireInListSchema;
	/**
	 * Pending Evaluations Count
	 */
	pending_evaluations_count?: number;
};

/**
 * PaginatedResponseSchema[OrganizationQuestionnaireInListSchema]
 */
export type PaginatedResponseSchemaOrganizationQuestionnaireInListSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<OrganizationQuestionnaireInListSchema>;
};

/**
 * QuestionnaireInListSchema
 */
export type QuestionnaireInListSchema = {
	/**
	 * Name
	 */
	name: string;
	status: QuestionnairesModelsQuestionnaireStatus;
	/**
	 * Min Score
	 */
	min_score: number | string;
	/**
	 * Shuffle Questions
	 */
	shuffle_questions?: boolean;
	/**
	 * Shuffle Sections
	 */
	shuffle_sections?: boolean;
	evaluation_mode: EvaluationMode;
	/**
	 * Id
	 */
	id: string;
};

/**
 * FreeTextQuestionCreateSchema
 *
 * Schema for creating a FreeTextQuestion.
 */
export type FreeTextQuestionCreateSchema = {
	/**
	 * Section Id
	 */
	section_id?: string | null;
	/**
	 * Question
	 */
	question: string;
	/**
	 * Is Mandatory
	 */
	is_mandatory?: boolean;
	/**
	 * Order
	 */
	order?: number;
	/**
	 * Positive Weight
	 */
	positive_weight?: number | string;
	/**
	 * Negative Weight
	 */
	negative_weight?: number | string;
	/**
	 * Is Fatal
	 */
	is_fatal?: boolean;
	/**
	 * Llm Guidelines
	 */
	llm_guidelines?: string | null;
};

/**
 * MultipleChoiceOptionCreateSchema
 *
 * Schema for creating a MultipleChoiceOption.
 */
export type MultipleChoiceOptionCreateSchema = {
	/**
	 * Option
	 */
	option: string;
	/**
	 * Is Correct
	 */
	is_correct?: boolean;
	/**
	 * Order
	 */
	order?: number;
};

/**
 * MultipleChoiceQuestionCreateSchema
 *
 * Schema for creating a MultipleChoiceQuestion.
 */
export type MultipleChoiceQuestionCreateSchema = {
	/**
	 * Section Id
	 */
	section_id?: string | null;
	/**
	 * Question
	 */
	question: string;
	/**
	 * Is Mandatory
	 */
	is_mandatory?: boolean;
	/**
	 * Order
	 */
	order?: number;
	/**
	 * Positive Weight
	 */
	positive_weight?: number | string;
	/**
	 * Negative Weight
	 */
	negative_weight?: number | string;
	/**
	 * Is Fatal
	 */
	is_fatal?: boolean;
	/**
	 * Allow Multiple Answers
	 */
	allow_multiple_answers?: boolean;
	/**
	 * Shuffle Options
	 */
	shuffle_options?: boolean;
	/**
	 * Options
	 */
	options: Array<MultipleChoiceOptionCreateSchema>;
};

/**
 * OrganizationQuestionnaireSchema
 */
export type OrganizationQuestionnaireSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Events
	 */
	events?: Array<MinimalEventSchema>;
	/**
	 * Event Series
	 */
	event_series?: Array<EventSeriesRetrieveSchema>;
	/**
	 * Max Submission Age
	 */
	max_submission_age?: string | number | null;
	questionnaire_type: Types;
	questionnaire: QuestionnaireCreateSchema;
};

/**
 * QuestionnaireCreateSchema
 *
 * Schema for creating a new Questionnaire with its sections and questions.
 */
export type QuestionnaireCreateSchema = {
	/**
	 * Name
	 */
	name: string;
	status?: Status;
	/**
	 * Min Score
	 */
	min_score: number | string;
	/**
	 * Shuffle Questions
	 */
	shuffle_questions?: boolean;
	/**
	 * Shuffle Sections
	 */
	shuffle_sections?: boolean;
	evaluation_mode: EvaluationMode;
	/**
	 * Sections
	 */
	sections?: Array<SectionCreateSchema>;
	/**
	 * Multiplechoicequestion Questions
	 */
	multiplechoicequestion_questions?: Array<MultipleChoiceQuestionCreateSchema>;
	/**
	 * Freetextquestion Questions
	 */
	freetextquestion_questions?: Array<FreeTextQuestionCreateSchema>;
	/**
	 * Llm Guidelines
	 */
	llm_guidelines?: string | null;
	/**
	 * Can Retake After
	 */
	can_retake_after?: string | number | null;
};

/**
 * SectionCreateSchema
 *
 * Schema for creating a QuestionnaireSection.
 */
export type SectionCreateSchema = {
	/**
	 * Name
	 */
	name: string;
	/**
	 * Order
	 */
	order?: number;
	/**
	 * Multiplechoicequestion Questions
	 */
	multiplechoicequestion_questions?: Array<MultipleChoiceQuestionCreateSchema>;
	/**
	 * Freetextquestion Questions
	 */
	freetextquestion_questions?: Array<FreeTextQuestionCreateSchema>;
};

/**
 * OrganizationQuestionnaireCreateSchema
 *
 * Schema for creating OrganizationQuestionnaire with its underlying Questionnaire.
 *
 * Combines Questionnaire creation fields (name, sections, questions, etc.) with
 * OrganizationQuestionnaire wrapper fields (max_submission_age, questionnaire_type).
 */
export type OrganizationQuestionnaireCreateSchema = {
	/**
	 * Max Submission Age
	 */
	max_submission_age?: string | null;
	questionnaire_type?: Types;
	/**
	 * Name
	 */
	name: string;
	status?: Status;
	/**
	 * Min Score
	 */
	min_score: number | string;
	/**
	 * Shuffle Questions
	 */
	shuffle_questions?: boolean;
	/**
	 * Shuffle Sections
	 */
	shuffle_sections?: boolean;
	evaluation_mode: EvaluationMode;
	/**
	 * Sections
	 */
	sections?: Array<SectionCreateSchema>;
	/**
	 * Multiplechoicequestion Questions
	 */
	multiplechoicequestion_questions?: Array<MultipleChoiceQuestionCreateSchema>;
	/**
	 * Freetextquestion Questions
	 */
	freetextquestion_questions?: Array<FreeTextQuestionCreateSchema>;
	/**
	 * Llm Guidelines
	 */
	llm_guidelines?: string | null;
	/**
	 * Can Retake After
	 */
	can_retake_after?: string | number | null;
};

/**
 * OrganizationQuestionnaireUpdateSchema
 *
 * Schema for updating OrganizationQuestionnaire and its underlying Questionnaire.
 *
 * Includes fields from both OrganizationQuestionnaire (wrapper) and Questionnaire (the actual questionnaire).
 * All fields are optional to allow partial updates.
 */
export type OrganizationQuestionnaireUpdateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Min Score
	 */
	min_score?: number | string | null;
	/**
	 * Shuffle Questions
	 */
	shuffle_questions?: boolean | null;
	/**
	 * Shuffle Sections
	 */
	shuffle_sections?: boolean | null;
	evaluation_mode?: EvaluationMode | null;
	/**
	 * Llm Guidelines
	 */
	llm_guidelines?: string | null;
	/**
	 * Can Retake After
	 */
	can_retake_after?: string | null;
	/**
	 * Max Attempts
	 */
	max_attempts?: number;
	/**
	 * Max Submission Age
	 */
	max_submission_age?: string | null;
	questionnaire_type?: Types | null;
};

/**
 * SectionUpdateSchema
 *
 * Schema for updating a Section.
 */
export type SectionUpdateSchema = {
	/**
	 * Name
	 */
	name: string;
	/**
	 * Order
	 */
	order?: number;
	/**
	 * Multiplechoicequestion Questions
	 */
	multiplechoicequestion_questions?: Array<MultipleChoiceQuestionCreateSchema>;
	/**
	 * Freetextquestion Questions
	 */
	freetextquestion_questions?: Array<FreeTextQuestionCreateSchema>;
};

/**
 * MultipleChoiceQuestionUpdateSchema
 *
 * Schema for updating a MultipleChoiceQuestion.
 */
export type MultipleChoiceQuestionUpdateSchema = {
	/**
	 * Section Id
	 */
	section_id?: string | null;
	/**
	 * Question
	 */
	question: string;
	/**
	 * Is Mandatory
	 */
	is_mandatory?: boolean;
	/**
	 * Order
	 */
	order?: number;
	/**
	 * Positive Weight
	 */
	positive_weight?: number | string;
	/**
	 * Negative Weight
	 */
	negative_weight?: number | string;
	/**
	 * Is Fatal
	 */
	is_fatal?: boolean;
	/**
	 * Allow Multiple Answers
	 */
	allow_multiple_answers?: boolean;
	/**
	 * Shuffle Options
	 */
	shuffle_options?: boolean;
	/**
	 * Options
	 */
	options: Array<MultipleChoiceOptionCreateSchema>;
};

/**
 * MultipleChoiceOptionUpdateSchema
 *
 * Schema for updating a MultipleChoiceOption.
 */
export type MultipleChoiceOptionUpdateSchema = {
	/**
	 * Option
	 */
	option: string;
	/**
	 * Is Correct
	 */
	is_correct?: boolean;
	/**
	 * Order
	 */
	order?: number;
};

/**
 * FreeTextQuestionUpdateSchema
 *
 * Schema for updating a FreeTextQuestion.
 */
export type FreeTextQuestionUpdateSchema = {
	/**
	 * Section Id
	 */
	section_id?: string | null;
	/**
	 * Question
	 */
	question: string;
	/**
	 * Is Mandatory
	 */
	is_mandatory?: boolean;
	/**
	 * Order
	 */
	order?: number;
	/**
	 * Positive Weight
	 */
	positive_weight?: number | string;
	/**
	 * Negative Weight
	 */
	negative_weight?: number | string;
	/**
	 * Is Fatal
	 */
	is_fatal?: boolean;
	/**
	 * Llm Guidelines
	 */
	llm_guidelines?: string | null;
};

/**
 * SubmissionFilterSchema
 *
 * Filter schema for questionnaire submissions.
 */
export type SubmissionFilterSchema = {
	/**
	 * Evaluation Status
	 */
	evaluation_status?: string | null;
};

/**
 * PaginatedResponseSchema[SubmissionListItemSchema]
 */
export type PaginatedResponseSchemaSubmissionListItemSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<SubmissionListItemSchema>;
};

/**
 * SubmissionListItemSchema
 *
 * Schema for listing submissions for organization staff.
 */
export type SubmissionListItemSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * User Email
	 */
	user_email: string;
	/**
	 * User Name
	 */
	user_name: string;
	/**
	 * Questionnaire Name
	 */
	questionnaire_name: string;
	evaluation_status?: Status | null;
	/**
	 * Evaluation Score
	 */
	evaluation_score?: number | string | null;
	/**
	 * Status
	 *
	 * The status of the submission.
	 */
	status?: string;
	/**
	 * Submitted At
	 */
	submitted_at?: string | null;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * EvaluationResponseSchema
 *
 * Schema for evaluation response.
 */
export type EvaluationResponseSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Submission Id
	 */
	submission_id: string;
	status: Status;
	/**
	 * Score
	 */
	score: number | string | null;
	/**
	 * Comments
	 */
	comments: string | null;
	/**
	 * Evaluator Id
	 */
	evaluator_id: string | null;
	/**
	 * Created At
	 */
	created_at: string;
	/**
	 * Updated At
	 */
	updated_at: string;
};

/**
 * QuestionAnswerDetailSchema
 *
 * Schema for question and answer details.
 *
 * For multiple choice questions, answer_content is a list of dicts containing:
 * - option_id: UUID of the selected option
 * - option_text: Text of the selected option
 * - is_correct: Boolean indicating if this option is correct
 *
 * For free text questions, answer_content is a list with a single dict containing:
 * - answer: The free text answer string
 */
export type QuestionAnswerDetailSchema = {
	/**
	 * Question Id
	 */
	question_id: string;
	/**
	 * Question Text
	 */
	question_text: string;
	/**
	 * Question Type
	 */
	question_type: string;
	/**
	 * Answer Content
	 */
	answer_content: Array<{
		[key: string]: unknown;
	}>;
};

/**
 * SubmissionDetailSchema
 *
 * Schema for detailed view of a submission.
 */
export type SubmissionDetailSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * User Email
	 */
	user_email: string;
	/**
	 * User Name
	 */
	user_name: string;
	questionnaire: QuestionnaireInListSchema;
	status: QuestionnairesModelsQuestionnaireSubmissionStatus;
	/**
	 * Submitted At
	 */
	submitted_at: string | null;
	evaluation?: EvaluationResponseSchema | null;
	/**
	 * Answers
	 */
	answers: Array<QuestionAnswerDetailSchema>;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * Status
 */
export type QuestionnairesModelsQuestionnaireStatus = 'draft' | 'ready' | 'published';

/**
 * EvaluationCreateSchema
 *
 * Schema for creating/updating an evaluation.
 */
export type EvaluationCreateSchema = {
	status: Status;
	/**
	 * Score
	 */
	score?: number | string | null;
	/**
	 * Comments
	 */
	comments?: string | null;
};

/**
 * EventAssignmentSchema
 */
export type EventAssignmentSchema = {
	/**
	 * Event Ids
	 */
	event_ids: Array<string>;
};

/**
 * EventSeriesAssignmentSchema
 */
export type EventSeriesAssignmentSchema = {
	/**
	 * Event Series Ids
	 */
	event_series_ids: Array<string>;
};

/**
 * GeneralUserPreferencesSchema
 */
export type GeneralUserPreferencesSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	city?: CitySchema | null;
};

/**
 * VisibilityPreference
 */
export type VisibilityPreference = 'always' | 'never' | 'to_members' | 'to_invitees' | 'to_both';

/**
 * GeneralUserPreferencesUpdateSchema
 */
export type GeneralUserPreferencesUpdateSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * City Id
	 */
	city_id?: number | null;
};

/**
 * UserOrganizationPreferencesSchema
 */
export type UserOrganizationPreferencesSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * Is Subscribed
	 */
	is_subscribed: boolean;
	/**
	 * Notify On New Events
	 */
	notify_on_new_events: boolean;
};

/**
 * UserOrganizationPreferencesUpdateSchema
 */
export type UserOrganizationPreferencesUpdateSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * Is Subscribed
	 */
	is_subscribed?: boolean;
	/**
	 * Notify On New Events
	 */
	notify_on_new_events?: boolean;
};

/**
 * UserEventSeriesPreferencesSchema
 */
export type UserEventSeriesPreferencesSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * Is Subscribed
	 */
	is_subscribed: boolean;
	/**
	 * Notify On New Events
	 */
	notify_on_new_events: boolean;
};

/**
 * UserEventSeriesPreferencesUpdateSchema
 */
export type UserEventSeriesPreferencesUpdateSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * Is Subscribed
	 */
	is_subscribed?: boolean;
	/**
	 * Notify On New Events
	 */
	notify_on_new_events?: boolean;
};

/**
 * UserEventPreferencesSchema
 */
export type UserEventPreferencesSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * Is Subscribed
	 */
	is_subscribed: boolean;
	/**
	 * Notify On Potluck Updates
	 */
	notify_on_potluck_updates: boolean;
};

/**
 * UserEventPreferencesUpdateSchema
 */
export type UserEventPreferencesUpdateSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * Is Subscribed
	 */
	is_subscribed?: boolean;
	/**
	 * Notify On Potluck Updates
	 */
	notify_on_potluck_updates?: boolean;
};

/**
 * PaginatedResponseSchema[TagSchema]
 */
export type PaginatedResponseSchemaTagSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<TagSchema>;
};

/**
 * CityFilterSchema
 */
export type CityFilterSchema = {
	/**
	 * Country
	 */
	country?: string | null;
};

/**
 * PaginatedResponseSchema[CitySchema]
 */
export type PaginatedResponseSchemaCitySchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<CitySchema>;
};

export type ApiApiVersionData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/version';
};

export type ApiApiVersionResponses = {
	/**
	 * OK
	 */
	200: VersionResponse;
};

export type ApiApiVersionResponse = ApiApiVersionResponses[keyof ApiApiVersionResponses];

export type ApiApiHealthcheckData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/healthcheck';
};

export type ApiApiHealthcheckResponses = {
	/**
	 * OK
	 */
	200: ResponseOk;
};

export type ApiApiHealthcheckResponse =
	ApiApiHealthcheckResponses[keyof ApiApiHealthcheckResponses];

export type AuthObtainToken3C660894Data = {
	body: TokenObtainPairInputSchema;
	path?: never;
	query?: never;
	url: '/api/auth/token/pair';
};

export type AuthObtainToken3C660894Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: TokenObtainPairOutputSchema | TempToken;
};

export type AuthObtainToken3C660894Response =
	AuthObtainToken3C660894Responses[keyof AuthObtainToken3C660894Responses];

export type TokenRefreshData = {
	body: TokenRefreshInputSchema;
	path?: never;
	query?: never;
	url: '/api/auth/refresh';
};

export type TokenRefreshResponses = {
	/**
	 * OK
	 */
	200: TokenRefreshOutputSchema;
};

export type TokenRefreshResponse = TokenRefreshResponses[keyof TokenRefreshResponses];

export type AuthDemoObtainToken5Bd1D0C6Data = {
	body: DemoLoginSchema;
	path?: never;
	query?: never;
	url: '/api/auth/demo/token/pair';
};

export type AuthDemoObtainToken5Bd1D0C6Responses = {
	/**
	 * OK
	 */
	200: TokenObtainPairOutputSchema;
};

export type AuthDemoObtainToken5Bd1D0C6Response =
	AuthDemoObtainToken5Bd1D0C6Responses[keyof AuthDemoObtainToken5Bd1D0C6Responses];

export type AuthObtainTokenWithOtpB97019EdData = {
	body: TempTokenWithTotp;
	path?: never;
	query?: never;
	url: '/api/auth/token/pair/otp';
};

export type AuthObtainTokenWithOtpB97019EdResponses = {
	/**
	 * OK
	 */
	200: TokenObtainPairOutputSchema;
};

export type AuthObtainTokenWithOtpB97019EdResponse =
	AuthObtainTokenWithOtpB97019EdResponses[keyof AuthObtainTokenWithOtpB97019EdResponses];

export type AuthGoogleLogin2C1B6Da0Data = {
	body: GoogleIdTokenSchema;
	path?: never;
	query?: never;
	url: '/api/auth/google/login';
};

export type AuthGoogleLogin2C1B6Da0Responses = {
	/**
	 * OK
	 */
	200: TokenObtainPairOutputSchema;
};

export type AuthGoogleLogin2C1B6Da0Response =
	AuthGoogleLogin2C1B6Da0Responses[keyof AuthGoogleLogin2C1B6Da0Responses];

export type OtpSetupOtpB7F9A9E0Data = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/otp/setup';
};

export type OtpSetupOtpB7F9A9E0Responses = {
	/**
	 * OK
	 */
	200: TotpProvisioningUriSchema;
};

export type OtpSetupOtpB7F9A9E0Response =
	OtpSetupOtpB7F9A9E0Responses[keyof OtpSetupOtpB7F9A9E0Responses];

export type OtpEnableOtpF765135dData = {
	body: OtpVerifySchema;
	path?: never;
	query?: never;
	url: '/api/otp/verify';
};

export type OtpEnableOtpF765135dResponses = {
	/**
	 * OK
	 */
	200: RevelUserSchema;
};

export type OtpEnableOtpF765135dResponse =
	OtpEnableOtpF765135dResponses[keyof OtpEnableOtpF765135dResponses];

export type OtpDisableOtp2F790916Data = {
	body: OtpVerifySchema;
	path?: never;
	query?: never;
	url: '/api/otp/disable';
};

export type OtpDisableOtp2F790916Responses = {
	/**
	 * OK
	 */
	200: RevelUserSchema;
};

export type OtpDisableOtp2F790916Response =
	OtpDisableOtp2F790916Responses[keyof OtpDisableOtp2F790916Responses];

export type AccountExportData6Fadb4C2Data = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/account/export-data';
};

export type AccountExportData6Fadb4C2Responses = {
	/**
	 * OK
	 */
	200: ResponseMessage;
};

export type AccountExportData6Fadb4C2Response =
	AccountExportData6Fadb4C2Responses[keyof AccountExportData6Fadb4C2Responses];

export type AccountMeE287002fData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/account/me';
};

export type AccountMeE287002fResponses = {
	/**
	 * OK
	 */
	200: RevelUserSchema;
};

export type AccountMeE287002fResponse =
	AccountMeE287002fResponses[keyof AccountMeE287002fResponses];

export type AccountUpdateProfile0F278F51Data = {
	body: ProfileUpdateSchema;
	path?: never;
	query?: never;
	url: '/api/account/me';
};

export type AccountUpdateProfile0F278F51Responses = {
	/**
	 * OK
	 */
	200: RevelUserSchema;
};

export type AccountUpdateProfile0F278F51Response =
	AccountUpdateProfile0F278F51Responses[keyof AccountUpdateProfile0F278F51Responses];

export type AccountRegister98411793Data = {
	body: RegisterUserSchema;
	path?: never;
	query?: never;
	url: '/api/account/register';
};

export type AccountRegister98411793Responses = {
	/**
	 * Created
	 */
	201: RevelUserSchema;
};

export type AccountRegister98411793Response =
	AccountRegister98411793Responses[keyof AccountRegister98411793Responses];

export type AccountVerifyEmail478Cf09aData = {
	body: VerifyEmailSchema;
	path?: never;
	query?: never;
	url: '/api/account/verify';
};

export type AccountVerifyEmail478Cf09aResponses = {
	/**
	 * OK
	 */
	200: VerifyEmailResponseSchema;
};

export type AccountVerifyEmail478Cf09aResponse =
	AccountVerifyEmail478Cf09aResponses[keyof AccountVerifyEmail478Cf09aResponses];

export type AccountResendVerificationEmailFc8F0150Data = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/account/verify-resend';
};

export type AccountResendVerificationEmailFc8F0150Errors = {
	/**
	 * Bad Request
	 */
	400: ResponseMessage;
};

export type AccountResendVerificationEmailFc8F0150Error =
	AccountResendVerificationEmailFc8F0150Errors[keyof AccountResendVerificationEmailFc8F0150Errors];

export type AccountResendVerificationEmailFc8F0150Responses = {
	/**
	 * OK
	 */
	200: ResponseMessage;
};

export type AccountResendVerificationEmailFc8F0150Response =
	AccountResendVerificationEmailFc8F0150Responses[keyof AccountResendVerificationEmailFc8F0150Responses];

export type AccountDeleteAccountRequest4E1C015cData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/account/delete-request';
};

export type AccountDeleteAccountRequest4E1C015cResponses = {
	/**
	 * OK
	 */
	200: ResponseMessage;
};

export type AccountDeleteAccountRequest4E1C015cResponse =
	AccountDeleteAccountRequest4E1C015cResponses[keyof AccountDeleteAccountRequest4E1C015cResponses];

export type AccountDeleteAccountConfirm106Ab6A0Data = {
	body: DeleteAccountConfirmSchema;
	path?: never;
	query?: never;
	url: '/api/account/delete-confirm';
};

export type AccountDeleteAccountConfirm106Ab6A0Responses = {
	/**
	 * OK
	 */
	200: ResponseMessage;
};

export type AccountDeleteAccountConfirm106Ab6A0Response =
	AccountDeleteAccountConfirm106Ab6A0Responses[keyof AccountDeleteAccountConfirm106Ab6A0Responses];

export type AccountResetPasswordRequest75Efa090Data = {
	body: PasswordResetRequestSchema;
	path?: never;
	query?: never;
	url: '/api/account/password/reset-request';
};

export type AccountResetPasswordRequest75Efa090Responses = {
	/**
	 * OK
	 */
	200: ResponseMessage;
};

export type AccountResetPasswordRequest75Efa090Response =
	AccountResetPasswordRequest75Efa090Responses[keyof AccountResetPasswordRequest75Efa090Responses];

export type AccountResetPassword5D780D1eData = {
	body: PasswordResetSchema;
	path?: never;
	query?: never;
	url: '/api/account/password/reset';
};

export type AccountResetPassword5D780D1eResponses = {
	/**
	 * OK
	 */
	200: ResponseMessage;
};

export type AccountResetPassword5D780D1eResponse =
	AccountResetPassword5D780D1eResponses[keyof AccountResetPassword5D780D1eResponses];

export type DashboardDashboardOrganizationsA4541683Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Owner
		 */
		owner?: boolean;
		/**
		 * Staff
		 */
		staff?: boolean;
		/**
		 * Member
		 */
		member?: boolean;
		/**
		 * Subscriber
		 */
		subscriber?: boolean;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/dashboard/organizations';
};

export type DashboardDashboardOrganizationsA4541683Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationRetrieveSchema;
};

export type DashboardDashboardOrganizationsA4541683Response =
	DashboardDashboardOrganizationsA4541683Responses[keyof DashboardDashboardOrganizationsA4541683Responses];

export type DashboardDashboardEvents5D89647aData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Owner
		 */
		owner?: boolean;
		/**
		 * Staff
		 */
		staff?: boolean;
		/**
		 * Member
		 */
		member?: boolean;
		/**
		 * Rsvp Yes
		 */
		rsvp_yes?: boolean;
		/**
		 * Rsvp No
		 */
		rsvp_no?: boolean;
		/**
		 * Rsvp Maybe
		 */
		rsvp_maybe?: boolean;
		/**
		 * Got Ticket
		 */
		got_ticket?: boolean;
		/**
		 * Got Invitation
		 */
		got_invitation?: boolean;
		/**
		 * Subscriber
		 */
		subscriber?: boolean;
		/**
		 * Order By
		 */
		order_by?: 'start' | '-start';
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/dashboard/events';
};

export type DashboardDashboardEvents5D89647aResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventInListSchema;
};

export type DashboardDashboardEvents5D89647aResponse =
	DashboardDashboardEvents5D89647aResponses[keyof DashboardDashboardEvents5D89647aResponses];

export type DashboardDashboardEventSeries95D98De3Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Owner
		 */
		owner?: boolean;
		/**
		 * Staff
		 */
		staff?: boolean;
		/**
		 * Member
		 */
		member?: boolean;
		/**
		 * Subscriber
		 */
		subscriber?: boolean;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/dashboard/event_series';
};

export type DashboardDashboardEventSeries95D98De3Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventSeriesRetrieveSchema;
};

export type DashboardDashboardEventSeries95D98De3Response =
	DashboardDashboardEventSeries95D98De3Responses[keyof DashboardDashboardEventSeries95D98De3Responses];

export type DashboardDashboardInvitations692Acf8eData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/dashboard/invitations';
};

export type DashboardDashboardInvitations692Acf8eResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaInvitationSchema;
};

export type DashboardDashboardInvitations692Acf8eResponse =
	DashboardDashboardInvitations692Acf8eResponses[keyof DashboardDashboardInvitations692Acf8eResponses];

export type OrganizationListOrganizationsF5E53095Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Country
		 */
		country?: string | null;
		/**
		 * City Id
		 */
		city_id?: number | null;
		/**
		 * Tags
		 */
		tags?: Array<string> | null;
		/**
		 * Order By
		 */
		order_by?: 'name' | '-name' | 'distance';
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organizations/';
};

export type OrganizationListOrganizationsF5E53095Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationRetrieveSchema;
};

export type OrganizationListOrganizationsF5E53095Response =
	OrganizationListOrganizationsF5E53095Responses[keyof OrganizationListOrganizationsF5E53095Responses];

export type OrganizationGetOrganization03E42Cd8Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organizations/{slug}';
};

export type OrganizationGetOrganization03E42Cd8Responses = {
	/**
	 * OK
	 */
	200: OrganizationRetrieveSchema;
};

export type OrganizationGetOrganization03E42Cd8Response =
	OrganizationGetOrganization03E42Cd8Responses[keyof OrganizationGetOrganization03E42Cd8Responses];

export type OrganizationListResources05Cba1FaData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		resource_type?: ResourceTypes | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organizations/{slug}/resources';
};

export type OrganizationListResources05Cba1FaResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaAdditionalResourceSchema;
};

export type OrganizationListResources05Cba1FaResponse =
	OrganizationListResources05Cba1FaResponses[keyof OrganizationListResources05Cba1FaResponses];

export type OrganizationCreateMembershipRequestE2B0Db8dData = {
	body: OrganizationMembershipRequestCreateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organizations/{slug}/membership-requests';
};

export type OrganizationCreateMembershipRequestE2B0Db8dResponses = {
	/**
	 * OK
	 */
	200: OrganizationMembershipRequestRetrieve;
};

export type OrganizationCreateMembershipRequestE2B0Db8dResponse =
	OrganizationCreateMembershipRequestE2B0Db8dResponses[keyof OrganizationCreateMembershipRequestE2B0Db8dResponses];

export type OrganizationClaimInvitation86De8Cf7Data = {
	body?: never;
	path: {
		/**
		 * Token
		 */
		token: string;
	};
	query?: never;
	url: '/api/organizations/claim-invitation/{token}';
};

export type OrganizationClaimInvitation86De8Cf7Errors = {
	/**
	 * Bad Request
	 */
	400: ResponseMessage;
};

export type OrganizationClaimInvitation86De8Cf7Error =
	OrganizationClaimInvitation86De8Cf7Errors[keyof OrganizationClaimInvitation86De8Cf7Errors];

export type OrganizationClaimInvitation86De8Cf7Responses = {
	/**
	 * OK
	 */
	200: OrganizationRetrieveSchema;
};

export type OrganizationClaimInvitation86De8Cf7Response =
	OrganizationClaimInvitation86De8Cf7Responses[keyof OrganizationClaimInvitation86De8Cf7Responses];

export type OrganizationadminGetOrganization4Aa532E3Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}';
};

export type OrganizationadminGetOrganization4Aa532E3Responses = {
	/**
	 * OK
	 */
	200: OrganizationAdminDetailSchema;
};

export type OrganizationadminGetOrganization4Aa532E3Response =
	OrganizationadminGetOrganization4Aa532E3Responses[keyof OrganizationadminGetOrganization4Aa532E3Responses];

export type OrganizationadminUpdateOrganization2Aa51848Data = {
	body: OrganizationEditSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}';
};

export type OrganizationadminUpdateOrganization2Aa51848Responses = {
	/**
	 * OK
	 */
	200: OrganizationRetrieveSchema;
};

export type OrganizationadminUpdateOrganization2Aa51848Response =
	OrganizationadminUpdateOrganization2Aa51848Responses[keyof OrganizationadminUpdateOrganization2Aa51848Responses];

export type OrganizationadminStripeConnectF522D8E7Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/stripe/connect';
};

export type OrganizationadminStripeConnectF522D8E7Responses = {
	/**
	 * OK
	 */
	200: StripeOnboardingLinkSchema;
};

export type OrganizationadminStripeConnectF522D8E7Response =
	OrganizationadminStripeConnectF522D8E7Responses[keyof OrganizationadminStripeConnectF522D8E7Responses];

export type OrganizationadminStripeAccountVerifyE877C7DeData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/stripe/account/verify';
};

export type OrganizationadminStripeAccountVerifyE877C7DeResponses = {
	/**
	 * OK
	 */
	200: StripeAccountStatusSchema;
};

export type OrganizationadminStripeAccountVerifyE877C7DeResponse =
	OrganizationadminStripeAccountVerifyE877C7DeResponses[keyof OrganizationadminStripeAccountVerifyE877C7DeResponses];

export type OrganizationadminUploadLogo15C70Cc5Data = {
	/**
	 * FileParams
	 */
	body: {
		/**
		 * Logo
		 */
		logo: Blob | File;
	};
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/upload-logo';
};

export type OrganizationadminUploadLogo15C70Cc5Responses = {
	/**
	 * OK
	 */
	200: OrganizationRetrieveSchema;
};

export type OrganizationadminUploadLogo15C70Cc5Response =
	OrganizationadminUploadLogo15C70Cc5Responses[keyof OrganizationadminUploadLogo15C70Cc5Responses];

export type OrganizationadminUploadCoverArt41555190Data = {
	/**
	 * FileParams
	 */
	body: {
		/**
		 * Cover Art
		 */
		cover_art: Blob | File;
	};
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/upload-cover-art';
};

export type OrganizationadminUploadCoverArt41555190Responses = {
	/**
	 * OK
	 */
	200: OrganizationRetrieveSchema;
};

export type OrganizationadminUploadCoverArt41555190Response =
	OrganizationadminUploadCoverArt41555190Responses[keyof OrganizationadminUploadCoverArt41555190Responses];

export type OrganizationadminDeleteLogo1030F9C5Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/delete-logo';
};

export type OrganizationadminDeleteLogo1030F9C5Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminDeleteLogo1030F9C5Response =
	OrganizationadminDeleteLogo1030F9C5Responses[keyof OrganizationadminDeleteLogo1030F9C5Responses];

export type OrganizationadminDeleteCoverArt8E12F49aData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/delete-cover-art';
};

export type OrganizationadminDeleteCoverArt8E12F49aResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminDeleteCoverArt8E12F49aResponse =
	OrganizationadminDeleteCoverArt8E12F49aResponses[keyof OrganizationadminDeleteCoverArt8E12F49aResponses];

export type OrganizationadminCreateEventSeries762D8BaaData = {
	body: EventSeriesEditSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/create-event-series';
};

export type OrganizationadminCreateEventSeries762D8BaaErrors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type OrganizationadminCreateEventSeries762D8BaaError =
	OrganizationadminCreateEventSeries762D8BaaErrors[keyof OrganizationadminCreateEventSeries762D8BaaErrors];

export type OrganizationadminCreateEventSeries762D8BaaResponses = {
	/**
	 * OK
	 */
	200: EventSeriesRetrieveSchema;
};

export type OrganizationadminCreateEventSeries762D8BaaResponse =
	OrganizationadminCreateEventSeries762D8BaaResponses[keyof OrganizationadminCreateEventSeries762D8BaaResponses];

export type OrganizationadminCreateEventF9777094Data = {
	body: EventCreateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/create-event';
};

export type OrganizationadminCreateEventF9777094Errors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type OrganizationadminCreateEventF9777094Error =
	OrganizationadminCreateEventF9777094Errors[keyof OrganizationadminCreateEventF9777094Errors];

export type OrganizationadminCreateEventF9777094Responses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type OrganizationadminCreateEventF9777094Response =
	OrganizationadminCreateEventF9777094Responses[keyof OrganizationadminCreateEventF9777094Responses];

export type OrganizationadminListOrganizationTokensD9053E63Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		/**
		 * Is Active
		 */
		is_active?: boolean | null;
		/**
		 * Organization Id
		 */
		organization_id?: string | null;
		/**
		 * Membership Pass
		 */
		membership_pass?: boolean | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organization-admin/{slug}/tokens';
};

export type OrganizationadminListOrganizationTokensD9053E63Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationTokenSchema;
};

export type OrganizationadminListOrganizationTokensD9053E63Response =
	OrganizationadminListOrganizationTokensD9053E63Responses[keyof OrganizationadminListOrganizationTokensD9053E63Responses];

export type OrganizationadminCreateOrganizationToken9626AaddData = {
	body: OrganizationTokenCreateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/token';
};

export type OrganizationadminCreateOrganizationToken9626AaddResponses = {
	/**
	 * OK
	 */
	200: OrganizationTokenSchema;
};

export type OrganizationadminCreateOrganizationToken9626AaddResponse =
	OrganizationadminCreateOrganizationToken9626AaddResponses[keyof OrganizationadminCreateOrganizationToken9626AaddResponses];

export type OrganizationadminDeleteOrganizationToken7A17FacbData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Token Id
		 */
		token_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/token/{token_id}';
};

export type OrganizationadminDeleteOrganizationToken7A17FacbResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminDeleteOrganizationToken7A17FacbResponse =
	OrganizationadminDeleteOrganizationToken7A17FacbResponses[keyof OrganizationadminDeleteOrganizationToken7A17FacbResponses];

export type OrganizationadminUpdateOrganizationToken219718AbData = {
	body: OrganizationTokenUpdateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Token Id
		 */
		token_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/token/{token_id}';
};

export type OrganizationadminUpdateOrganizationToken219718AbResponses = {
	/**
	 * OK
	 */
	200: OrganizationTokenSchema;
};

export type OrganizationadminUpdateOrganizationToken219718AbResponse =
	OrganizationadminUpdateOrganizationToken219718AbResponses[keyof OrganizationadminUpdateOrganizationToken219718AbResponses];

export type OrganizationadminListMembershipRequestsC72951CfData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organization-admin/{slug}/membership-requests';
};

export type OrganizationadminListMembershipRequestsC72951CfResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationMembershipRequestRetrieve;
};

export type OrganizationadminListMembershipRequestsC72951CfResponse =
	OrganizationadminListMembershipRequestsC72951CfResponses[keyof OrganizationadminListMembershipRequestsC72951CfResponses];

export type OrganizationadminApproveMembershipRequestEb696457Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Request Id
		 */
		request_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/membership-requests/{request_id}/approve';
};

export type OrganizationadminApproveMembershipRequestEb696457Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminApproveMembershipRequestEb696457Response =
	OrganizationadminApproveMembershipRequestEb696457Responses[keyof OrganizationadminApproveMembershipRequestEb696457Responses];

export type OrganizationadminRejectMembershipRequest62871CedData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Request Id
		 */
		request_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/membership-requests/{request_id}/reject';
};

export type OrganizationadminRejectMembershipRequest62871CedResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminRejectMembershipRequest62871CedResponse =
	OrganizationadminRejectMembershipRequest62871CedResponses[keyof OrganizationadminRejectMembershipRequest62871CedResponses];

export type OrganizationadminListResourcesB6B0E74dData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		resource_type?: ResourceTypes | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organization-admin/{slug}/resources';
};

export type OrganizationadminListResourcesB6B0E74dResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaAdditionalResourceSchema;
};

export type OrganizationadminListResourcesB6B0E74dResponse =
	OrganizationadminListResourcesB6B0E74dResponses[keyof OrganizationadminListResourcesB6B0E74dResponses];

export type OrganizationadminCreateResourceE3116F59Data = {
	/**
	 * FormParams
	 */
	body: {
		/**
		 * Name
		 */
		name?: string | null;
		/**
		 * Description
		 */
		description?: string | null;
		/**
		 * ResourceTypes
		 */
		resource_type: 'file' | 'link' | 'text';
		/**
		 * Visibility
		 */
		visibility?: 'public' | 'private' | 'members-only' | 'staff-only';
		/**
		 * Display On Organization Page
		 */
		display_on_organization_page?: boolean;
		/**
		 * Link
		 */
		link?: string | null;
		/**
		 * Text
		 */
		text?: string | null;
		/**
		 * Event Series Ids
		 */
		event_series_ids?: Array<string>;
		/**
		 * Event Ids
		 */
		event_ids?: Array<string>;
	};
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/resources';
};

export type OrganizationadminCreateResourceE3116F59Responses = {
	/**
	 * OK
	 */
	200: AdditionalResourceSchema;
};

export type OrganizationadminCreateResourceE3116F59Response =
	OrganizationadminCreateResourceE3116F59Responses[keyof OrganizationadminCreateResourceE3116F59Responses];

export type OrganizationadminDeleteResource66233C21Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Resource Id
		 */
		resource_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/resources/{resource_id}';
};

export type OrganizationadminDeleteResource66233C21Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminDeleteResource66233C21Response =
	OrganizationadminDeleteResource66233C21Responses[keyof OrganizationadminDeleteResource66233C21Responses];

export type OrganizationadminGetResourceF5295Cc1Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Resource Id
		 */
		resource_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/resources/{resource_id}';
};

export type OrganizationadminGetResourceF5295Cc1Responses = {
	/**
	 * OK
	 */
	200: AdditionalResourceSchema;
};

export type OrganizationadminGetResourceF5295Cc1Response =
	OrganizationadminGetResourceF5295Cc1Responses[keyof OrganizationadminGetResourceF5295Cc1Responses];

export type OrganizationadminUpdateResourceCdefdc44Data = {
	body: AdditionalResourceUpdateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Resource Id
		 */
		resource_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/resources/{resource_id}';
};

export type OrganizationadminUpdateResourceCdefdc44Responses = {
	/**
	 * OK
	 */
	200: AdditionalResourceSchema;
};

export type OrganizationadminUpdateResourceCdefdc44Response =
	OrganizationadminUpdateResourceCdefdc44Responses[keyof OrganizationadminUpdateResourceCdefdc44Responses];

export type OrganizationadminListMembers570C7485Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organization-admin/{slug}/members';
};

export type OrganizationadminListMembers570C7485Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationMemberSchema;
};

export type OrganizationadminListMembers570C7485Response =
	OrganizationadminListMembers570C7485Responses[keyof OrganizationadminListMembers570C7485Responses];

export type OrganizationadminRemoveMember026Ba094Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * User Id
		 */
		user_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/members/{user_id}';
};

export type OrganizationadminRemoveMember026Ba094Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminRemoveMember026Ba094Response =
	OrganizationadminRemoveMember026Ba094Responses[keyof OrganizationadminRemoveMember026Ba094Responses];

export type OrganizationadminListStaff8802E8FcData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organization-admin/{slug}/staff';
};

export type OrganizationadminListStaff8802E8FcResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationStaffSchema;
};

export type OrganizationadminListStaff8802E8FcResponse =
	OrganizationadminListStaff8802E8FcResponses[keyof OrganizationadminListStaff8802E8FcResponses];

export type OrganizationadminRemoveStaffDc6A4408Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * User Id
		 */
		user_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/staff/{user_id}';
};

export type OrganizationadminRemoveStaffDc6A4408Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminRemoveStaffDc6A4408Response =
	OrganizationadminRemoveStaffDc6A4408Responses[keyof OrganizationadminRemoveStaffDc6A4408Responses];

export type OrganizationadminAddStaff58F8201eData = {
	body?: PermissionsSchema | null;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * User Id
		 */
		user_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/staff/{user_id}';
};

export type OrganizationadminAddStaff58F8201eResponses = {
	/**
	 * Created
	 */
	201: OrganizationStaffSchema;
};

export type OrganizationadminAddStaff58F8201eResponse =
	OrganizationadminAddStaff58F8201eResponses[keyof OrganizationadminAddStaff58F8201eResponses];

export type OrganizationadminUpdateStaffPermissions69Ef704dData = {
	body: PermissionsSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * User Id
		 */
		user_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/staff/{user_id}/permissions';
};

export type OrganizationadminUpdateStaffPermissions69Ef704dResponses = {
	/**
	 * OK
	 */
	200: OrganizationStaffSchema;
};

export type OrganizationadminUpdateStaffPermissions69Ef704dResponse =
	OrganizationadminUpdateStaffPermissions69Ef704dResponses[keyof OrganizationadminUpdateStaffPermissions69Ef704dResponses];

export type OrganizationadminClearTags33450B2eData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/tags';
};

export type OrganizationadminClearTags33450B2eResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminClearTags33450B2eResponse =
	OrganizationadminClearTags33450B2eResponses[keyof OrganizationadminClearTags33450B2eResponses];

export type OrganizationadminAddTags5Ba13865Data = {
	body: TagUpdateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/tags';
};

export type OrganizationadminAddTags5Ba13865Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TagSchema>;
};

export type OrganizationadminAddTags5Ba13865Response =
	OrganizationadminAddTags5Ba13865Responses[keyof OrganizationadminAddTags5Ba13865Responses];

export type OrganizationadminRemoveTags3Ff1E345Data = {
	body: TagUpdateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/tags/remove';
};

export type OrganizationadminRemoveTags3Ff1E345Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TagSchema>;
};

export type OrganizationadminRemoveTags3Ff1E345Response =
	OrganizationadminRemoveTags3Ff1E345Responses[keyof OrganizationadminRemoveTags3Ff1E345Responses];

export type EventListEventsF4A8D067Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Country
		 */
		country?: string | null;
		/**
		 * City Id
		 */
		city_id?: number | null;
		/**
		 * Organization
		 */
		organization?: string | null;
		event_type?: Types | null;
		visibility?: Visibility | null;
		/**
		 * Event Series
		 */
		event_series?: string | null;
		/**
		 * Next Events
		 */
		next_events?: boolean | null;
		/**
		 * Past Events
		 */
		past_events?: boolean | null;
		status?: Status | null;
		/**
		 * Tags
		 */
		tags?: Array<string> | null;
		/**
		 * Order By
		 */
		order_by?: 'start' | '-start' | 'distance';
		/**
		 * Include Past
		 */
		include_past?: boolean;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/events/';
};

export type EventListEventsF4A8D067Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventInListSchema;
};

export type EventListEventsF4A8D067Response =
	EventListEventsF4A8D067Responses[keyof EventListEventsF4A8D067Responses];

export type EventClaimInvitation05Eb2Dc1Data = {
	body?: never;
	path: {
		/**
		 * Token
		 */
		token: string;
	};
	query?: never;
	url: '/api/events/claim-invitation/{token}';
};

export type EventClaimInvitation05Eb2Dc1Errors = {
	/**
	 * Bad Request
	 */
	400: ResponseMessage;
};

export type EventClaimInvitation05Eb2Dc1Error =
	EventClaimInvitation05Eb2Dc1Errors[keyof EventClaimInvitation05Eb2Dc1Errors];

export type EventClaimInvitation05Eb2Dc1Responses = {
	/**
	 * OK
	 */
	200: MinimalEventSchema;
};

export type EventClaimInvitation05Eb2Dc1Response =
	EventClaimInvitation05Eb2Dc1Responses[keyof EventClaimInvitation05Eb2Dc1Responses];

export type EventGetEventAttendees0266DbcaData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/events/{event_id}/attendee-list';
};

export type EventGetEventAttendees0266DbcaResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaMinimalRevelUserSchema;
};

export type EventGetEventAttendees0266DbcaResponse =
	EventGetEventAttendees0266DbcaResponses[keyof EventGetEventAttendees0266DbcaResponses];

export type EventGetMyEventStatus4A59E257Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/my-status';
};

export type EventGetMyEventStatus4A59E257Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: EventRsvpSchema | EventTicketSchema | EventUserEligibility;
};

export type EventGetMyEventStatus4A59E257Response =
	EventGetMyEventStatus4A59E257Responses[keyof EventGetMyEventStatus4A59E257Responses];

export type EventRequestInvitationC0664Ed0Data = {
	body: EventInvitationRequestCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/request-invitation';
};

export type EventRequestInvitationC0664Ed0Errors = {
	/**
	 * Bad Request
	 */
	400: ResponseMessage;
};

export type EventRequestInvitationC0664Ed0Error =
	EventRequestInvitationC0664Ed0Errors[keyof EventRequestInvitationC0664Ed0Errors];

export type EventRequestInvitationC0664Ed0Responses = {
	/**
	 * Created
	 */
	201: EventInvitationRequestSchema;
};

export type EventRequestInvitationC0664Ed0Response =
	EventRequestInvitationC0664Ed0Responses[keyof EventRequestInvitationC0664Ed0Responses];

export type EventListResourcesDc9Af5DcData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		resource_type?: ResourceTypes | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/events/{event_id}/resources';
};

export type EventListResourcesDc9Af5DcResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaAdditionalResourceSchema;
};

export type EventListResourcesDc9Af5DcResponse =
	EventListResourcesDc9Af5DcResponses[keyof EventListResourcesDc9Af5DcResponses];

export type EventDeleteInvitationRequest540551A8Data = {
	body?: never;
	path: {
		/**
		 * Request Id
		 */
		request_id: string;
	};
	query?: never;
	url: '/api/events/invitation-request/{request_id}';
};

export type EventDeleteInvitationRequest540551A8Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventDeleteInvitationRequest540551A8Response =
	EventDeleteInvitationRequest540551A8Responses[keyof EventDeleteInvitationRequest540551A8Responses];

export type EventListUserInvitationRequestsBed9Bd45Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Event Id
		 */
		event_id?: string | null;
		/**
		 * Status
		 */
		status?: 'pending' | 'approved' | 'rejected';
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/events/me/pending_invitation_requests';
};

export type EventListUserInvitationRequestsBed9Bd45Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventInvitationRequestSchema;
};

export type EventListUserInvitationRequestsBed9Bd45Response =
	EventListUserInvitationRequestsBed9Bd45Responses[keyof EventListUserInvitationRequestsBed9Bd45Responses];

export type EventGetEventBySlugs30F55943Data = {
	body?: never;
	path: {
		/**
		 * Org Slug
		 */
		org_slug: string;
		/**
		 * Event Slug
		 */
		event_slug: string;
	};
	query?: never;
	url: '/api/events/{org_slug}/{event_slug}';
};

export type EventGetEventBySlugs30F55943Responses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type EventGetEventBySlugs30F55943Response =
	EventGetEventBySlugs30F55943Responses[keyof EventGetEventBySlugs30F55943Responses];

export type EventGetEvent3A3Ee51dData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}';
};

export type EventGetEvent3A3Ee51dResponses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type EventGetEvent3A3Ee51dResponse =
	EventGetEvent3A3Ee51dResponses[keyof EventGetEvent3A3Ee51dResponses];

export type EventRsvpEventE780E414Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Status
		 */
		answer: 'yes' | 'no' | 'maybe';
	};
	query?: never;
	url: '/api/events/{event_id}/rsvp/{answer}';
};

export type EventRsvpEventE780E414Errors = {
	/**
	 * Bad Request
	 */
	400: EventUserEligibility;
};

export type EventRsvpEventE780E414Error =
	EventRsvpEventE780E414Errors[keyof EventRsvpEventE780E414Errors];

export type EventRsvpEventE780E414Responses = {
	/**
	 * OK
	 */
	200: EventRsvpSchema;
};

export type EventRsvpEventE780E414Response =
	EventRsvpEventE780E414Responses[keyof EventRsvpEventE780E414Responses];

export type EventListTiersD4314F9cData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/tickets/tiers';
};

export type EventListTiersD4314F9cResponses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TierSchema>;
};

export type EventListTiersD4314F9cResponse =
	EventListTiersD4314F9cResponses[keyof EventListTiersD4314F9cResponses];

export type EventTicketCheckout2Cec5454Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Tier Id
		 */
		tier_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/tickets/{tier_id}/checkout';
};

export type EventTicketCheckout2Cec5454Errors = {
	/**
	 * Bad Request
	 */
	400: EventUserEligibility;
};

export type EventTicketCheckout2Cec5454Error =
	EventTicketCheckout2Cec5454Errors[keyof EventTicketCheckout2Cec5454Errors];

export type EventTicketCheckout2Cec5454Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: StripeCheckoutSessionSchema | EventTicketSchema;
};

export type EventTicketCheckout2Cec5454Response =
	EventTicketCheckout2Cec5454Responses[keyof EventTicketCheckout2Cec5454Responses];

export type EventTicketPwycCheckoutEaf612EeData = {
	body: PwycCheckoutPayloadSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Tier Id
		 */
		tier_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/tickets/{tier_id}/checkout/pwyc';
};

export type EventTicketPwycCheckoutEaf612EeErrors = {
	/**
	 * Bad Request
	 */
	400: EventUserEligibility;
};

export type EventTicketPwycCheckoutEaf612EeError =
	EventTicketPwycCheckoutEaf612EeErrors[keyof EventTicketPwycCheckoutEaf612EeErrors];

export type EventTicketPwycCheckoutEaf612EeResponses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: StripeCheckoutSessionSchema | EventTicketSchema;
};

export type EventTicketPwycCheckoutEaf612EeResponse =
	EventTicketPwycCheckoutEaf612EeResponses[keyof EventTicketPwycCheckoutEaf612EeResponses];

export type EventGetQuestionnaireAf033Cd0Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Questionnaire Id
		 */
		questionnaire_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/questionnaire/{questionnaire_id}';
};

export type EventGetQuestionnaireAf033Cd0Responses = {
	/**
	 * OK
	 */
	200: QuestionnaireSchema;
};

export type EventGetQuestionnaireAf033Cd0Response =
	EventGetQuestionnaireAf033Cd0Responses[keyof EventGetQuestionnaireAf033Cd0Responses];

export type EventSubmitQuestionnaire122B5562Data = {
	body: QuestionnaireSubmissionSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Questionnaire Id
		 */
		questionnaire_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/questionnaire/{questionnaire_id}/submit';
};

export type EventSubmitQuestionnaire122B5562Errors = {
	/**
	 * Bad Request
	 */
	400: ResponseMessage;
};

export type EventSubmitQuestionnaire122B5562Error =
	EventSubmitQuestionnaire122B5562Errors[keyof EventSubmitQuestionnaire122B5562Errors];

export type EventSubmitQuestionnaire122B5562Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: QuestionnaireSubmissionResponseSchema | QuestionnaireEvaluationForUserSchema;
};

export type EventSubmitQuestionnaire122B5562Response =
	EventSubmitQuestionnaire122B5562Responses[keyof EventSubmitQuestionnaire122B5562Responses];

export type EventadminDeleteEventTokenF47C06E1Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Token Id
		 */
		token_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tokens/{token_id}';
};

export type EventadminDeleteEventTokenF47C06E1Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminDeleteEventTokenF47C06E1Response =
	EventadminDeleteEventTokenF47C06E1Responses[keyof EventadminDeleteEventTokenF47C06E1Responses];

export type EventadminUpdateEventToken6520A3DfData = {
	body: EventTokenUpdateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Token Id
		 */
		token_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tokens/{token_id}';
};

export type EventadminUpdateEventToken6520A3DfResponses = {
	/**
	 * OK
	 */
	200: EventTokenSchema;
};

export type EventadminUpdateEventToken6520A3DfResponse =
	EventadminUpdateEventToken6520A3DfResponses[keyof EventadminUpdateEventToken6520A3DfResponses];

export type EventadminListEventTokensEd3884A8Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Is Active
		 */
		is_active?: boolean | null;
		/**
		 * Event Id
		 */
		event_id?: string | null;
		/**
		 * Has Invitation
		 */
		has_invitation?: boolean | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/tokens';
};

export type EventadminListEventTokensEd3884A8Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventTokenSchema;
};

export type EventadminListEventTokensEd3884A8Response =
	EventadminListEventTokensEd3884A8Responses[keyof EventadminListEventTokensEd3884A8Responses];

export type EventadminCreateEventToken712452EeData = {
	body: EventTokenCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tokens';
};

export type EventadminCreateEventToken712452EeResponses = {
	/**
	 * OK
	 */
	200: EventTokenSchema;
};

export type EventadminCreateEventToken712452EeResponse =
	EventadminCreateEventToken712452EeResponses[keyof EventadminCreateEventToken712452EeResponses];

export type EventadminDecideInvitationRequestBc24B10bData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Request Id
		 */
		request_id: string;
		/**
		 * Decision
		 */
		decision: 'approve' | 'reject';
	};
	query?: never;
	url: '/api/event-admin/{event_id}/invitation-request/{request_id}/{decision}';
};

export type EventadminDecideInvitationRequestBc24B10bResponses = {
	/**
	 * OK
	 */
	200: EventInvitationRequestSchema;
};

export type EventadminDecideInvitationRequestBc24B10bResponse =
	EventadminDecideInvitationRequestBc24B10bResponses[keyof EventadminDecideInvitationRequestBc24B10bResponses];

export type EventadminListEventInvitationRequests95E1461cData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Status
		 */
		status?: 'pending' | 'approved' | 'rejected';
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/invitation_requests';
};

export type EventadminListEventInvitationRequests95E1461cResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventInvitationRequestInternalSchema;
};

export type EventadminListEventInvitationRequests95E1461cResponse =
	EventadminListEventInvitationRequests95E1461cResponses[keyof EventadminListEventInvitationRequests95E1461cResponses];

export type EventadminUpdateEventBacdac44Data = {
	body: EventEditSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}';
};

export type EventadminUpdateEventBacdac44Errors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type EventadminUpdateEventBacdac44Error =
	EventadminUpdateEventBacdac44Errors[keyof EventadminUpdateEventBacdac44Errors];

export type EventadminUpdateEventBacdac44Responses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type EventadminUpdateEventBacdac44Response =
	EventadminUpdateEventBacdac44Responses[keyof EventadminUpdateEventBacdac44Responses];

export type EventadminUpdateEventStatus45A25218Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Status
		 */
		status: 'open' | 'closed' | 'draft' | 'deleted';
	};
	query?: never;
	url: '/api/event-admin/{event_id}/actions/update-status/{status}';
};

export type EventadminUpdateEventStatus45A25218Responses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type EventadminUpdateEventStatus45A25218Response =
	EventadminUpdateEventStatus45A25218Responses[keyof EventadminUpdateEventStatus45A25218Responses];

export type EventadminUploadLogoD1E26C1bData = {
	/**
	 * FileParams
	 */
	body: {
		/**
		 * Logo
		 */
		logo: Blob | File;
	};
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/upload-logo';
};

export type EventadminUploadLogoD1E26C1bResponses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type EventadminUploadLogoD1E26C1bResponse =
	EventadminUploadLogoD1E26C1bResponses[keyof EventadminUploadLogoD1E26C1bResponses];

export type EventadminUploadCoverArtB834Ee6bData = {
	/**
	 * FileParams
	 */
	body: {
		/**
		 * Cover Art
		 */
		cover_art: Blob | File;
	};
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/upload-cover-art';
};

export type EventadminUploadCoverArtB834Ee6bResponses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type EventadminUploadCoverArtB834Ee6bResponse =
	EventadminUploadCoverArtB834Ee6bResponses[keyof EventadminUploadCoverArtB834Ee6bResponses];

export type EventadminDeleteLogo70Ad419cData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/delete-logo';
};

export type EventadminDeleteLogo70Ad419cResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminDeleteLogo70Ad419cResponse =
	EventadminDeleteLogo70Ad419cResponses[keyof EventadminDeleteLogo70Ad419cResponses];

export type EventadminDeleteCoverArt4Bfe613bData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/delete-cover-art';
};

export type EventadminDeleteCoverArt4Bfe613bResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminDeleteCoverArt4Bfe613bResponse =
	EventadminDeleteCoverArt4Bfe613bResponses[keyof EventadminDeleteCoverArt4Bfe613bResponses];

export type EventadminClearTagsDa58C15bData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tags';
};

export type EventadminClearTagsDa58C15bResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminClearTagsDa58C15bResponse =
	EventadminClearTagsDa58C15bResponses[keyof EventadminClearTagsDa58C15bResponses];

export type EventadminAddTags1Bf84F24Data = {
	body: TagUpdateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tags';
};

export type EventadminAddTags1Bf84F24Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TagSchema>;
};

export type EventadminAddTags1Bf84F24Response =
	EventadminAddTags1Bf84F24Responses[keyof EventadminAddTags1Bf84F24Responses];

export type EventadminRemoveTagsCb2Faaf3Data = {
	body: TagUpdateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tags/remove';
};

export type EventadminRemoveTagsCb2Faaf3Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TagSchema>;
};

export type EventadminRemoveTagsCb2Faaf3Response =
	EventadminRemoveTagsCb2Faaf3Responses[keyof EventadminRemoveTagsCb2Faaf3Responses];

export type EventadminListTicketTiers416362B4Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/ticket-tiers';
};

export type EventadminListTicketTiers416362B4Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaTicketTierDetailSchema;
};

export type EventadminListTicketTiers416362B4Response =
	EventadminListTicketTiers416362B4Responses[keyof EventadminListTicketTiers416362B4Responses];

export type EventadminCreateTicketTierDfe2D1D0Data = {
	body: TicketTierCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/ticket-tier';
};

export type EventadminCreateTicketTierDfe2D1D0Responses = {
	/**
	 * OK
	 */
	200: TicketTierDetailSchema;
};

export type EventadminCreateTicketTierDfe2D1D0Response =
	EventadminCreateTicketTierDfe2D1D0Responses[keyof EventadminCreateTicketTierDfe2D1D0Responses];

export type EventadminDeleteTicketTier36Dacdc2Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Tier Id
		 */
		tier_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/ticket-tier/{tier_id}';
};

export type EventadminDeleteTicketTier36Dacdc2Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminDeleteTicketTier36Dacdc2Response =
	EventadminDeleteTicketTier36Dacdc2Responses[keyof EventadminDeleteTicketTier36Dacdc2Responses];

export type EventadminUpdateTicketTier749Ac5AbData = {
	body: TicketTierUpdateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Tier Id
		 */
		tier_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/ticket-tier/{tier_id}';
};

export type EventadminUpdateTicketTier749Ac5AbResponses = {
	/**
	 * OK
	 */
	200: TicketTierDetailSchema;
};

export type EventadminUpdateTicketTier749Ac5AbResponse =
	EventadminUpdateTicketTier749Ac5AbResponses[keyof EventadminUpdateTicketTier749Ac5AbResponses];

export type EventadminListTickets00C85FbbData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		status?: Status | null;
		tier__payment_method?: PaymentMethod | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/tickets';
};

export type EventadminListTickets00C85FbbResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaAdminTicketSchema;
};

export type EventadminListTickets00C85FbbResponse =
	EventadminListTickets00C85FbbResponses[keyof EventadminListTickets00C85FbbResponses];

export type EventadminGetTicket25A2B21aData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Ticket Id
		 */
		ticket_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tickets/{ticket_id}';
};

export type EventadminGetTicket25A2B21aResponses = {
	/**
	 * OK
	 */
	200: AdminTicketSchema;
};

export type EventadminGetTicket25A2B21aResponse =
	EventadminGetTicket25A2B21aResponses[keyof EventadminGetTicket25A2B21aResponses];

export type EventadminConfirmTicketPayment04D9Cbb3Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Ticket Id
		 */
		ticket_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tickets/{ticket_id}/confirm-payment';
};

export type EventadminConfirmTicketPayment04D9Cbb3Responses = {
	/**
	 * OK
	 */
	200: EventTicketSchema;
};

export type EventadminConfirmTicketPayment04D9Cbb3Response =
	EventadminConfirmTicketPayment04D9Cbb3Responses[keyof EventadminConfirmTicketPayment04D9Cbb3Responses];

export type EventadminMarkTicketRefunded08Cc548eData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Ticket Id
		 */
		ticket_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tickets/{ticket_id}/mark-refunded';
};

export type EventadminMarkTicketRefunded08Cc548eResponses = {
	/**
	 * OK
	 */
	200: EventTicketSchema;
};

export type EventadminMarkTicketRefunded08Cc548eResponse =
	EventadminMarkTicketRefunded08Cc548eResponses[keyof EventadminMarkTicketRefunded08Cc548eResponses];

export type EventadminCancelTicket89903114Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Ticket Id
		 */
		ticket_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tickets/{ticket_id}/cancel';
};

export type EventadminCancelTicket89903114Responses = {
	/**
	 * OK
	 */
	200: EventTicketSchema;
};

export type EventadminCancelTicket89903114Response =
	EventadminCancelTicket89903114Responses[keyof EventadminCancelTicket89903114Responses];

export type EventadminCheckInTicket9Aec307eData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Ticket Id
		 */
		ticket_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tickets/{ticket_id}/check-in';
};

export type EventadminCheckInTicket9Aec307eErrors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type EventadminCheckInTicket9Aec307eError =
	EventadminCheckInTicket9Aec307eErrors[keyof EventadminCheckInTicket9Aec307eErrors];

export type EventadminCheckInTicket9Aec307eResponses = {
	/**
	 * OK
	 */
	200: CheckInResponseSchema;
};

export type EventadminCheckInTicket9Aec307eResponse =
	EventadminCheckInTicket9Aec307eResponses[keyof EventadminCheckInTicket9Aec307eResponses];

export type EventadminListInvitations2C920Bc0Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/invitations';
};

export type EventadminListInvitations2C920Bc0Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventInvitationListSchema;
};

export type EventadminListInvitations2C920Bc0Response =
	EventadminListInvitations2C920Bc0Responses[keyof EventadminListInvitations2C920Bc0Responses];

export type EventadminCreateInvitations899C92FeData = {
	body: DirectInvitationCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/invitations';
};

export type EventadminCreateInvitations899C92FeErrors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type EventadminCreateInvitations899C92FeError =
	EventadminCreateInvitations899C92FeErrors[keyof EventadminCreateInvitations899C92FeErrors];

export type EventadminCreateInvitations899C92FeResponses = {
	/**
	 * OK
	 */
	200: DirectInvitationResponseSchema;
};

export type EventadminCreateInvitations899C92FeResponse =
	EventadminCreateInvitations899C92FeResponses[keyof EventadminCreateInvitations899C92FeResponses];

export type EventadminListPendingInvitations601F99F4Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/pending-invitations';
};

export type EventadminListPendingInvitations601F99F4Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaPendingEventInvitationListSchema;
};

export type EventadminListPendingInvitations601F99F4Response =
	EventadminListPendingInvitations601F99F4Responses[keyof EventadminListPendingInvitations601F99F4Responses];

export type EventadminDeleteInvitationEndpoint03F3A299Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Invitation Type
		 */
		invitation_type: 'registered' | 'pending';
		/**
		 * Invitation Id
		 */
		invitation_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/invitations/{invitation_type}/{invitation_id}';
};

export type EventadminDeleteInvitationEndpoint03F3A299Errors = {
	/**
	 * Not Found
	 */
	404: ValidationErrorResponse;
};

export type EventadminDeleteInvitationEndpoint03F3A299Error =
	EventadminDeleteInvitationEndpoint03F3A299Errors[keyof EventadminDeleteInvitationEndpoint03F3A299Errors];

export type EventadminDeleteInvitationEndpoint03F3A299Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminDeleteInvitationEndpoint03F3A299Response =
	EventadminDeleteInvitationEndpoint03F3A299Responses[keyof EventadminDeleteInvitationEndpoint03F3A299Responses];

export type EventadminListRsvps4A9A51CeData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		status?: Status | null;
		/**
		 * User Id
		 */
		user_id?: string | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/rsvps';
};

export type EventadminListRsvps4A9A51CeResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaRsvpDetailSchema;
};

export type EventadminListRsvps4A9A51CeResponse =
	EventadminListRsvps4A9A51CeResponses[keyof EventadminListRsvps4A9A51CeResponses];

export type EventadminCreateRsvp47Bf8C99Data = {
	body: RsvpCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/rsvps';
};

export type EventadminCreateRsvp47Bf8C99Responses = {
	/**
	 * OK
	 */
	200: RsvpDetailSchema;
};

export type EventadminCreateRsvp47Bf8C99Response =
	EventadminCreateRsvp47Bf8C99Responses[keyof EventadminCreateRsvp47Bf8C99Responses];

export type EventadminDeleteRsvpC4Ca3B69Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Rsvp Id
		 */
		rsvp_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/rsvps/{rsvp_id}';
};

export type EventadminDeleteRsvpC4Ca3B69Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminDeleteRsvpC4Ca3B69Response =
	EventadminDeleteRsvpC4Ca3B69Responses[keyof EventadminDeleteRsvpC4Ca3B69Responses];

export type EventadminGetRsvp493Da238Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Rsvp Id
		 */
		rsvp_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/rsvps/{rsvp_id}';
};

export type EventadminGetRsvp493Da238Responses = {
	/**
	 * OK
	 */
	200: RsvpDetailSchema;
};

export type EventadminGetRsvp493Da238Response =
	EventadminGetRsvp493Da238Responses[keyof EventadminGetRsvp493Da238Responses];

export type EventadminUpdateRsvp33273CdeData = {
	body: RsvpUpdateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Rsvp Id
		 */
		rsvp_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/rsvps/{rsvp_id}';
};

export type EventadminUpdateRsvp33273CdeResponses = {
	/**
	 * OK
	 */
	200: RsvpDetailSchema;
};

export type EventadminUpdateRsvp33273CdeResponse =
	EventadminUpdateRsvp33273CdeResponses[keyof EventadminUpdateRsvp33273CdeResponses];

export type PermissionMyPermissions7Add1766Data = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/permissions/my-permissions';
};

export type PermissionMyPermissions7Add1766Responses = {
	/**
	 * OK
	 */
	200: OrganizationPermissionsSchema;
};

export type PermissionMyPermissions7Add1766Response =
	PermissionMyPermissions7Add1766Responses[keyof PermissionMyPermissions7Add1766Responses];

export type EventseriesListEventSeriesC993Ced3Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Organization
		 */
		organization?: string | null;
		/**
		 * Tags
		 */
		tags?: Array<string> | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-series/';
};

export type EventseriesListEventSeriesC993Ced3Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventSeriesRetrieveSchema;
};

export type EventseriesListEventSeriesC993Ced3Response =
	EventseriesListEventSeriesC993Ced3Responses[keyof EventseriesListEventSeriesC993Ced3Responses];

export type EventseriesGetEventSeriesBySlugsCbed60E8Data = {
	body?: never;
	path: {
		/**
		 * Org Slug
		 */
		org_slug: string;
		/**
		 * Series Slug
		 */
		series_slug: string;
	};
	query?: never;
	url: '/api/event-series/{org_slug}/{series_slug}';
};

export type EventseriesGetEventSeriesBySlugsCbed60E8Responses = {
	/**
	 * OK
	 */
	200: EventSeriesRetrieveSchema;
};

export type EventseriesGetEventSeriesBySlugsCbed60E8Response =
	EventseriesGetEventSeriesBySlugsCbed60E8Responses[keyof EventseriesGetEventSeriesBySlugsCbed60E8Responses];

export type EventseriesGetEventSeriesA073419dData = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series/{series_id}';
};

export type EventseriesGetEventSeriesA073419dResponses = {
	/**
	 * OK
	 */
	200: EventSeriesRetrieveSchema;
};

export type EventseriesGetEventSeriesA073419dResponse =
	EventseriesGetEventSeriesA073419dResponses[keyof EventseriesGetEventSeriesA073419dResponses];

export type EventseriesListResources0899602cData = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: {
		resource_type?: ResourceTypes | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-series/{series_id}/resources';
};

export type EventseriesListResources0899602cResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaAdditionalResourceSchema;
};

export type EventseriesListResources0899602cResponse =
	EventseriesListResources0899602cResponses[keyof EventseriesListResources0899602cResponses];

export type EventseriesadminDeleteEventSeriesFcfe14A5Data = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/';
};

export type EventseriesadminDeleteEventSeriesFcfe14A5Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventseriesadminDeleteEventSeriesFcfe14A5Response =
	EventseriesadminDeleteEventSeriesFcfe14A5Responses[keyof EventseriesadminDeleteEventSeriesFcfe14A5Responses];

export type EventseriesadminUpdateEventSeries00F06F68Data = {
	body: EventSeriesEditSchema;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/';
};

export type EventseriesadminUpdateEventSeries00F06F68Errors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type EventseriesadminUpdateEventSeries00F06F68Error =
	EventseriesadminUpdateEventSeries00F06F68Errors[keyof EventseriesadminUpdateEventSeries00F06F68Errors];

export type EventseriesadminUpdateEventSeries00F06F68Responses = {
	/**
	 * OK
	 */
	200: EventSeriesRetrieveSchema;
};

export type EventseriesadminUpdateEventSeries00F06F68Response =
	EventseriesadminUpdateEventSeries00F06F68Responses[keyof EventseriesadminUpdateEventSeries00F06F68Responses];

export type EventseriesadminUploadLogo6E05781cData = {
	/**
	 * FileParams
	 */
	body: {
		/**
		 * Logo
		 */
		logo: Blob | File;
	};
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/upload-logo';
};

export type EventseriesadminUploadLogo6E05781cResponses = {
	/**
	 * OK
	 */
	200: EventSeriesRetrieveSchema;
};

export type EventseriesadminUploadLogo6E05781cResponse =
	EventseriesadminUploadLogo6E05781cResponses[keyof EventseriesadminUploadLogo6E05781cResponses];

export type EventseriesadminUploadCoverArtC7819802Data = {
	/**
	 * FileParams
	 */
	body: {
		/**
		 * Cover Art
		 */
		cover_art: Blob | File;
	};
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/upload-cover-art';
};

export type EventseriesadminUploadCoverArtC7819802Responses = {
	/**
	 * OK
	 */
	200: EventSeriesRetrieveSchema;
};

export type EventseriesadminUploadCoverArtC7819802Response =
	EventseriesadminUploadCoverArtC7819802Responses[keyof EventseriesadminUploadCoverArtC7819802Responses];

export type EventseriesadminDeleteLogoAc75E26fData = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/delete-logo';
};

export type EventseriesadminDeleteLogoAc75E26fResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventseriesadminDeleteLogoAc75E26fResponse =
	EventseriesadminDeleteLogoAc75E26fResponses[keyof EventseriesadminDeleteLogoAc75E26fResponses];

export type EventseriesadminDeleteCoverArt28Aedd4eData = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/delete-cover-art';
};

export type EventseriesadminDeleteCoverArt28Aedd4eResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventseriesadminDeleteCoverArt28Aedd4eResponse =
	EventseriesadminDeleteCoverArt28Aedd4eResponses[keyof EventseriesadminDeleteCoverArt28Aedd4eResponses];

export type EventseriesadminClearTagsA8A6A5B7Data = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/tags';
};

export type EventseriesadminClearTagsA8A6A5B7Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventseriesadminClearTagsA8A6A5B7Response =
	EventseriesadminClearTagsA8A6A5B7Responses[keyof EventseriesadminClearTagsA8A6A5B7Responses];

export type EventseriesadminAddTags3C8576C6Data = {
	body: TagUpdateSchema;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/tags';
};

export type EventseriesadminAddTags3C8576C6Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TagSchema>;
};

export type EventseriesadminAddTags3C8576C6Response =
	EventseriesadminAddTags3C8576C6Responses[keyof EventseriesadminAddTags3C8576C6Responses];

export type EventseriesadminRemoveTagsA39D381bData = {
	body: TagUpdateSchema;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/tags/remove';
};

export type EventseriesadminRemoveTagsA39D381bResponses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TagSchema>;
};

export type EventseriesadminRemoveTagsA39D381bResponse =
	EventseriesadminRemoveTagsA39D381bResponses[keyof EventseriesadminRemoveTagsA39D381bResponses];

export type PotluckListPotluckItems7B1Ac0D6Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/potluck/';
};

export type PotluckListPotluckItems7B1Ac0D6Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<PotluckItemRetrieveSchema>;
};

export type PotluckListPotluckItems7B1Ac0D6Response =
	PotluckListPotluckItems7B1Ac0D6Responses[keyof PotluckListPotluckItems7B1Ac0D6Responses];

export type PotluckCreatePotluckItem06F918E8Data = {
	body: PotluckItemCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/potluck/';
};

export type PotluckCreatePotluckItem06F918E8Responses = {
	/**
	 * OK
	 */
	200: PotluckItemRetrieveSchema;
};

export type PotluckCreatePotluckItem06F918E8Response =
	PotluckCreatePotluckItem06F918E8Responses[keyof PotluckCreatePotluckItem06F918E8Responses];

export type PotluckDeletePotluckItem8571749dData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Item Id
		 */
		item_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/potluck/{item_id}';
};

export type PotluckDeletePotluckItem8571749dResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type PotluckDeletePotluckItem8571749dResponse =
	PotluckDeletePotluckItem8571749dResponses[keyof PotluckDeletePotluckItem8571749dResponses];

export type PotluckUpdatePotluckItem6Ba6Abd8Data = {
	body: PotluckItemCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Item Id
		 */
		item_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/potluck/{item_id}';
};

export type PotluckUpdatePotluckItem6Ba6Abd8Responses = {
	/**
	 * OK
	 */
	200: PotluckItemRetrieveSchema;
};

export type PotluckUpdatePotluckItem6Ba6Abd8Response =
	PotluckUpdatePotluckItem6Ba6Abd8Responses[keyof PotluckUpdatePotluckItem6Ba6Abd8Responses];

export type PotluckClaimPotluckItemF3F13B3fData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Item Id
		 */
		item_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/potluck/{item_id}/claim';
};

export type PotluckClaimPotluckItemF3F13B3fResponses = {
	/**
	 * OK
	 */
	200: PotluckItemRetrieveSchema;
};

export type PotluckClaimPotluckItemF3F13B3fResponse =
	PotluckClaimPotluckItemF3F13B3fResponses[keyof PotluckClaimPotluckItemF3F13B3fResponses];

export type PotluckUnclaimPotluckItemA8A80F75Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Item Id
		 */
		item_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/potluck/{item_id}/unclaim';
};

export type PotluckUnclaimPotluckItemA8A80F75Responses = {
	/**
	 * OK
	 */
	200: PotluckItemRetrieveSchema;
};

export type PotluckUnclaimPotluckItemA8A80F75Response =
	PotluckUnclaimPotluckItemA8A80F75Responses[keyof PotluckUnclaimPotluckItemA8A80F75Responses];

export type QuestionnaireListOrgQuestionnaires1107D845Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Organization Id
		 */
		organization_id?: string | null;
		/**
		 * Event Id
		 */
		event_id?: string | null;
		/**
		 * Event Series Id
		 */
		event_series_id?: string | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/questionnaires/';
};

export type QuestionnaireListOrgQuestionnaires1107D845Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationQuestionnaireInListSchema;
};

export type QuestionnaireListOrgQuestionnaires1107D845Response =
	QuestionnaireListOrgQuestionnaires1107D845Responses[keyof QuestionnaireListOrgQuestionnaires1107D845Responses];

export type QuestionnaireCreateOrgQuestionnaire73F60859Data = {
	body: OrganizationQuestionnaireCreateSchema;
	path: {
		/**
		 * Organization Id
		 */
		organization_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{organization_id}/create-questionnaire';
};

export type QuestionnaireCreateOrgQuestionnaire73F60859Errors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type QuestionnaireCreateOrgQuestionnaire73F60859Error =
	QuestionnaireCreateOrgQuestionnaire73F60859Errors[keyof QuestionnaireCreateOrgQuestionnaire73F60859Errors];

export type QuestionnaireCreateOrgQuestionnaire73F60859Responses = {
	/**
	 * OK
	 */
	200: OrganizationQuestionnaireSchema;
};

export type QuestionnaireCreateOrgQuestionnaire73F60859Response =
	QuestionnaireCreateOrgQuestionnaire73F60859Responses[keyof QuestionnaireCreateOrgQuestionnaire73F60859Responses];

export type QuestionnaireDeleteOrgQuestionnaire1A31D83cData = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}';
};

export type QuestionnaireDeleteOrgQuestionnaire1A31D83cResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type QuestionnaireDeleteOrgQuestionnaire1A31D83cResponse =
	QuestionnaireDeleteOrgQuestionnaire1A31D83cResponses[keyof QuestionnaireDeleteOrgQuestionnaire1A31D83cResponses];

export type QuestionnaireGetOrgQuestionnaire2186585dData = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}';
};

export type QuestionnaireGetOrgQuestionnaire2186585dResponses = {
	/**
	 * OK
	 */
	200: OrganizationQuestionnaireSchema;
};

export type QuestionnaireGetOrgQuestionnaire2186585dResponse =
	QuestionnaireGetOrgQuestionnaire2186585dResponses[keyof QuestionnaireGetOrgQuestionnaire2186585dResponses];

export type QuestionnaireUpdateOrgQuestionnaire7De3F597Data = {
	body: OrganizationQuestionnaireUpdateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}';
};

export type QuestionnaireUpdateOrgQuestionnaire7De3F597Responses = {
	/**
	 * OK
	 */
	200: OrganizationQuestionnaireSchema;
};

export type QuestionnaireUpdateOrgQuestionnaire7De3F597Response =
	QuestionnaireUpdateOrgQuestionnaire7De3F597Responses[keyof QuestionnaireUpdateOrgQuestionnaire7De3F597Responses];

export type QuestionnaireCreateSectionC1A5Bf4fData = {
	body: SectionCreateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/sections';
};

export type QuestionnaireCreateSectionC1A5Bf4fResponses = {
	/**
	 * OK
	 */
	200: SectionUpdateSchema;
};

export type QuestionnaireCreateSectionC1A5Bf4fResponse =
	QuestionnaireCreateSectionC1A5Bf4fResponses[keyof QuestionnaireCreateSectionC1A5Bf4fResponses];

export type QuestionnaireDeleteSection3F029273Data = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Section Id
		 */
		section_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/sections/{section_id}';
};

export type QuestionnaireDeleteSection3F029273Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type QuestionnaireDeleteSection3F029273Response =
	QuestionnaireDeleteSection3F029273Responses[keyof QuestionnaireDeleteSection3F029273Responses];

export type QuestionnaireUpdateSectionAb1E5BeeData = {
	body: SectionUpdateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Section Id
		 */
		section_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/sections/{section_id}';
};

export type QuestionnaireUpdateSectionAb1E5BeeResponses = {
	/**
	 * OK
	 */
	200: SectionUpdateSchema;
};

export type QuestionnaireUpdateSectionAb1E5BeeResponse =
	QuestionnaireUpdateSectionAb1E5BeeResponses[keyof QuestionnaireUpdateSectionAb1E5BeeResponses];

export type QuestionnaireCreateMcQuestionC90Edce5Data = {
	body: MultipleChoiceQuestionCreateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/multiple-choice-questions';
};

export type QuestionnaireCreateMcQuestionC90Edce5Responses = {
	/**
	 * OK
	 */
	200: MultipleChoiceQuestionUpdateSchema;
};

export type QuestionnaireCreateMcQuestionC90Edce5Response =
	QuestionnaireCreateMcQuestionC90Edce5Responses[keyof QuestionnaireCreateMcQuestionC90Edce5Responses];

export type QuestionnaireDeleteMcQuestionA84375BbData = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Question Id
		 */
		question_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/multiple-choice-questions/{question_id}';
};

export type QuestionnaireDeleteMcQuestionA84375BbResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type QuestionnaireDeleteMcQuestionA84375BbResponse =
	QuestionnaireDeleteMcQuestionA84375BbResponses[keyof QuestionnaireDeleteMcQuestionA84375BbResponses];

export type QuestionnaireUpdateMcQuestionCd858543Data = {
	body: MultipleChoiceQuestionUpdateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Question Id
		 */
		question_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/multiple-choice-questions/{question_id}';
};

export type QuestionnaireUpdateMcQuestionCd858543Responses = {
	/**
	 * OK
	 */
	200: MultipleChoiceQuestionUpdateSchema;
};

export type QuestionnaireUpdateMcQuestionCd858543Response =
	QuestionnaireUpdateMcQuestionCd858543Responses[keyof QuestionnaireUpdateMcQuestionCd858543Responses];

export type QuestionnaireCreateMcOption534Cb866Data = {
	body: MultipleChoiceOptionCreateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Question Id
		 */
		question_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/multiple-choice-questions/{question_id}/options';
};

export type QuestionnaireCreateMcOption534Cb866Responses = {
	/**
	 * OK
	 */
	200: MultipleChoiceOptionUpdateSchema;
};

export type QuestionnaireCreateMcOption534Cb866Response =
	QuestionnaireCreateMcOption534Cb866Responses[keyof QuestionnaireCreateMcOption534Cb866Responses];

export type QuestionnaireDeleteMcOptionEb7753AaData = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Option Id
		 */
		option_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/multiple-choice-options/{option_id}';
};

export type QuestionnaireDeleteMcOptionEb7753AaResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type QuestionnaireDeleteMcOptionEb7753AaResponse =
	QuestionnaireDeleteMcOptionEb7753AaResponses[keyof QuestionnaireDeleteMcOptionEb7753AaResponses];

export type QuestionnaireUpdateMcOption8E0Ff197Data = {
	body: MultipleChoiceOptionUpdateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Option Id
		 */
		option_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/multiple-choice-options/{option_id}';
};

export type QuestionnaireUpdateMcOption8E0Ff197Responses = {
	/**
	 * OK
	 */
	200: MultipleChoiceOptionUpdateSchema;
};

export type QuestionnaireUpdateMcOption8E0Ff197Response =
	QuestionnaireUpdateMcOption8E0Ff197Responses[keyof QuestionnaireUpdateMcOption8E0Ff197Responses];

export type QuestionnaireCreateFtQuestion185917E2Data = {
	body: FreeTextQuestionCreateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/free-text-questions';
};

export type QuestionnaireCreateFtQuestion185917E2Responses = {
	/**
	 * OK
	 */
	200: FreeTextQuestionUpdateSchema;
};

export type QuestionnaireCreateFtQuestion185917E2Response =
	QuestionnaireCreateFtQuestion185917E2Responses[keyof QuestionnaireCreateFtQuestion185917E2Responses];

export type QuestionnaireDeleteFtQuestionCdd0F45eData = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Question Id
		 */
		question_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/free-text-questions/{question_id}';
};

export type QuestionnaireDeleteFtQuestionCdd0F45eResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type QuestionnaireDeleteFtQuestionCdd0F45eResponse =
	QuestionnaireDeleteFtQuestionCdd0F45eResponses[keyof QuestionnaireDeleteFtQuestionCdd0F45eResponses];

export type QuestionnaireUpdateFtQuestion60D597F8Data = {
	body: FreeTextQuestionUpdateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Question Id
		 */
		question_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/free-text-questions/{question_id}';
};

export type QuestionnaireUpdateFtQuestion60D597F8Responses = {
	/**
	 * OK
	 */
	200: FreeTextQuestionUpdateSchema;
};

export type QuestionnaireUpdateFtQuestion60D597F8Response =
	QuestionnaireUpdateFtQuestion60D597F8Responses[keyof QuestionnaireUpdateFtQuestion60D597F8Responses];

export type QuestionnaireListSubmissionsDbd514B6Data = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: {
		/**
		 * Evaluation Status
		 */
		evaluation_status?: string | null;
		/**
		 * Order By
		 */
		order_by?: 'submitted_at' | '-submitted_at';
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/questionnaires/{org_questionnaire_id}/submissions';
};

export type QuestionnaireListSubmissionsDbd514B6Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaSubmissionListItemSchema;
};

export type QuestionnaireListSubmissionsDbd514B6Response =
	QuestionnaireListSubmissionsDbd514B6Responses[keyof QuestionnaireListSubmissionsDbd514B6Responses];

export type QuestionnaireGetSubmissionDetail3Df962A0Data = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Submission Id
		 */
		submission_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/submissions/{submission_id}';
};

export type QuestionnaireGetSubmissionDetail3Df962A0Responses = {
	/**
	 * OK
	 */
	200: SubmissionDetailSchema;
};

export type QuestionnaireGetSubmissionDetail3Df962A0Response =
	QuestionnaireGetSubmissionDetail3Df962A0Responses[keyof QuestionnaireGetSubmissionDetail3Df962A0Responses];

export type QuestionnaireEvaluateSubmission4B1Bad4bData = {
	body: EvaluationCreateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Submission Id
		 */
		submission_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/submissions/{submission_id}/evaluate';
};

export type QuestionnaireEvaluateSubmission4B1Bad4bErrors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type QuestionnaireEvaluateSubmission4B1Bad4bError =
	QuestionnaireEvaluateSubmission4B1Bad4bErrors[keyof QuestionnaireEvaluateSubmission4B1Bad4bErrors];

export type QuestionnaireEvaluateSubmission4B1Bad4bResponses = {
	/**
	 * OK
	 */
	200: EvaluationResponseSchema;
};

export type QuestionnaireEvaluateSubmission4B1Bad4bResponse =
	QuestionnaireEvaluateSubmission4B1Bad4bResponses[keyof QuestionnaireEvaluateSubmission4B1Bad4bResponses];

export type QuestionnaireUpdateQuestionnaireStatus54Cd9544Data = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Status
		 */
		status: 'draft' | 'ready' | 'published';
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/status/{status}';
};

export type QuestionnaireUpdateQuestionnaireStatus54Cd9544Responses = {
	/**
	 * OK
	 */
	200: OrganizationQuestionnaireSchema;
};

export type QuestionnaireUpdateQuestionnaireStatus54Cd9544Response =
	QuestionnaireUpdateQuestionnaireStatus54Cd9544Responses[keyof QuestionnaireUpdateQuestionnaireStatus54Cd9544Responses];

export type QuestionnaireReplaceEvents995807FcData = {
	body: EventAssignmentSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/events';
};

export type QuestionnaireReplaceEvents995807FcResponses = {
	/**
	 * OK
	 */
	200: OrganizationQuestionnaireSchema;
};

export type QuestionnaireReplaceEvents995807FcResponse =
	QuestionnaireReplaceEvents995807FcResponses[keyof QuestionnaireReplaceEvents995807FcResponses];

export type QuestionnaireUnassignEvent0Fe0Fa34Data = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/events/{event_id}';
};

export type QuestionnaireUnassignEvent0Fe0Fa34Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type QuestionnaireUnassignEvent0Fe0Fa34Response =
	QuestionnaireUnassignEvent0Fe0Fa34Responses[keyof QuestionnaireUnassignEvent0Fe0Fa34Responses];

export type QuestionnaireAssignEventF9B4C6BfData = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/events/{event_id}';
};

export type QuestionnaireAssignEventF9B4C6BfResponses = {
	/**
	 * OK
	 */
	200: OrganizationQuestionnaireSchema;
};

export type QuestionnaireAssignEventF9B4C6BfResponse =
	QuestionnaireAssignEventF9B4C6BfResponses[keyof QuestionnaireAssignEventF9B4C6BfResponses];

export type QuestionnaireReplaceEventSeriesA611182eData = {
	body: EventSeriesAssignmentSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/event-series';
};

export type QuestionnaireReplaceEventSeriesA611182eResponses = {
	/**
	 * OK
	 */
	200: OrganizationQuestionnaireSchema;
};

export type QuestionnaireReplaceEventSeriesA611182eResponse =
	QuestionnaireReplaceEventSeriesA611182eResponses[keyof QuestionnaireReplaceEventSeriesA611182eResponses];

export type QuestionnaireUnassignEventSeries175C9D89Data = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/event-series/{series_id}';
};

export type QuestionnaireUnassignEventSeries175C9D89Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type QuestionnaireUnassignEventSeries175C9D89Response =
	QuestionnaireUnassignEventSeries175C9D89Responses[keyof QuestionnaireUnassignEventSeries175C9D89Responses];

export type QuestionnaireAssignEventSeries3Ef983DbData = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/event-series/{series_id}';
};

export type QuestionnaireAssignEventSeries3Ef983DbResponses = {
	/**
	 * OK
	 */
	200: OrganizationQuestionnaireSchema;
};

export type QuestionnaireAssignEventSeries3Ef983DbResponse =
	QuestionnaireAssignEventSeries3Ef983DbResponses[keyof QuestionnaireAssignEventSeries3Ef983DbResponses];

export type UserpreferencesGetGeneralPreferences2Bcdc7D9Data = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/preferences/general';
};

export type UserpreferencesGetGeneralPreferences2Bcdc7D9Responses = {
	/**
	 * OK
	 */
	200: GeneralUserPreferencesSchema;
};

export type UserpreferencesGetGeneralPreferences2Bcdc7D9Response =
	UserpreferencesGetGeneralPreferences2Bcdc7D9Responses[keyof UserpreferencesGetGeneralPreferences2Bcdc7D9Responses];

export type UserpreferencesUpdateGlobalPreferencesF13A581bData = {
	body: GeneralUserPreferencesUpdateSchema;
	path?: never;
	query?: {
		/**
		 * Overwrite Children
		 */
		overwrite_children?: boolean;
	};
	url: '/api/preferences/general';
};

export type UserpreferencesUpdateGlobalPreferencesF13A581bResponses = {
	/**
	 * OK
	 */
	200: GeneralUserPreferencesSchema;
};

export type UserpreferencesUpdateGlobalPreferencesF13A581bResponse =
	UserpreferencesUpdateGlobalPreferencesF13A581bResponses[keyof UserpreferencesUpdateGlobalPreferencesF13A581bResponses];

export type UserpreferencesGetOrganizationPreferencesBa465870Data = {
	body?: never;
	path: {
		/**
		 * Organization Id
		 */
		organization_id: string;
	};
	query?: never;
	url: '/api/preferences/organization/{organization_id}';
};

export type UserpreferencesGetOrganizationPreferencesBa465870Responses = {
	/**
	 * OK
	 */
	200: UserOrganizationPreferencesSchema;
};

export type UserpreferencesGetOrganizationPreferencesBa465870Response =
	UserpreferencesGetOrganizationPreferencesBa465870Responses[keyof UserpreferencesGetOrganizationPreferencesBa465870Responses];

export type UserpreferencesUpdateOrganizationPreferencesEa1A5875Data = {
	body: UserOrganizationPreferencesUpdateSchema;
	path: {
		/**
		 * Organization Id
		 */
		organization_id: string;
	};
	query?: {
		/**
		 * Overwrite Children
		 */
		overwrite_children?: boolean;
	};
	url: '/api/preferences/organization/{organization_id}';
};

export type UserpreferencesUpdateOrganizationPreferencesEa1A5875Responses = {
	/**
	 * OK
	 */
	200: UserOrganizationPreferencesSchema;
};

export type UserpreferencesUpdateOrganizationPreferencesEa1A5875Response =
	UserpreferencesUpdateOrganizationPreferencesEa1A5875Responses[keyof UserpreferencesUpdateOrganizationPreferencesEa1A5875Responses];

export type UserpreferencesGetEventSeriesPreferences750A1335Data = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/preferences/event-series/{series_id}';
};

export type UserpreferencesGetEventSeriesPreferences750A1335Responses = {
	/**
	 * OK
	 */
	200: UserEventSeriesPreferencesSchema;
};

export type UserpreferencesGetEventSeriesPreferences750A1335Response =
	UserpreferencesGetEventSeriesPreferences750A1335Responses[keyof UserpreferencesGetEventSeriesPreferences750A1335Responses];

export type UserpreferencesUpdateEventSeriesPreferences653Cc7EfData = {
	body: UserEventSeriesPreferencesUpdateSchema;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: {
		/**
		 * Overwrite Children
		 */
		overwrite_children?: boolean;
	};
	url: '/api/preferences/event-series/{series_id}';
};

export type UserpreferencesUpdateEventSeriesPreferences653Cc7EfResponses = {
	/**
	 * OK
	 */
	200: UserEventSeriesPreferencesSchema;
};

export type UserpreferencesUpdateEventSeriesPreferences653Cc7EfResponse =
	UserpreferencesUpdateEventSeriesPreferences653Cc7EfResponses[keyof UserpreferencesUpdateEventSeriesPreferences653Cc7EfResponses];

export type UserpreferencesGetEventPreferences95Ff20B8Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/preferences/event/{event_id}';
};

export type UserpreferencesGetEventPreferences95Ff20B8Responses = {
	/**
	 * OK
	 */
	200: UserEventPreferencesSchema;
};

export type UserpreferencesGetEventPreferences95Ff20B8Response =
	UserpreferencesGetEventPreferences95Ff20B8Responses[keyof UserpreferencesGetEventPreferences95Ff20B8Responses];

export type UserpreferencesUpdateEventPreferencesDba91De8Data = {
	body: UserEventPreferencesUpdateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Overwrite Children
		 */
		overwrite_children?: boolean;
	};
	url: '/api/preferences/event/{event_id}';
};

export type UserpreferencesUpdateEventPreferencesDba91De8Responses = {
	/**
	 * OK
	 */
	200: UserEventPreferencesSchema;
};

export type UserpreferencesUpdateEventPreferencesDba91De8Response =
	UserpreferencesUpdateEventPreferencesDba91De8Responses[keyof UserpreferencesUpdateEventPreferencesDba91De8Responses];

export type StripewebhookHandleWebhook80D89D8aData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/stripe/webhook';
};

export type StripewebhookHandleWebhook80D89D8aResponses = {
	/**
	 * OK
	 */
	200: unknown;
};

export type TagListTags989E098bData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/tags/';
};

export type TagListTags989E098bResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaTagSchema;
};

export type TagListTags989E098bResponse =
	TagListTags989E098bResponses[keyof TagListTags989E098bResponses];

export type CityListCitiesF6E7D5C4Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Country
		 */
		country?: string | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/cities/';
};

export type CityListCitiesF6E7D5C4Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaCitySchema;
};

export type CityListCitiesF6E7D5C4Response =
	CityListCitiesF6E7D5C4Responses[keyof CityListCitiesF6E7D5C4Responses];

export type CityListCountriesE81Eb06dData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/cities/countries';
};

export type CityListCountriesE81Eb06dResponses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<string>;
};

export type CityListCountriesE81Eb06dResponse =
	CityListCountriesE81Eb06dResponses[keyof CityListCountriesE81Eb06dResponses];

export type CityGetCityDa3Cef2bData = {
	body?: never;
	path: {
		/**
		 * City Id
		 */
		city_id: number;
	};
	query?: never;
	url: '/api/cities/{city_id}';
};

export type CityGetCityDa3Cef2bResponses = {
	/**
	 * OK
	 */
	200: CitySchema;
};

export type CityGetCityDa3Cef2bResponse =
	CityGetCityDa3Cef2bResponses[keyof CityGetCityDa3Cef2bResponses];
