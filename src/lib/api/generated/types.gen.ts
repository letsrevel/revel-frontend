// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
	baseUrl: 'http://localhost:8000' | (string & {});
};

/**
 * VersionResponse
 */
export type VersionResponse = {
	/**
	 * Version
	 */
	version: string;
};

/**
 * ResponseOk
 */
export type ResponseOk = {
	/**
	 * Status
	 */
	status?: 'ok';
};

/**
 * TempToken
 */
export type TempToken = {
	/**
	 * Token
	 *
	 * The temporary token to be used with OTP.
	 */
	token: string;
	/**
	 * Type
	 */
	type?: 'otp';
};

/**
 * TokenObtainPairOutputSchema
 */
export type TokenObtainPairOutputSchema = {
	/**
	 * Username
	 *
	 * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
	 */
	username: string;
	/**
	 * Refresh
	 */
	refresh: string;
	/**
	 * Access
	 */
	access: string;
};

/**
 * TokenObtainPairInputSchema
 */
export type TokenObtainPairInputSchema = {
	/**
	 * Password
	 */
	password: string;
	/**
	 * Username
	 *
	 * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
	 */
	username: string;
};

/**
 * TokenRefreshOutputSchema
 */
export type TokenRefreshOutputSchema = {
	/**
	 * Refresh
	 */
	refresh: string;
	/**
	 * Access
	 */
	access: string | null;
};

/**
 * TokenRefreshInputSchema
 */
export type TokenRefreshInputSchema = {
	/**
	 * Refresh
	 */
	refresh: string;
};

/**
 * DemoLoginSchema
 */
export type DemoLoginSchema = {
	/**
	 * Username
	 */
	username: string;
	/**
	 * Password
	 */
	password: string;
};

/**
 * TempTokenWithTOTP
 */
export type TempTokenWithTotp = {
	/**
	 * Token
	 */
	token: string;
	/**
	 * Otp
	 *
	 * The one-time password to verify.
	 */
	otp: string;
};

/**
 * GoogleIDTokenSchema
 */
export type GoogleIdTokenSchema = {
	/**
	 * Id Token
	 *
	 * The Google ID token to verify.
	 */
	id_token: string;
};

/**
 * TOTPProvisioningUriSchema
 */
export type TotpProvisioningUriSchema = {
	/**
	 * Uri
	 *
	 * The provisioning URI for the TOTP app, to be rendered in a QR code.
	 */
	uri: string;
};

/**
 * RevelUserSchema
 */
export type RevelUserSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Email
	 */
	email: string;
	/**
	 * Email Verified
	 */
	email_verified: boolean;
	/**
	 * Preferred Name
	 */
	preferred_name: string;
	/**
	 * Pronouns
	 */
	pronouns: string;
	/**
	 * Is Active
	 */
	is_active: boolean;
	/**
	 * First Name
	 */
	first_name: string;
	/**
	 * Last Name
	 */
	last_name: string;
	/**
	 * Totp Active
	 */
	totp_active: boolean;
};

/**
 * OTPVerifySchema
 */
export type OtpVerifySchema = {
	/**
	 * Otp
	 *
	 * The one-time password to verify.
	 */
	otp: string;
};

/**
 * ResponseMessage
 */
export type ResponseMessage = {
	/**
	 * Message
	 */
	message: string;
};

/**
 * ProfileUpdateSchema
 *
 * Schema for updating user profile information.
 */
export type ProfileUpdateSchema = {
	/**
	 * Preferred Name
	 *
	 * User's preferred name
	 */
	preferred_name: string;
	/**
	 * Pronouns
	 *
	 * User's pronouns
	 */
	pronouns: string;
	/**
	 * First Name
	 *
	 * User's first name
	 */
	first_name: string;
	/**
	 * Last Name
	 *
	 * User's last name
	 */
	last_name: string;
};

/**
 * RegisterUserSchema
 */
export type RegisterUserSchema = {
	/**
	 * Password1
	 *
	 * Password
	 */
	password1: string;
	/**
	 * Password2
	 *
	 * Password confirmation
	 */
	password2: string;
	/**
	 * Email
	 */
	email: string;
	/**
	 * First Name
	 */
	first_name?: string;
	/**
	 * Last Name
	 */
	last_name?: string;
};

/**
 * VerifyEmailResponseSchema
 */
export type VerifyEmailResponseSchema = {
	user: RevelUserSchema;
	token: TokenObtainPairOutputSchema;
};

/**
 * VerifyEmailSchema
 */
export type VerifyEmailSchema = {
	/**
	 * Token
	 */
	token: string;
};

/**
 * DeleteAccountConfirmSchema
 */
export type DeleteAccountConfirmSchema = {
	/**
	 * Token
	 */
	token: string;
};

/**
 * PasswordResetRequestSchema
 */
export type PasswordResetRequestSchema = {
	/**
	 * Email
	 */
	email: string;
};

/**
 * PasswordResetSchema
 */
export type PasswordResetSchema = {
	/**
	 * Password1
	 *
	 * Password
	 */
	password1: string;
	/**
	 * Password2
	 *
	 * Password confirmation
	 */
	password2: string;
	/**
	 * Token
	 */
	token: string;
};

/**
 * DashboardOrganizationsFiltersSchema
 */
export type DashboardOrganizationsFiltersSchema = {
	/**
	 * Owner
	 */
	owner?: boolean;
	/**
	 * Staff
	 */
	staff?: boolean;
	/**
	 * Member
	 */
	member?: boolean;
	/**
	 * Subscriber
	 */
	subscriber?: boolean;
};

/**
 * DynamicInput
 */
export type DynamicInput = {
	/**
	 * Page
	 */
	page?: number;
	/**
	 * Page Size
	 */
	page_size?: number;
};

/**
 * Input
 */
export type Input = {
	/**
	 * Search
	 */
	search?: string | null;
};

/**
 * CitySchema
 */
export type CitySchema = {
	/**
	 * ID
	 */
	id?: number | null;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Country
	 */
	country: string;
	/**
	 * Admin Name
	 */
	admin_name?: string | null;
};

/**
 * OrganizationRetrieveSchema
 */
export type OrganizationRetrieveSchema = {
	/**
	 * Tags
	 */
	tags?: Array<string>;
	city?: CitySchema | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Id
	 */
	id: string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Slug
	 */
	slug: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Logo
	 */
	logo?: string | null;
	/**
	 * Cover Art
	 */
	cover_art?: string | null;
	visibility: Visibility;
	/**
	 * Is Stripe Connected
	 */
	is_stripe_connected: boolean;
};

/**
 * PaginatedResponseSchema[OrganizationRetrieveSchema]
 */
export type PaginatedResponseSchemaOrganizationRetrieveSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<OrganizationRetrieveSchema>;
};

/**
 * Visibility
 */
export type Visibility = 'public' | 'private' | 'members-only' | 'staff-only';

/**
 * DashboardEventsFiltersSchema
 */
export type DashboardEventsFiltersSchema = {
	/**
	 * Owner
	 */
	owner?: boolean;
	/**
	 * Staff
	 */
	staff?: boolean;
	/**
	 * Member
	 */
	member?: boolean;
	/**
	 * Rsvp Yes
	 */
	rsvp_yes?: boolean;
	/**
	 * Rsvp No
	 */
	rsvp_no?: boolean;
	/**
	 * Rsvp Maybe
	 */
	rsvp_maybe?: boolean;
	/**
	 * Got Ticket
	 */
	got_ticket?: boolean;
	/**
	 * Got Invitation
	 */
	got_invitation?: boolean;
	/**
	 * Subscriber
	 */
	subscriber?: boolean;
};

/**
 * EventInListSchema
 */
export type EventInListSchema = {
	/**
	 * Tags
	 */
	tags?: Array<string>;
	city?: CitySchema | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Id
	 */
	id: string;
	event_type: Types;
	visibility: Visibility;
	organization: OrganizationRetrieveSchema;
	status: Status;
	event_series?: EventSeriesRetrieveSchema | null;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Slug
	 */
	slug: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Invitation Message
	 */
	invitation_message?: string | null;
	/**
	 * Invitation Message Html
	 */
	invitation_message_html?: string;
	/**
	 * Max Attendees
	 */
	max_attendees?: number;
	/**
	 * Waitlist Open
	 */
	waitlist_open?: boolean | null;
	/**
	 * Start
	 */
	start: string;
	/**
	 * End
	 */
	end: string;
	/**
	 * Rsvp Before
	 */
	rsvp_before?: string | null;
	/**
	 * Logo
	 */
	logo?: string | null;
	/**
	 * Cover Art
	 */
	cover_art?: string | null;
	/**
	 * Free For Members
	 */
	free_for_members: boolean;
	/**
	 * Free For Staff
	 */
	free_for_staff: boolean;
	/**
	 * Requires Ticket
	 */
	requires_ticket: boolean;
	/**
	 * Potluck Open
	 */
	potluck_open: boolean;
	/**
	 * Attendee Count
	 */
	attendee_count: number;
};

/**
 * EventSeriesRetrieveSchema
 */
export type EventSeriesRetrieveSchema = {
	/**
	 * Tags
	 */
	tags?: Array<string>;
	/**
	 * Id
	 */
	id: string;
	organization: OrganizationRetrieveSchema;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Slug
	 */
	slug: string;
	/**
	 * Logo
	 */
	logo?: string | null;
	/**
	 * Cover Art
	 */
	cover_art?: string | null;
};

/**
 * PaginatedResponseSchema[EventInListSchema]
 */
export type PaginatedResponseSchemaEventInListSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<EventInListSchema>;
};

/**
 * Status
 */
export type Status = 'approved' | 'rejected' | 'pending review';

/**
 * Types
 */
export type Types = 'public' | 'private' | 'members-only';

/**
 * DashboardEventSeriesFiltersSchema
 */
export type DashboardEventSeriesFiltersSchema = {
	/**
	 * Owner
	 */
	owner?: boolean;
	/**
	 * Staff
	 */
	staff?: boolean;
	/**
	 * Member
	 */
	member?: boolean;
	/**
	 * Subscriber
	 */
	subscriber?: boolean;
};

/**
 * InvitationSchema
 */
export type InvitationSchema = {
	/**
	 * Waives Questionnaire
	 */
	waives_questionnaire?: boolean;
	/**
	 * Waives Purchase
	 */
	waives_purchase?: boolean;
	/**
	 * Overrides Max Attendees
	 */
	overrides_max_attendees?: boolean;
	/**
	 * Waives Membership Required
	 */
	waives_membership_required?: boolean;
	/**
	 * Waives Rsvp Deadline
	 */
	waives_rsvp_deadline?: boolean;
	/**
	 * Custom Message
	 */
	custom_message?: string | null;
	event: EventInListSchema;
	tier?: TierSchema | null;
	/**
	 * User Id
	 */
	user_id: string;
};

/**
 * PaginatedResponseSchema[InvitationSchema]
 */
export type PaginatedResponseSchemaInvitationSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<InvitationSchema>;
};

/**
 * TierSchema
 */
export type TierSchema = {
	/**
	 * Event Id
	 */
	event_id: string;
	/**
	 * Price
	 */
	price: number | string;
	/**
	 * Currency
	 */
	currency: string;
	/**
	 * Total Available
	 */
	total_available: number | null;
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Price Type
	 *
	 * Whether this tier has a fixed price or allows pay-what-you-can pricing
	 */
	price_type?: string;
	/**
	 * Pwyc Min
	 *
	 * Minimum amount for pay-what-you-can pricing
	 */
	pwyc_min?: number | string;
	/**
	 * Pwyc Max
	 *
	 * Maximum amount for pay-what-you-can pricing (optional)
	 */
	pwyc_max?: number | string | null;
	/**
	 * Sales Start At
	 *
	 * When ticket sales begin for this tier
	 */
	sales_start_at?: string | null;
	/**
	 * Sales End At
	 *
	 * When ticket sales end for this tier
	 */
	sales_end_at?: string | null;
	/**
	 * Purchasable By
	 */
	purchasable_by?: string;
	/**
	 * Payment Method
	 */
	payment_method?: string;
};

/**
 * OrganizationFilterSchema
 */
export type OrganizationFilterSchema = {
	/**
	 * Country
	 */
	country?: string | null;
	/**
	 * City Id
	 */
	city_id?: number | null;
	/**
	 * Tags
	 */
	tags?: Array<string> | null;
};

/**
 * ResourceFilterSchema
 */
export type ResourceFilterSchema = {
	resource_type?: ResourceTypes | null;
};

/**
 * ResourceTypes
 */
export type ResourceTypes = 'file' | 'link' | 'text';

/**
 * AdditionalResourceSchema
 */
export type AdditionalResourceSchema = {
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Text Html
	 */
	text_html?: string;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Resource Type
	 */
	resource_type: string;
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * File
	 */
	file?: string | null;
	/**
	 * Link
	 */
	link?: string | null;
	/**
	 * Text
	 */
	text?: string | null;
	/**
	 * Visibility
	 */
	visibility?: string;
	/**
	 * Display On Organization Page
	 *
	 * Whether the resource should be displayed on organization pages.
	 */
	display_on_organization_page?: boolean;
};

/**
 * PaginatedResponseSchema[AdditionalResourceSchema]
 */
export type PaginatedResponseSchemaAdditionalResourceSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<AdditionalResourceSchema>;
};

/**
 * MinimalRevelUserSchema
 */
export type MinimalRevelUserSchema = {
	/**
	 * Preferred Name
	 *
	 * Preferred name
	 */
	preferred_name?: string | null;
	/**
	 * Pronouns
	 *
	 * Pronouns
	 */
	pronouns?: string | null;
	/**
	 * First Name
	 */
	first_name?: string | null;
	/**
	 * Last Name
	 */
	last_name?: string | null;
};

/**
 * OrganizationMembershipRequestRetrieve
 */
export type OrganizationMembershipRequestRetrieve = {
	user: MinimalRevelUserSchema;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Status
	 */
	status?: string;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * OrganizationEditSchema
 */
export type OrganizationEditSchema = {
	/**
	 * City Id
	 */
	city_id?: number | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Description
	 */
	description?: string;
	visibility: Visibility;
	/**
	 * Platform Fee Percent
	 */
	platform_fee_percent?: number | string | null;
};

/**
 * StripeOnboardingLinkSchema
 */
export type StripeOnboardingLinkSchema = {
	/**
	 * Onboarding Url
	 */
	onboarding_url: string;
};

/**
 * StripeAccountStatusSchema
 */
export type StripeAccountStatusSchema = {
	/**
	 * Is Connected
	 */
	is_connected: boolean;
	/**
	 * Charges Enabled
	 */
	charges_enabled?: boolean;
	/**
	 * Details Submitted
	 */
	details_submitted?: boolean;
};

/**
 * ValidationErrorResponse
 */
export type ValidationErrorResponse = {
	/**
	 * Errors
	 */
	errors: {
		[key: string]: string | Array<string>;
	};
};

/**
 * EventSeriesEditSchema
 */
export type EventSeriesEditSchema = {
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
};

/**
 * EventDetailSchema
 */
export type EventDetailSchema = {
	/**
	 * Tags
	 */
	tags?: Array<string>;
	city?: CitySchema | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Id
	 */
	id: string;
	event_type: Types;
	visibility: Visibility;
	organization: OrganizationRetrieveSchema;
	status: Status;
	event_series?: EventSeriesRetrieveSchema | null;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Slug
	 */
	slug: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Invitation Message
	 */
	invitation_message?: string | null;
	/**
	 * Invitation Message Html
	 */
	invitation_message_html?: string;
	/**
	 * Max Attendees
	 */
	max_attendees?: number;
	/**
	 * Waitlist Open
	 */
	waitlist_open?: boolean | null;
	/**
	 * Start
	 */
	start: string;
	/**
	 * End
	 */
	end: string;
	/**
	 * Rsvp Before
	 */
	rsvp_before?: string | null;
	/**
	 * Logo
	 */
	logo?: string | null;
	/**
	 * Cover Art
	 */
	cover_art?: string | null;
	/**
	 * Free For Members
	 */
	free_for_members: boolean;
	/**
	 * Free For Staff
	 */
	free_for_staff: boolean;
	/**
	 * Requires Ticket
	 */
	requires_ticket: boolean;
	/**
	 * Potluck Open
	 */
	potluck_open: boolean;
	/**
	 * Attendee Count
	 */
	attendee_count: number;
};

/**
 * EventCreateSchema
 */
export type EventCreateSchema = {
	/**
	 * City Id
	 */
	city_id?: number | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
	event_type?: Types | null;
	status?: Status;
	visibility?: Visibility | null;
	/**
	 * Invitation Message
	 *
	 * Invitation message
	 */
	invitation_message?: string | null;
	/**
	 * Max Attendees
	 */
	max_attendees?: number;
	/**
	 * Waitlist Open
	 */
	waitlist_open?: boolean | null;
	/**
	 * Start
	 */
	start: string;
	/**
	 * End
	 */
	end?: string | null;
	/**
	 * Rsvp Before
	 *
	 * RSVP deadline for events that do not require tickets
	 */
	rsvp_before?: string | null;
	/**
	 * Check In Starts At
	 *
	 * When check-in opens for this event
	 */
	check_in_starts_at?: string | null;
	/**
	 * Check In Ends At
	 *
	 * When check-in closes for this event
	 */
	check_in_ends_at?: string | null;
	/**
	 * Event Series Id
	 */
	event_series_id?: string | null;
	/**
	 * Free For Members
	 */
	free_for_members?: boolean;
	/**
	 * Free For Staff
	 */
	free_for_staff?: boolean;
	/**
	 * Requires Ticket
	 */
	requires_ticket?: boolean;
	/**
	 * Potluck Open
	 */
	potluck_open?: boolean;
};

/**
 * OrganizationTokenFilterSchema
 */
export type OrganizationTokenFilterSchema = {
	/**
	 * Is Active
	 */
	is_active?: boolean | null;
	/**
	 * Organization Id
	 */
	organization_id?: string | null;
	/**
	 * Membership Pass
	 */
	membership_pass?: boolean | null;
};

/**
 * OrganizationTokenSchema
 */
export type OrganizationTokenSchema = {
	/**
	 * Created At
	 */
	created_at: string;
	/**
	 * Updated At
	 */
	updated_at: string;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Issuer
	 */
	issuer: string;
	/**
	 * Expires At
	 */
	expires_at?: string | null;
	/**
	 * Uses
	 */
	uses?: number;
	/**
	 * Max Uses
	 *
	 * The maximum number of invites allowed for this token. 0 Means unlimited.
	 */
	max_uses?: number;
	/**
	 * Organization
	 */
	organization: string;
	/**
	 * Grants Membership
	 */
	grants_membership?: boolean;
	/**
	 * Grants Staff Status
	 */
	grants_staff_status?: boolean;
};

/**
 * PaginatedResponseSchema[OrganizationTokenSchema]
 */
export type PaginatedResponseSchemaOrganizationTokenSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<OrganizationTokenSchema>;
};

/**
 * OrganizationTokenCreateSchema
 */
export type OrganizationTokenCreateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Max Uses
	 */
	max_uses?: number;
	/**
	 * Grants Membership
	 */
	grants_membership?: boolean;
	/**
	 * Grants Staff Status
	 */
	grants_staff_status?: boolean;
	/**
	 * Duration
	 */
	duration?: number;
};

/**
 * OrganizationTokenUpdateSchema
 */
export type OrganizationTokenUpdateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Max Uses
	 */
	max_uses?: number;
	/**
	 * Grants Membership
	 */
	grants_membership?: boolean;
	/**
	 * Grants Staff Status
	 */
	grants_staff_status?: boolean;
	/**
	 * Expires At
	 */
	expires_at?: string | null;
};

/**
 * PaginatedResponseSchema[OrganizationMembershipRequestRetrieve]
 */
export type PaginatedResponseSchemaOrganizationMembershipRequestRetrieve = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<OrganizationMembershipRequestRetrieve>;
};

/**
 * AdditionalResourceCreateSchema
 */
export type AdditionalResourceCreateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Description
	 */
	description?: string | null;
	resource_type: ResourceTypes;
	visibility?: Visibility;
	/**
	 * Display On Organization Page
	 */
	display_on_organization_page?: boolean;
	/**
	 * Link
	 */
	link?: string | null;
	/**
	 * Text
	 */
	text?: string | null;
	/**
	 * Event Series Ids
	 */
	event_series_ids?: Array<string>;
	/**
	 * Event Ids
	 */
	event_ids?: Array<string>;
};

/**
 * AdditionalResourceUpdateSchema
 */
export type AdditionalResourceUpdateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Description
	 */
	description?: string | null;
	visibility?: Visibility | null;
	/**
	 * Display On Organization Page
	 */
	display_on_organization_page?: boolean | null;
	/**
	 * Link
	 */
	link?: string | null;
	/**
	 * Text
	 */
	text?: string | null;
	/**
	 * Event Series Ids
	 */
	event_series_ids?: Array<string> | null;
	/**
	 * Event Ids
	 */
	event_ids?: Array<string> | null;
};

/**
 * MemberUserSchema
 */
export type MemberUserSchema = {
	/**
	 * Email Address
	 */
	email?: string | null;
	/**
	 * Phone Number
	 *
	 * Phone number
	 */
	phone_number?: string | null;
	/**
	 * Preferred Name
	 *
	 * Preferred name
	 */
	preferred_name?: string | null;
	/**
	 * Pronouns
	 *
	 * Pronouns
	 */
	pronouns?: string | null;
	/**
	 * First Name
	 */
	first_name?: string | null;
	/**
	 * Last Name
	 */
	last_name?: string | null;
};

/**
 * OrganizationMemberSchema
 */
export type OrganizationMemberSchema = {
	user: MemberUserSchema;
	/**
	 * Member Since
	 */
	member_since: string;
};

/**
 * PaginatedResponseSchema[OrganizationMemberSchema]
 */
export type PaginatedResponseSchemaOrganizationMemberSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<OrganizationMemberSchema>;
};

/**
 * OrganizationStaffSchema
 */
export type OrganizationStaffSchema = {
	user: MemberUserSchema;
	/**
	 * Staff Since
	 */
	staff_since: string;
	permissions: PermissionsSchema;
};

/**
 * PaginatedResponseSchema[OrganizationStaffSchema]
 */
export type PaginatedResponseSchemaOrganizationStaffSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<OrganizationStaffSchema>;
};

/**
 * PermissionMap
 */
export type PermissionMap = {
	/**
	 * Create Event
	 */
	create_event?: boolean;
	/**
	 * Create Event Series
	 */
	create_event_series?: boolean;
	/**
	 * Edit Event Series
	 */
	edit_event_series?: boolean;
	/**
	 * Delete Event Series
	 */
	delete_event_series?: boolean;
	/**
	 * Edit Event
	 */
	edit_event?: boolean;
	/**
	 * Delete Event
	 */
	delete_event?: boolean;
	/**
	 * Open Event
	 */
	open_event?: boolean;
	/**
	 * Manage Tickets
	 */
	manage_tickets?: boolean;
	/**
	 * Close Event
	 */
	close_event?: boolean;
	/**
	 * Manage Event
	 */
	manage_event?: boolean;
	/**
	 * Check In Attendees
	 */
	check_in_attendees?: boolean;
	/**
	 * Invite To Event
	 */
	invite_to_event?: boolean;
	/**
	 * Edit Organization
	 */
	edit_organization?: boolean;
	/**
	 * Manage Members
	 */
	manage_members?: boolean;
	/**
	 * Manage Potluck
	 */
	manage_potluck?: boolean;
	/**
	 * Create Questionnaire
	 */
	create_questionnaire?: boolean;
	/**
	 * Edit Questionnaire
	 */
	edit_questionnaire?: boolean;
	/**
	 * Delete Questionnaire
	 */
	delete_questionnaire?: boolean;
	/**
	 * Evaluate Questionnaire
	 */
	evaluate_questionnaire?: boolean;
	/**
	 * Manage Membership
	 */
	manage_membership?: boolean;
};

/**
 * PermissionsSchema
 */
export type PermissionsSchema = {
	default?: PermissionMap;
	/**
	 * Event Overrides
	 */
	event_overrides?: {
		[key: string]: PermissionMap;
	};
};

/**
 * TagSchema
 */
export type TagSchema = {
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Color
	 *
	 * Hex color (e.g. #FF0099)
	 */
	color?: string | null;
	/**
	 * Icon
	 *
	 * Optional icon name
	 */
	icon?: string | null;
};

/**
 * TagUpdateSchema
 */
export type TagUpdateSchema = {
	/**
	 * Tags
	 *
	 * A list of tag names to add or remove.
	 */
	tags: Array<string>;
};

/**
 * EventFilterSchema
 */
export type EventFilterSchema = {
	/**
	 * Country
	 */
	country?: string | null;
	/**
	 * City Id
	 */
	city_id?: number | null;
	/**
	 * Organization
	 */
	organization?: string | null;
	event_type?: Types | null;
	visibility?: Visibility | null;
	/**
	 * Event Series
	 */
	event_series?: string | null;
	/**
	 * Next Events
	 */
	next_events?: boolean | null;
	/**
	 * Past Events
	 */
	past_events?: boolean | null;
	status?: Status | null;
	/**
	 * Tags
	 */
	tags?: Array<string> | null;
};

/**
 * MinimalEventSchema
 */
export type MinimalEventSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Slug
	 */
	slug: string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Start
	 */
	start?: string | null;
	/**
	 * Logo
	 */
	logo?: string | null;
};

/**
 * PaginatedResponseSchema[MinimalRevelUserSchema]
 */
export type PaginatedResponseSchemaMinimalRevelUserSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<MinimalRevelUserSchema>;
};

/**
 * EventRSVPSchema
 */
export type EventRsvpSchema = {
	/**
	 * Event Id
	 */
	event_id: string;
	status: Status;
};

/**
 * EventTicketSchema
 */
export type EventTicketSchema = {
	/**
	 * Event Id
	 */
	event_id: string | null;
	tier?: TierSchema | null;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Status
	 */
	status?: string;
	/**
	 * Checked In At
	 */
	checked_in_at?: string | null;
};

/**
 * EventUserEligibility
 */
export type EventUserEligibility = {
	/**
	 * Allowed
	 */
	allowed: boolean;
	/**
	 * Event Id
	 */
	event_id: string;
	/**
	 * Reason
	 */
	reason?: string | null;
	next_step?: NextStep | null;
	/**
	 * Questionnaires Missing
	 */
	questionnaires_missing?: Array<string> | null;
	/**
	 * Questionnaires Pending Review
	 */
	questionnaires_pending_review?: Array<string> | null;
	/**
	 * Questionnaires Failed
	 */
	questionnaires_failed?: Array<string> | null;
	/**
	 * Retry On
	 */
	retry_on?: string | null;
};

/**
 * NextStep
 */
export type NextStep =
	| 'request_invitation'
	| 'become_member'
	| 'complete_questionnaire'
	| 'wait_for_questionnaire_evaluation'
	| 'wait_to_retake_questionnaire'
	| 'wait_for_event_to_open'
	| 'join_waitlist'
	| 'purchase_ticket'
	| 'rsvp';

/**
 * EventInvitationRequestSchema
 */
export type EventInvitationRequestSchema = {
	user: MinimalRevelUserSchema;
	event: EventInListSchema;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Message
	 */
	message?: string | null;
	/**
	 * Status
	 */
	status?: string;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * EventInvitationRequestCreateSchema
 */
export type EventInvitationRequestCreateSchema = {
	/**
	 * Message
	 */
	message?: string | null;
};

/**
 * PaginatedResponseSchema[EventInvitationRequestSchema]
 */
export type PaginatedResponseSchemaEventInvitationRequestSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<EventInvitationRequestSchema>;
};

/**
 * StripeCheckoutSessionSchema
 */
export type StripeCheckoutSessionSchema = {
	/**
	 * Checkout Url
	 */
	checkout_url: string;
};

/**
 * PWYCCheckoutPayloadSchema
 *
 * Schema for Pay What You Can checkout payload.
 */
export type PwycCheckoutPayloadSchema = {
	/**
	 * Pwyc
	 *
	 * Pay what you can amount, minimum 1
	 */
	pwyc: number | string;
};

/**
 * FreeTextQuestionSchema
 */
export type FreeTextQuestionSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Question
	 */
	question: string;
	/**
	 * Is Mandatory
	 */
	is_mandatory: boolean;
	/**
	 * Order
	 */
	order: number;
};

/**
 * MultipleChoiceOptionSchema
 */
export type MultipleChoiceOptionSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Option
	 */
	option: string;
	/**
	 * Order
	 */
	order: number;
};

/**
 * MultipleChoiceQuestionSchema
 */
export type MultipleChoiceQuestionSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Question
	 */
	question: string;
	/**
	 * Is Mandatory
	 */
	is_mandatory: boolean;
	/**
	 * Order
	 */
	order: number;
	/**
	 * Allow Multiple Answers
	 */
	allow_multiple_answers: boolean;
	/**
	 * Options
	 */
	options: Array<MultipleChoiceOptionSchema>;
};

/**
 * QuestionnaireSchema
 */
export type QuestionnaireSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Multiple Choice Questions
	 */
	multiple_choice_questions?: Array<MultipleChoiceQuestionSchema>;
	/**
	 * Free Text Questions
	 */
	free_text_questions?: Array<FreeTextQuestionSchema>;
	/**
	 * Sections
	 */
	sections?: Array<SectionSchema>;
};

/**
 * SectionSchema
 */
export type SectionSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Multiple Choice Questions
	 */
	multiple_choice_questions?: Array<MultipleChoiceQuestionSchema>;
	/**
	 * Free Text Questions
	 */
	free_text_questions?: Array<FreeTextQuestionSchema>;
	/**
	 * Order
	 */
	order: number;
};

/**
 * QuestionnaireEvaluationForUserSchema
 */
export type QuestionnaireEvaluationForUserSchema = {
	submission: QuestionnaireSubmissionResponseSchema;
	/**
	 * Score
	 */
	score: number | string;
	status: QuestionnairesModelsQuestionnaireEvaluationStatus;
};

/**
 * QuestionnaireSubmissionResponseSchema
 */
export type QuestionnaireSubmissionResponseSchema = {
	/**
	 * Questionnaire Id
	 */
	questionnaire_id: string;
	status: QuestionnairesModelsQuestionnaireSubmissionStatus;
	/**
	 * Submitted At
	 */
	submitted_at: string;
};

/**
 * Status
 */
export type QuestionnairesModelsQuestionnaireEvaluationStatus =
	| 'approved'
	| 'rejected'
	| 'pending review';

/**
 * Status
 */
export type QuestionnairesModelsQuestionnaireSubmissionStatus = 'draft' | 'ready';

/**
 * FreeTextSubmissionSchema
 */
export type FreeTextSubmissionSchema = {
	/**
	 * Question Id
	 */
	question_id: string;
	/**
	 * Answer
	 */
	answer: string;
};

/**
 * MultipleChoiceSubmissionSchema
 */
export type MultipleChoiceSubmissionSchema = {
	/**
	 * Question Id
	 */
	question_id: string;
	/**
	 * Options Id
	 */
	options_id: Array<string>;
};

/**
 * QuestionnaireSubmissionSchema
 */
export type QuestionnaireSubmissionSchema = {
	/**
	 * Questionnaire Id
	 */
	questionnaire_id: string;
	/**
	 * Multiple Choice Answers
	 */
	multiple_choice_answers?: Array<MultipleChoiceSubmissionSchema>;
	/**
	 * Free Text Answers
	 */
	free_text_answers?: Array<FreeTextSubmissionSchema>;
	status: Status;
};

/**
 * EventTokenSchema
 */
export type EventTokenSchema = {
	/**
	 * Created At
	 */
	created_at: string;
	/**
	 * Updated At
	 */
	updated_at: string;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Issuer
	 */
	issuer: string;
	/**
	 * Expires At
	 */
	expires_at?: string | null;
	/**
	 * Uses
	 */
	uses?: number;
	/**
	 * Max Uses
	 *
	 * The maximum number of invites allowed for this token. 0 Means unlimited.
	 */
	max_uses?: number;
	/**
	 * Event
	 */
	event: string;
	/**
	 * Grants Invitation
	 */
	grants_invitation?: boolean;
	/**
	 * Invitation Tier
	 */
	invitation_tier?: string | null;
	/**
	 * Invitation Payload
	 *
	 * If provided, the token will we viable to claim invitations.
	 */
	invitation_payload?: {
		[key: string]: unknown;
	} | null;
};

/**
 * EventTokenUpdateSchema
 */
export type EventTokenUpdateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Max Uses
	 */
	max_uses?: number;
	invitation?: InvitationBaseSchema | null;
	/**
	 * Invitation Tier Id
	 */
	invitation_tier_id?: string | null;
	/**
	 * Expires At
	 */
	expires_at?: string | null;
};

/**
 * InvitationBaseSchema
 */
export type InvitationBaseSchema = {
	/**
	 * Waives Questionnaire
	 */
	waives_questionnaire?: boolean;
	/**
	 * Waives Purchase
	 */
	waives_purchase?: boolean;
	/**
	 * Overrides Max Attendees
	 */
	overrides_max_attendees?: boolean;
	/**
	 * Waives Membership Required
	 */
	waives_membership_required?: boolean;
	/**
	 * Waives Rsvp Deadline
	 */
	waives_rsvp_deadline?: boolean;
	/**
	 * Custom Message
	 */
	custom_message?: string | null;
};

/**
 * EventTokenFilterSchema
 */
export type EventTokenFilterSchema = {
	/**
	 * Is Active
	 */
	is_active?: boolean | null;
	/**
	 * Event Id
	 */
	event_id?: string | null;
	/**
	 * Has Invitation
	 */
	has_invitation?: boolean | null;
};

/**
 * PaginatedResponseSchema[EventTokenSchema]
 */
export type PaginatedResponseSchemaEventTokenSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<EventTokenSchema>;
};

/**
 * EventTokenCreateSchema
 */
export type EventTokenCreateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Max Uses
	 */
	max_uses?: number;
	invitation?: InvitationBaseSchema | null;
	/**
	 * Invitation Tier Id
	 */
	invitation_tier_id?: string | null;
	/**
	 * Duration
	 */
	duration?: number;
};

/**
 * EventInvitationRequestInternalSchema
 */
export type EventInvitationRequestInternalSchema = {
	user: MinimalRevelUserSchema;
	event: EventInListSchema;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Message
	 */
	message?: string | null;
	/**
	 * Status
	 */
	status?: string;
	/**
	 * Created At
	 */
	created_at: string;
	decided_by?: MinimalRevelUserSchema | null;
};

/**
 * PaginatedResponseSchema[EventInvitationRequestInternalSchema]
 */
export type PaginatedResponseSchemaEventInvitationRequestInternalSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<EventInvitationRequestInternalSchema>;
};

/**
 * EventEditSchema
 */
export type EventEditSchema = {
	/**
	 * City Id
	 */
	city_id?: number | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Description
	 */
	description?: string | null;
	event_type?: Types | null;
	status?: Status;
	visibility?: Visibility | null;
	/**
	 * Invitation Message
	 *
	 * Invitation message
	 */
	invitation_message?: string | null;
	/**
	 * Max Attendees
	 */
	max_attendees?: number;
	/**
	 * Waitlist Open
	 */
	waitlist_open?: boolean | null;
	/**
	 * Start
	 */
	start?: string | null;
	/**
	 * End
	 */
	end?: string | null;
	/**
	 * Rsvp Before
	 *
	 * RSVP deadline for events that do not require tickets
	 */
	rsvp_before?: string | null;
	/**
	 * Check In Starts At
	 *
	 * When check-in opens for this event
	 */
	check_in_starts_at?: string | null;
	/**
	 * Check In Ends At
	 *
	 * When check-in closes for this event
	 */
	check_in_ends_at?: string | null;
	/**
	 * Event Series Id
	 */
	event_series_id?: string | null;
	/**
	 * Free For Members
	 */
	free_for_members?: boolean;
	/**
	 * Free For Staff
	 */
	free_for_staff?: boolean;
	/**
	 * Requires Ticket
	 */
	requires_ticket?: boolean;
	/**
	 * Potluck Open
	 */
	potluck_open?: boolean;
};

/**
 * PaginatedResponseSchema[TicketTierDetailSchema]
 */
export type PaginatedResponseSchemaTicketTierDetailSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<TicketTierDetailSchema>;
};

/**
 * TicketTierDetailSchema
 */
export type TicketTierDetailSchema = {
	/**
	 * Event Id
	 */
	event_id: string;
	/**
	 * Total Available
	 */
	total_available?: number | null;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Visibility
	 */
	visibility?: string;
	/**
	 * Payment Method
	 */
	payment_method?: string;
	/**
	 * Purchasable By
	 */
	purchasable_by?: string;
	/**
	 * Price
	 */
	price?: number | string;
	/**
	 * Price Type
	 *
	 * Whether this tier has a fixed price or allows pay-what-you-can pricing
	 */
	price_type?: string;
	/**
	 * Pwyc Min
	 *
	 * Minimum amount for pay-what-you-can pricing
	 */
	pwyc_min?: number | string;
	/**
	 * Pwyc Max
	 *
	 * Maximum amount for pay-what-you-can pricing (optional)
	 */
	pwyc_max?: number | string | null;
	/**
	 * Currency
	 *
	 * ISO 4217 currency code
	 */
	currency?: string;
	/**
	 * Sales Start At
	 *
	 * When ticket sales begin for this tier
	 */
	sales_start_at?: string | null;
	/**
	 * Sales End At
	 *
	 * When ticket sales end for this tier
	 */
	sales_end_at?: string | null;
	/**
	 * Created At
	 */
	created_at: string;
	/**
	 * Updated At
	 */
	updated_at: string;
	/**
	 * Total Quantity
	 */
	total_quantity?: number | null;
	/**
	 * Quantity Sold
	 */
	quantity_sold?: number;
	/**
	 * Manual Payment Instructions
	 */
	manual_payment_instructions?: string | null;
};

/**
 * PaymentMethod
 */
export type PaymentMethod = 'online' | 'offline' | 'at_the_door' | 'free';

/**
 * PriceType
 */
export type PriceType = 'fixed' | 'pwyc';

/**
 * PurchasableBy
 */
export type PurchasableBy = 'public' | 'members' | 'invited' | 'invited_and_members';

/**
 * TicketTierCreateSchema
 */
export type TicketTierCreateSchema = {
	payment_method?: PaymentMethod;
	/**
	 * Price
	 */
	price?: number | string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
	visibility?: Visibility;
	purchasable_by?: PurchasableBy;
	price_type?: PriceType;
	/**
	 * Pwyc Min
	 */
	pwyc_min?: number | string;
	/**
	 * Pwyc Max
	 */
	pwyc_max?: number | string | null;
	/**
	 * Currency
	 */
	currency?: string;
	/**
	 * Sales Start At
	 */
	sales_start_at?: string | null;
	/**
	 * Sales End At
	 */
	sales_end_at?: string | null;
	/**
	 * Total Quantity
	 */
	total_quantity?: number | null;
};

/**
 * TicketTierUpdateSchema
 */
export type TicketTierUpdateSchema = {
	payment_method?: PaymentMethod;
	/**
	 * Price
	 */
	price?: number | string;
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Description
	 */
	description?: string | null;
	visibility?: Visibility | null;
	purchasable_by?: PurchasableBy | null;
	price_type?: PriceType | null;
	/**
	 * Pwyc Min
	 */
	pwyc_min?: number | string | null;
	/**
	 * Pwyc Max
	 */
	pwyc_max?: number | string | null;
	/**
	 * Currency
	 */
	currency?: string | null;
	/**
	 * Sales Start At
	 */
	sales_start_at?: string | null;
	/**
	 * Sales End At
	 */
	sales_end_at?: string | null;
	/**
	 * Total Quantity
	 */
	total_quantity?: number | null;
};

/**
 * PaginatedResponseSchema[PendingTicketSchema]
 */
export type PaginatedResponseSchemaPendingTicketSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<PendingTicketSchema>;
};

/**
 * PendingTicketSchema
 *
 * Schema for pending tickets in admin interface.
 */
export type PendingTicketSchema = {
	user: MemberUserSchema;
	tier: TierSchema;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Status
	 */
	status?: string;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * CheckInResponseSchema
 *
 * Schema for ticket check-in response.
 */
export type CheckInResponseSchema = {
	user: MinimalRevelUserSchema;
	tier?: TierSchema | null;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Status
	 */
	status?: string;
	/**
	 * Checked In At
	 */
	checked_in_at?: string | null;
};

/**
 * CheckInRequestSchema
 *
 * Schema for ticket check-in requests.
 */
export type CheckInRequestSchema = {
	/**
	 * Ticket Id
	 */
	ticket_id: string;
};

/**
 * DirectInvitationResponseSchema
 *
 * Response schema for direct invitation creation.
 */
export type DirectInvitationResponseSchema = {
	/**
	 * Created Invitations
	 *
	 * Number of EventInvitation objects created
	 */
	created_invitations: number;
	/**
	 * Pending Invitations
	 *
	 * Number of PendingEventInvitation objects created
	 */
	pending_invitations: number;
	/**
	 * Total Invited
	 *
	 * Total number of users invited
	 */
	total_invited: number;
};

/**
 * DirectInvitationCreateSchema
 *
 * Schema for creating direct invitations to events.
 */
export type DirectInvitationCreateSchema = {
	/**
	 * Waives Questionnaire
	 */
	waives_questionnaire?: boolean;
	/**
	 * Waives Purchase
	 */
	waives_purchase?: boolean;
	/**
	 * Overrides Max Attendees
	 */
	overrides_max_attendees?: boolean;
	/**
	 * Waives Membership Required
	 */
	waives_membership_required?: boolean;
	/**
	 * Waives Rsvp Deadline
	 */
	waives_rsvp_deadline?: boolean;
	/**
	 * Custom Message
	 */
	custom_message?: string | null;
	/**
	 * Emails
	 *
	 * List of email addresses to invite
	 */
	emails: Array<string>;
	/**
	 * Tier Id
	 *
	 * Ticket tier to assign to invitations
	 */
	tier_id: string;
	/**
	 * Send Notification
	 *
	 * Whether to send notification emails
	 */
	send_notification?: boolean;
};

/**
 * EventInvitationListSchema
 *
 * Schema for listing EventInvitation objects.
 */
export type EventInvitationListSchema = {
	/**
	 * Id
	 */
	id: string;
	user: MinimalRevelUserSchema;
	tier?: TierSchema | null;
	/**
	 * Waives Questionnaire
	 */
	waives_questionnaire: boolean;
	/**
	 * Waives Purchase
	 */
	waives_purchase: boolean;
	/**
	 * Overrides Max Attendees
	 */
	overrides_max_attendees: boolean;
	/**
	 * Waives Membership Required
	 */
	waives_membership_required: boolean;
	/**
	 * Waives Rsvp Deadline
	 */
	waives_rsvp_deadline: boolean;
	/**
	 * Custom Message
	 */
	custom_message?: string | null;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * PaginatedResponseSchema[EventInvitationListSchema]
 */
export type PaginatedResponseSchemaEventInvitationListSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<EventInvitationListSchema>;
};

/**
 * PaginatedResponseSchema[PendingEventInvitationListSchema]
 */
export type PaginatedResponseSchemaPendingEventInvitationListSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<PendingEventInvitationListSchema>;
};

/**
 * PendingEventInvitationListSchema
 *
 * Schema for listing PendingEventInvitation objects.
 */
export type PendingEventInvitationListSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Email
	 */
	email: string;
	tier?: TierSchema | null;
	/**
	 * Waives Questionnaire
	 */
	waives_questionnaire: boolean;
	/**
	 * Waives Purchase
	 */
	waives_purchase: boolean;
	/**
	 * Overrides Max Attendees
	 */
	overrides_max_attendees: boolean;
	/**
	 * Waives Membership Required
	 */
	waives_membership_required: boolean;
	/**
	 * Waives Rsvp Deadline
	 */
	waives_rsvp_deadline: boolean;
	/**
	 * Custom Message
	 */
	custom_message?: string | null;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * OrganizationPermissionsSchema
 */
export type OrganizationPermissionsSchema = {
	/**
	 * Organization Permissions
	 */
	organization_permissions?: {
		[key: string]: PermissionsSchema | 'owner';
	} | null;
};

/**
 * EventSeriesFilterSchema
 */
export type EventSeriesFilterSchema = {
	/**
	 * Organization
	 */
	organization?: string | null;
	/**
	 * Tags
	 */
	tags?: Array<string> | null;
};

/**
 * PaginatedResponseSchema[EventSeriesRetrieveSchema]
 */
export type PaginatedResponseSchemaEventSeriesRetrieveSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<EventSeriesRetrieveSchema>;
};

/**
 * PotluckItemRetrieveSchema
 */
export type PotluckItemRetrieveSchema = {
	/**
	 * Is Assigned
	 */
	is_assigned?: boolean;
	/**
	 * Is Owned
	 */
	is_owned?: boolean;
	/**
	 * Note Html
	 */
	note_html?: string;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Item Type
	 */
	item_type: string;
	/**
	 * Quantity
	 */
	quantity?: string | null;
	/**
	 * Note
	 */
	note?: string | null;
};

/**
 * ItemTypes
 */
export type ItemTypes =
	| 'food'
	| 'main_course'
	| 'side_dish'
	| 'dessert'
	| 'drink'
	| 'alcohol'
	| 'non_alcoholic'
	| 'supplies'
	| 'labor'
	| 'entertainment'
	| 'sexual_health'
	| 'toys'
	| 'care'
	| 'transport'
	| 'misc';

/**
 * PotluckItemCreateSchema
 */
export type PotluckItemCreateSchema = {
	item_type: ItemTypes;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Quantity
	 */
	quantity?: string | null;
	/**
	 * Note
	 */
	note?: string | null;
};

/**
 * EvaluationMode
 */
export type EvaluationMode = 'automatic' | 'manual' | 'hybrid';

/**
 * OrganizationQuestionnaireInListSchema
 */
export type OrganizationQuestionnaireInListSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Events
	 */
	events?: Array<MinimalEventSchema>;
	/**
	 * Event Series
	 */
	event_series?: Array<EventSeriesRetrieveSchema>;
	/**
	 * Max Submission Age
	 */
	max_submission_age?: number | null;
	questionnaire: QuestionnaireInListSchema;
};

/**
 * PaginatedResponseSchema[OrganizationQuestionnaireInListSchema]
 */
export type PaginatedResponseSchemaOrganizationQuestionnaireInListSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<OrganizationQuestionnaireInListSchema>;
};

/**
 * QuestionnaireInListSchema
 */
export type QuestionnaireInListSchema = {
	/**
	 * Name
	 */
	name: string;
	/**
	 * Min Score
	 */
	min_score: number | string;
	/**
	 * Shuffle Questions
	 */
	shuffle_questions?: boolean;
	/**
	 * Shuffle Sections
	 */
	shuffle_sections?: boolean;
	evaluation_mode: EvaluationMode;
	/**
	 * Id
	 */
	id: string;
};

/**
 * FreeTextQuestionCreateSchema
 *
 * Schema for creating a FreeTextQuestion.
 */
export type FreeTextQuestionCreateSchema = {
	/**
	 * Section Id
	 */
	section_id?: string | null;
	/**
	 * Question
	 */
	question: string;
	/**
	 * Is Mandatory
	 */
	is_mandatory?: boolean;
	/**
	 * Order
	 */
	order?: number;
	/**
	 * Positive Weight
	 */
	positive_weight?: number | string;
	/**
	 * Negative Weight
	 */
	negative_weight?: number | string;
	/**
	 * Is Fatal
	 */
	is_fatal?: boolean;
	/**
	 * Llm Guidelines
	 */
	llm_guidelines?: string | null;
};

/**
 * MultipleChoiceOptionCreateSchema
 *
 * Schema for creating a MultipleChoiceOption.
 */
export type MultipleChoiceOptionCreateSchema = {
	/**
	 * Option
	 */
	option: string;
	/**
	 * Is Correct
	 */
	is_correct?: boolean;
	/**
	 * Order
	 */
	order?: number;
};

/**
 * MultipleChoiceQuestionCreateSchema
 *
 * Schema for creating a MultipleChoiceQuestion.
 */
export type MultipleChoiceQuestionCreateSchema = {
	/**
	 * Section Id
	 */
	section_id?: string | null;
	/**
	 * Question
	 */
	question: string;
	/**
	 * Is Mandatory
	 */
	is_mandatory?: boolean;
	/**
	 * Order
	 */
	order?: number;
	/**
	 * Positive Weight
	 */
	positive_weight?: number | string;
	/**
	 * Negative Weight
	 */
	negative_weight?: number | string;
	/**
	 * Is Fatal
	 */
	is_fatal?: boolean;
	/**
	 * Allow Multiple Answers
	 */
	allow_multiple_answers?: boolean;
	/**
	 * Shuffle Options
	 */
	shuffle_options?: boolean;
	/**
	 * Options
	 */
	options: Array<MultipleChoiceOptionCreateSchema>;
};

/**
 * OrganizationQuestionnaireSchema
 */
export type OrganizationQuestionnaireSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Events
	 */
	events?: Array<MinimalEventSchema>;
	/**
	 * Event Series
	 */
	event_series?: Array<EventSeriesRetrieveSchema>;
	/**
	 * Max Submission Age
	 */
	max_submission_age?: number | null;
	questionnaire: QuestionnaireCreateSchema;
};

/**
 * QuestionnaireCreateSchema
 *
 * Schema for creating a new Questionnaire with its sections and questions.
 */
export type QuestionnaireCreateSchema = {
	/**
	 * Name
	 */
	name: string;
	/**
	 * Min Score
	 */
	min_score: number | string;
	/**
	 * Shuffle Questions
	 */
	shuffle_questions?: boolean;
	/**
	 * Shuffle Sections
	 */
	shuffle_sections?: boolean;
	evaluation_mode: EvaluationMode;
	/**
	 * Sections
	 */
	sections?: Array<SectionCreateSchema>;
	/**
	 * Multiplechoicequestion Questions
	 */
	multiplechoicequestion_questions?: Array<MultipleChoiceQuestionCreateSchema>;
	/**
	 * Freetextquestion Questions
	 */
	freetextquestion_questions?: Array<FreeTextQuestionCreateSchema>;
	/**
	 * Llm Guidelines
	 */
	llm_guidelines?: string | null;
	/**
	 * Can Retake After
	 */
	can_retake_after?: number | null;
};

/**
 * SectionCreateSchema
 *
 * Schema for creating a QuestionnaireSection.
 */
export type SectionCreateSchema = {
	/**
	 * Name
	 */
	name: string;
	/**
	 * Order
	 */
	order?: number;
	/**
	 * Multiplechoicequestion Questions
	 */
	multiplechoicequestion_questions?: Array<MultipleChoiceQuestionCreateSchema>;
	/**
	 * Freetextquestion Questions
	 */
	freetextquestion_questions?: Array<FreeTextQuestionCreateSchema>;
};

/**
 * SectionUpdateSchema
 *
 * Schema for updating a Section.
 */
export type SectionUpdateSchema = {
	/**
	 * Name
	 */
	name: string;
	/**
	 * Order
	 */
	order?: number;
	/**
	 * Multiplechoicequestion Questions
	 */
	multiplechoicequestion_questions?: Array<MultipleChoiceQuestionCreateSchema>;
	/**
	 * Freetextquestion Questions
	 */
	freetextquestion_questions?: Array<FreeTextQuestionCreateSchema>;
};

/**
 * MultipleChoiceQuestionUpdateSchema
 *
 * Schema for updating a MultipleChoiceQuestion.
 */
export type MultipleChoiceQuestionUpdateSchema = {
	/**
	 * Section Id
	 */
	section_id?: string | null;
	/**
	 * Question
	 */
	question: string;
	/**
	 * Is Mandatory
	 */
	is_mandatory?: boolean;
	/**
	 * Order
	 */
	order?: number;
	/**
	 * Positive Weight
	 */
	positive_weight?: number | string;
	/**
	 * Negative Weight
	 */
	negative_weight?: number | string;
	/**
	 * Is Fatal
	 */
	is_fatal?: boolean;
	/**
	 * Allow Multiple Answers
	 */
	allow_multiple_answers?: boolean;
	/**
	 * Shuffle Options
	 */
	shuffle_options?: boolean;
	/**
	 * Options
	 */
	options: Array<MultipleChoiceOptionCreateSchema>;
};

/**
 * MultipleChoiceOptionUpdateSchema
 *
 * Schema for updating a MultipleChoiceOption.
 */
export type MultipleChoiceOptionUpdateSchema = {
	/**
	 * Option
	 */
	option: string;
	/**
	 * Is Correct
	 */
	is_correct?: boolean;
	/**
	 * Order
	 */
	order?: number;
};

/**
 * FreeTextQuestionUpdateSchema
 *
 * Schema for updating a FreeTextQuestion.
 */
export type FreeTextQuestionUpdateSchema = {
	/**
	 * Section Id
	 */
	section_id?: string | null;
	/**
	 * Question
	 */
	question: string;
	/**
	 * Is Mandatory
	 */
	is_mandatory?: boolean;
	/**
	 * Order
	 */
	order?: number;
	/**
	 * Positive Weight
	 */
	positive_weight?: number | string;
	/**
	 * Negative Weight
	 */
	negative_weight?: number | string;
	/**
	 * Is Fatal
	 */
	is_fatal?: boolean;
	/**
	 * Llm Guidelines
	 */
	llm_guidelines?: string | null;
};

/**
 * PaginatedResponseSchema[SubmissionListItemSchema]
 */
export type PaginatedResponseSchemaSubmissionListItemSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<SubmissionListItemSchema>;
};

/**
 * SubmissionListItemSchema
 *
 * Schema for listing submissions for organization staff.
 */
export type SubmissionListItemSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * User Email
	 */
	user_email: string;
	/**
	 * User Name
	 */
	user_name: string;
	/**
	 * Questionnaire Name
	 */
	questionnaire_name: string;
	evaluation_status?: Status | null;
	/**
	 * Evaluation Score
	 */
	evaluation_score?: number | string | null;
	/**
	 * Status
	 *
	 * The status of the submission.
	 */
	status?: string;
	/**
	 * Submitted At
	 */
	submitted_at?: string | null;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * EvaluationResponseSchema
 *
 * Schema for evaluation response.
 */
export type EvaluationResponseSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Submission Id
	 */
	submission_id: string;
	status: Status;
	/**
	 * Score
	 */
	score: number | string | null;
	/**
	 * Comments
	 */
	comments: string | null;
	/**
	 * Evaluator Id
	 */
	evaluator_id: string | null;
	/**
	 * Created At
	 */
	created_at: string;
	/**
	 * Updated At
	 */
	updated_at: string;
};

/**
 * QuestionAnswerDetailSchema
 *
 * Schema for question and answer details.
 */
export type QuestionAnswerDetailSchema = {
	/**
	 * Question Id
	 */
	question_id: string;
	/**
	 * Question Text
	 */
	question_text: string;
	/**
	 * Question Type
	 */
	question_type: string;
	/**
	 * Answer Content
	 */
	answer_content: {
		[key: string]: unknown;
	};
};

/**
 * SubmissionDetailSchema
 *
 * Schema for detailed view of a submission.
 */
export type SubmissionDetailSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * User Email
	 */
	user_email: string;
	/**
	 * User Name
	 */
	user_name: string;
	questionnaire: QuestionnaireInListSchema;
	status: QuestionnairesModelsQuestionnaireSubmissionStatus;
	/**
	 * Submitted At
	 */
	submitted_at: string | null;
	evaluation?: EvaluationResponseSchema | null;
	/**
	 * Answers
	 */
	answers: Array<QuestionAnswerDetailSchema>;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * EvaluationCreateSchema
 *
 * Schema for creating/updating an evaluation.
 */
export type EvaluationCreateSchema = {
	status: Status;
	/**
	 * Score
	 */
	score?: number | string | null;
	/**
	 * Comments
	 */
	comments?: string | null;
};

/**
 * GeneralUserPreferencesSchema
 */
export type GeneralUserPreferencesSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	city?: CitySchema | null;
};

/**
 * VisibilityPreference
 */
export type VisibilityPreference = 'always' | 'never' | 'to_members' | 'to_invitees' | 'to_both';

/**
 * GeneralUserPreferencesUpdateSchema
 */
export type GeneralUserPreferencesUpdateSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * City Id
	 */
	city_id?: number | null;
};

/**
 * UserOrganizationPreferencesSchema
 */
export type UserOrganizationPreferencesSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * Is Subscribed
	 */
	is_subscribed: boolean;
	/**
	 * Notify On New Events
	 */
	notify_on_new_events: boolean;
};

/**
 * UserOrganizationPreferencesUpdateSchema
 */
export type UserOrganizationPreferencesUpdateSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * Is Subscribed
	 */
	is_subscribed?: boolean;
	/**
	 * Notify On New Events
	 */
	notify_on_new_events?: boolean;
};

/**
 * UserEventSeriesPreferencesSchema
 */
export type UserEventSeriesPreferencesSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * Is Subscribed
	 */
	is_subscribed: boolean;
	/**
	 * Notify On New Events
	 */
	notify_on_new_events: boolean;
};

/**
 * UserEventSeriesPreferencesUpdateSchema
 */
export type UserEventSeriesPreferencesUpdateSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * Is Subscribed
	 */
	is_subscribed?: boolean;
	/**
	 * Notify On New Events
	 */
	notify_on_new_events?: boolean;
};

/**
 * UserEventPreferencesSchema
 */
export type UserEventPreferencesSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * Is Subscribed
	 */
	is_subscribed: boolean;
	/**
	 * Notify On Potluck Updates
	 */
	notify_on_potluck_updates: boolean;
};

/**
 * UserEventPreferencesUpdateSchema
 */
export type UserEventPreferencesUpdateSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * Is Subscribed
	 */
	is_subscribed?: boolean;
	/**
	 * Notify On Potluck Updates
	 */
	notify_on_potluck_updates?: boolean;
};

/**
 * PaginatedResponseSchema[TagSchema]
 */
export type PaginatedResponseSchemaTagSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<TagSchema>;
};

/**
 * CityFilterSchema
 */
export type CityFilterSchema = {
	/**
	 * Country
	 */
	country?: string | null;
};

/**
 * PaginatedResponseSchema[CitySchema]
 */
export type PaginatedResponseSchemaCitySchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<CitySchema>;
};

export type ApiApiVersionData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/version';
};

export type ApiApiVersionResponses = {
	/**
	 * OK
	 */
	200: VersionResponse;
};

export type ApiApiVersionResponse = ApiApiVersionResponses[keyof ApiApiVersionResponses];

export type ApiApiHealthcheckData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/healthcheck';
};

export type ApiApiHealthcheckResponses = {
	/**
	 * OK
	 */
	200: ResponseOk;
};

export type ApiApiHealthcheckResponse =
	ApiApiHealthcheckResponses[keyof ApiApiHealthcheckResponses];

export type AuthObtainToken89D16376Data = {
	body: TokenObtainPairInputSchema;
	path?: never;
	query?: never;
	url: '/api/auth/token/pair';
};

export type AuthObtainToken89D16376Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: TokenObtainPairOutputSchema | TempToken;
};

export type AuthObtainToken89D16376Response =
	AuthObtainToken89D16376Responses[keyof AuthObtainToken89D16376Responses];

export type TokenRefreshData = {
	body: TokenRefreshInputSchema;
	path?: never;
	query?: never;
	url: '/api/auth/refresh';
};

export type TokenRefreshResponses = {
	/**
	 * OK
	 */
	200: TokenRefreshOutputSchema;
};

export type TokenRefreshResponse = TokenRefreshResponses[keyof TokenRefreshResponses];

export type AuthDemoObtainToken1C973532Data = {
	body: DemoLoginSchema;
	path?: never;
	query?: never;
	url: '/api/auth/demo/token/pair';
};

export type AuthDemoObtainToken1C973532Responses = {
	/**
	 * OK
	 */
	200: TokenObtainPairOutputSchema;
};

export type AuthDemoObtainToken1C973532Response =
	AuthDemoObtainToken1C973532Responses[keyof AuthDemoObtainToken1C973532Responses];

export type AuthObtainTokenWithOtpC7428120Data = {
	body: TempTokenWithTotp;
	path?: never;
	query?: never;
	url: '/api/auth/token/pair/otp';
};

export type AuthObtainTokenWithOtpC7428120Responses = {
	/**
	 * OK
	 */
	200: TokenObtainPairOutputSchema;
};

export type AuthObtainTokenWithOtpC7428120Response =
	AuthObtainTokenWithOtpC7428120Responses[keyof AuthObtainTokenWithOtpC7428120Responses];

export type AuthGoogleLogin79107Ca3Data = {
	body: GoogleIdTokenSchema;
	path?: never;
	query?: never;
	url: '/api/auth/google/login';
};

export type AuthGoogleLogin79107Ca3Responses = {
	/**
	 * OK
	 */
	200: TokenObtainPairOutputSchema;
};

export type AuthGoogleLogin79107Ca3Response =
	AuthGoogleLogin79107Ca3Responses[keyof AuthGoogleLogin79107Ca3Responses];

export type OtpSetupOtpF64Ec583Data = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/otp/setup';
};

export type OtpSetupOtpF64Ec583Responses = {
	/**
	 * OK
	 */
	200: TotpProvisioningUriSchema;
};

export type OtpSetupOtpF64Ec583Response =
	OtpSetupOtpF64Ec583Responses[keyof OtpSetupOtpF64Ec583Responses];

export type OtpEnableOtp28Bc4B07Data = {
	body: OtpVerifySchema;
	path?: never;
	query?: never;
	url: '/api/otp/verify';
};

export type OtpEnableOtp28Bc4B07Responses = {
	/**
	 * OK
	 */
	200: RevelUserSchema;
};

export type OtpEnableOtp28Bc4B07Response =
	OtpEnableOtp28Bc4B07Responses[keyof OtpEnableOtp28Bc4B07Responses];

export type OtpDisableOtp18769720Data = {
	body: OtpVerifySchema;
	path?: never;
	query?: never;
	url: '/api/otp/disable';
};

export type OtpDisableOtp18769720Responses = {
	/**
	 * OK
	 */
	200: RevelUserSchema;
};

export type OtpDisableOtp18769720Response =
	OtpDisableOtp18769720Responses[keyof OtpDisableOtp18769720Responses];

export type AccountExportDataFb4E5B30Data = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/account/export-data';
};

export type AccountExportDataFb4E5B30Responses = {
	/**
	 * OK
	 */
	200: ResponseMessage;
};

export type AccountExportDataFb4E5B30Response =
	AccountExportDataFb4E5B30Responses[keyof AccountExportDataFb4E5B30Responses];

export type AccountMeD8441F6bData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/account/me';
};

export type AccountMeD8441F6bResponses = {
	/**
	 * OK
	 */
	200: RevelUserSchema;
};

export type AccountMeD8441F6bResponse =
	AccountMeD8441F6bResponses[keyof AccountMeD8441F6bResponses];

export type AccountUpdateProfile0Abfea16Data = {
	body: ProfileUpdateSchema;
	path?: never;
	query?: never;
	url: '/api/account/me';
};

export type AccountUpdateProfile0Abfea16Responses = {
	/**
	 * OK
	 */
	200: RevelUserSchema;
};

export type AccountUpdateProfile0Abfea16Response =
	AccountUpdateProfile0Abfea16Responses[keyof AccountUpdateProfile0Abfea16Responses];

export type AccountRegisterE40E7009Data = {
	body: RegisterUserSchema;
	path?: never;
	query?: never;
	url: '/api/account/register';
};

export type AccountRegisterE40E7009Responses = {
	/**
	 * Created
	 */
	201: RevelUserSchema;
};

export type AccountRegisterE40E7009Response =
	AccountRegisterE40E7009Responses[keyof AccountRegisterE40E7009Responses];

export type AccountVerifyEmail559273EcData = {
	body: VerifyEmailSchema;
	path?: never;
	query?: never;
	url: '/api/account/verify';
};

export type AccountVerifyEmail559273EcResponses = {
	/**
	 * OK
	 */
	200: VerifyEmailResponseSchema;
};

export type AccountVerifyEmail559273EcResponse =
	AccountVerifyEmail559273EcResponses[keyof AccountVerifyEmail559273EcResponses];

export type AccountResendVerificationEmailF37Edb18Data = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/account/verify-resend';
};

export type AccountResendVerificationEmailF37Edb18Errors = {
	/**
	 * Bad Request
	 */
	400: ResponseMessage;
};

export type AccountResendVerificationEmailF37Edb18Error =
	AccountResendVerificationEmailF37Edb18Errors[keyof AccountResendVerificationEmailF37Edb18Errors];

export type AccountResendVerificationEmailF37Edb18Responses = {
	/**
	 * OK
	 */
	200: ResponseMessage;
};

export type AccountResendVerificationEmailF37Edb18Response =
	AccountResendVerificationEmailF37Edb18Responses[keyof AccountResendVerificationEmailF37Edb18Responses];

export type AccountDeleteAccountRequestBfed9E9cData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/account/delete-request';
};

export type AccountDeleteAccountRequestBfed9E9cResponses = {
	/**
	 * OK
	 */
	200: ResponseMessage;
};

export type AccountDeleteAccountRequestBfed9E9cResponse =
	AccountDeleteAccountRequestBfed9E9cResponses[keyof AccountDeleteAccountRequestBfed9E9cResponses];

export type AccountDeleteAccountConfirmDf87109aData = {
	body: DeleteAccountConfirmSchema;
	path?: never;
	query?: never;
	url: '/api/account/delete-confirm';
};

export type AccountDeleteAccountConfirmDf87109aResponses = {
	/**
	 * OK
	 */
	200: ResponseMessage;
};

export type AccountDeleteAccountConfirmDf87109aResponse =
	AccountDeleteAccountConfirmDf87109aResponses[keyof AccountDeleteAccountConfirmDf87109aResponses];

export type AccountResetPasswordRequest26B625E6Data = {
	body: PasswordResetRequestSchema;
	path?: never;
	query?: never;
	url: '/api/account/password/reset-request';
};

export type AccountResetPasswordRequest26B625E6Responses = {
	/**
	 * OK
	 */
	200: ResponseMessage;
};

export type AccountResetPasswordRequest26B625E6Response =
	AccountResetPasswordRequest26B625E6Responses[keyof AccountResetPasswordRequest26B625E6Responses];

export type AccountResetPassword11226E1bData = {
	body: PasswordResetSchema;
	path?: never;
	query?: never;
	url: '/api/account/password/reset';
};

export type AccountResetPassword11226E1bResponses = {
	/**
	 * OK
	 */
	200: ResponseMessage;
};

export type AccountResetPassword11226E1bResponse =
	AccountResetPassword11226E1bResponses[keyof AccountResetPassword11226E1bResponses];

export type DashboardDashboardOrganizations88A0E87dData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Owner
		 */
		owner?: boolean;
		/**
		 * Staff
		 */
		staff?: boolean;
		/**
		 * Member
		 */
		member?: boolean;
		/**
		 * Subscriber
		 */
		subscriber?: boolean;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/dashboard/organizations';
};

export type DashboardDashboardOrganizations88A0E87dResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationRetrieveSchema;
};

export type DashboardDashboardOrganizations88A0E87dResponse =
	DashboardDashboardOrganizations88A0E87dResponses[keyof DashboardDashboardOrganizations88A0E87dResponses];

export type DashboardDashboardEventsA5Bdad35Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Owner
		 */
		owner?: boolean;
		/**
		 * Staff
		 */
		staff?: boolean;
		/**
		 * Member
		 */
		member?: boolean;
		/**
		 * Rsvp Yes
		 */
		rsvp_yes?: boolean;
		/**
		 * Rsvp No
		 */
		rsvp_no?: boolean;
		/**
		 * Rsvp Maybe
		 */
		rsvp_maybe?: boolean;
		/**
		 * Got Ticket
		 */
		got_ticket?: boolean;
		/**
		 * Got Invitation
		 */
		got_invitation?: boolean;
		/**
		 * Subscriber
		 */
		subscriber?: boolean;
		/**
		 * Order By
		 */
		order_by?: 'start' | '-start';
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/dashboard/events';
};

export type DashboardDashboardEventsA5Bdad35Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventInListSchema;
};

export type DashboardDashboardEventsA5Bdad35Response =
	DashboardDashboardEventsA5Bdad35Responses[keyof DashboardDashboardEventsA5Bdad35Responses];

export type DashboardDashboardEventSeriesAc85Def8Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Owner
		 */
		owner?: boolean;
		/**
		 * Staff
		 */
		staff?: boolean;
		/**
		 * Member
		 */
		member?: boolean;
		/**
		 * Subscriber
		 */
		subscriber?: boolean;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/dashboard/event_series';
};

export type DashboardDashboardEventSeriesAc85Def8Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationRetrieveSchema;
};

export type DashboardDashboardEventSeriesAc85Def8Response =
	DashboardDashboardEventSeriesAc85Def8Responses[keyof DashboardDashboardEventSeriesAc85Def8Responses];

export type DashboardDashboardInvitations2C467069Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/dashboard/invitations';
};

export type DashboardDashboardInvitations2C467069Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaInvitationSchema;
};

export type DashboardDashboardInvitations2C467069Response =
	DashboardDashboardInvitations2C467069Responses[keyof DashboardDashboardInvitations2C467069Responses];

export type OrganizationListOrganizationsC2C95340Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Country
		 */
		country?: string | null;
		/**
		 * City Id
		 */
		city_id?: number | null;
		/**
		 * Tags
		 */
		tags?: Array<string> | null;
		/**
		 * Order By
		 */
		order_by?: 'name' | '-name' | 'distance';
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organizations/';
};

export type OrganizationListOrganizationsC2C95340Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationRetrieveSchema;
};

export type OrganizationListOrganizationsC2C95340Response =
	OrganizationListOrganizationsC2C95340Responses[keyof OrganizationListOrganizationsC2C95340Responses];

export type OrganizationGetOrganization0E4473A5Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organizations/{slug}';
};

export type OrganizationGetOrganization0E4473A5Responses = {
	/**
	 * OK
	 */
	200: OrganizationRetrieveSchema;
};

export type OrganizationGetOrganization0E4473A5Response =
	OrganizationGetOrganization0E4473A5Responses[keyof OrganizationGetOrganization0E4473A5Responses];

export type OrganizationListResources8Cc28Fb7Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		resource_type?: ResourceTypes | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organizations/{slug}/resources';
};

export type OrganizationListResources8Cc28Fb7Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaAdditionalResourceSchema;
};

export type OrganizationListResources8Cc28Fb7Response =
	OrganizationListResources8Cc28Fb7Responses[keyof OrganizationListResources8Cc28Fb7Responses];

export type OrganizationCreateMembershipRequestE7Fb2399Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organizations/{slug}/membership-requests';
};

export type OrganizationCreateMembershipRequestE7Fb2399Responses = {
	/**
	 * OK
	 */
	200: OrganizationMembershipRequestRetrieve;
};

export type OrganizationCreateMembershipRequestE7Fb2399Response =
	OrganizationCreateMembershipRequestE7Fb2399Responses[keyof OrganizationCreateMembershipRequestE7Fb2399Responses];

export type OrganizationClaimInvitationF59D97AdData = {
	body?: never;
	path: {
		/**
		 * Token
		 */
		token: string;
	};
	query?: never;
	url: '/api/organizations/claim-invitation/{token}';
};

export type OrganizationClaimInvitationF59D97AdErrors = {
	/**
	 * Bad Request
	 */
	400: ResponseMessage;
};

export type OrganizationClaimInvitationF59D97AdError =
	OrganizationClaimInvitationF59D97AdErrors[keyof OrganizationClaimInvitationF59D97AdErrors];

export type OrganizationClaimInvitationF59D97AdResponses = {
	/**
	 * OK
	 */
	200: OrganizationRetrieveSchema;
};

export type OrganizationClaimInvitationF59D97AdResponse =
	OrganizationClaimInvitationF59D97AdResponses[keyof OrganizationClaimInvitationF59D97AdResponses];

export type OrganizationadminUpdateOrganizationB598Bf4dData = {
	body: OrganizationEditSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}';
};

export type OrganizationadminUpdateOrganizationB598Bf4dResponses = {
	/**
	 * OK
	 */
	200: OrganizationRetrieveSchema;
};

export type OrganizationadminUpdateOrganizationB598Bf4dResponse =
	OrganizationadminUpdateOrganizationB598Bf4dResponses[keyof OrganizationadminUpdateOrganizationB598Bf4dResponses];

export type OrganizationadminStripeConnect53D646D6Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/stripe/connect';
};

export type OrganizationadminStripeConnect53D646D6Responses = {
	/**
	 * OK
	 */
	200: StripeOnboardingLinkSchema;
};

export type OrganizationadminStripeConnect53D646D6Response =
	OrganizationadminStripeConnect53D646D6Responses[keyof OrganizationadminStripeConnect53D646D6Responses];

export type OrganizationadminStripeAccountVerify31F0Bfc2Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/stripe/account/verify';
};

export type OrganizationadminStripeAccountVerify31F0Bfc2Responses = {
	/**
	 * OK
	 */
	200: StripeAccountStatusSchema;
};

export type OrganizationadminStripeAccountVerify31F0Bfc2Response =
	OrganizationadminStripeAccountVerify31F0Bfc2Responses[keyof OrganizationadminStripeAccountVerify31F0Bfc2Responses];

export type OrganizationadminUploadLogo9C4Ec405Data = {
	/**
	 * FileParams
	 */
	body: {
		/**
		 * Logo
		 */
		logo: Blob | File;
	};
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/upload-logo';
};

export type OrganizationadminUploadLogo9C4Ec405Responses = {
	/**
	 * OK
	 */
	200: OrganizationRetrieveSchema;
};

export type OrganizationadminUploadLogo9C4Ec405Response =
	OrganizationadminUploadLogo9C4Ec405Responses[keyof OrganizationadminUploadLogo9C4Ec405Responses];

export type OrganizationadminUploadCoverArtEc4A8B35Data = {
	/**
	 * FileParams
	 */
	body: {
		/**
		 * Cover Art
		 */
		cover_art: Blob | File;
	};
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/upload-cover-art';
};

export type OrganizationadminUploadCoverArtEc4A8B35Responses = {
	/**
	 * OK
	 */
	200: OrganizationRetrieveSchema;
};

export type OrganizationadminUploadCoverArtEc4A8B35Response =
	OrganizationadminUploadCoverArtEc4A8B35Responses[keyof OrganizationadminUploadCoverArtEc4A8B35Responses];

export type OrganizationadminCreateEventSeries74149441Data = {
	body: EventSeriesEditSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/create-event-series';
};

export type OrganizationadminCreateEventSeries74149441Errors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type OrganizationadminCreateEventSeries74149441Error =
	OrganizationadminCreateEventSeries74149441Errors[keyof OrganizationadminCreateEventSeries74149441Errors];

export type OrganizationadminCreateEventSeries74149441Responses = {
	/**
	 * OK
	 */
	200: EventSeriesRetrieveSchema;
};

export type OrganizationadminCreateEventSeries74149441Response =
	OrganizationadminCreateEventSeries74149441Responses[keyof OrganizationadminCreateEventSeries74149441Responses];

export type OrganizationadminCreateEvent83140B46Data = {
	body: EventCreateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/create-event';
};

export type OrganizationadminCreateEvent83140B46Errors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type OrganizationadminCreateEvent83140B46Error =
	OrganizationadminCreateEvent83140B46Errors[keyof OrganizationadminCreateEvent83140B46Errors];

export type OrganizationadminCreateEvent83140B46Responses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type OrganizationadminCreateEvent83140B46Response =
	OrganizationadminCreateEvent83140B46Responses[keyof OrganizationadminCreateEvent83140B46Responses];

export type OrganizationadminListOrganizationTokensD017528eData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		/**
		 * Is Active
		 */
		is_active?: boolean | null;
		/**
		 * Organization Id
		 */
		organization_id?: string | null;
		/**
		 * Membership Pass
		 */
		membership_pass?: boolean | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organization-admin/{slug}/tokens';
};

export type OrganizationadminListOrganizationTokensD017528eResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationTokenSchema;
};

export type OrganizationadminListOrganizationTokensD017528eResponse =
	OrganizationadminListOrganizationTokensD017528eResponses[keyof OrganizationadminListOrganizationTokensD017528eResponses];

export type OrganizationadminCreateOrganizationToken04B54C6fData = {
	body: OrganizationTokenCreateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/token';
};

export type OrganizationadminCreateOrganizationToken04B54C6fResponses = {
	/**
	 * OK
	 */
	200: OrganizationTokenSchema;
};

export type OrganizationadminCreateOrganizationToken04B54C6fResponse =
	OrganizationadminCreateOrganizationToken04B54C6fResponses[keyof OrganizationadminCreateOrganizationToken04B54C6fResponses];

export type OrganizationadminDeleteOrganizationTokenF656Bae8Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Token Id
		 */
		token_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/token/{token_id}';
};

export type OrganizationadminDeleteOrganizationTokenF656Bae8Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminDeleteOrganizationTokenF656Bae8Response =
	OrganizationadminDeleteOrganizationTokenF656Bae8Responses[keyof OrganizationadminDeleteOrganizationTokenF656Bae8Responses];

export type OrganizationadminUpdateOrganizationTokenEa3164F6Data = {
	body: OrganizationTokenUpdateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Token Id
		 */
		token_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/token/{token_id}';
};

export type OrganizationadminUpdateOrganizationTokenEa3164F6Responses = {
	/**
	 * OK
	 */
	200: OrganizationTokenSchema;
};

export type OrganizationadminUpdateOrganizationTokenEa3164F6Response =
	OrganizationadminUpdateOrganizationTokenEa3164F6Responses[keyof OrganizationadminUpdateOrganizationTokenEa3164F6Responses];

export type OrganizationadminListMembershipRequests0E7D0B5cData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organization-admin/{slug}/membership-requests';
};

export type OrganizationadminListMembershipRequests0E7D0B5cResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationMembershipRequestRetrieve;
};

export type OrganizationadminListMembershipRequests0E7D0B5cResponse =
	OrganizationadminListMembershipRequests0E7D0B5cResponses[keyof OrganizationadminListMembershipRequests0E7D0B5cResponses];

export type OrganizationadminApproveMembershipRequestA5A04E8cData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Request Id
		 */
		request_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/membership-requests/{request_id}/approve';
};

export type OrganizationadminApproveMembershipRequestA5A04E8cResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminApproveMembershipRequestA5A04E8cResponse =
	OrganizationadminApproveMembershipRequestA5A04E8cResponses[keyof OrganizationadminApproveMembershipRequestA5A04E8cResponses];

export type OrganizationadminRejectMembershipRequest672Fc5D3Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Request Id
		 */
		request_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/membership-requests/{request_id}/reject';
};

export type OrganizationadminRejectMembershipRequest672Fc5D3Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminRejectMembershipRequest672Fc5D3Response =
	OrganizationadminRejectMembershipRequest672Fc5D3Responses[keyof OrganizationadminRejectMembershipRequest672Fc5D3Responses];

export type OrganizationadminListResourcesFe458676Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		resource_type?: ResourceTypes | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organization-admin/{slug}/resources';
};

export type OrganizationadminListResourcesFe458676Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaAdditionalResourceSchema;
};

export type OrganizationadminListResourcesFe458676Response =
	OrganizationadminListResourcesFe458676Responses[keyof OrganizationadminListResourcesFe458676Responses];

export type OrganizationadminCreateResourceE02Cdb0dData = {
	body: AdditionalResourceCreateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		/**
		 * File
		 */
		file?: Blob | File | null;
	};
	url: '/api/organization-admin/{slug}/resources';
};

export type OrganizationadminCreateResourceE02Cdb0dResponses = {
	/**
	 * OK
	 */
	200: AdditionalResourceSchema;
};

export type OrganizationadminCreateResourceE02Cdb0dResponse =
	OrganizationadminCreateResourceE02Cdb0dResponses[keyof OrganizationadminCreateResourceE02Cdb0dResponses];

export type OrganizationadminDeleteResourceFcb010C5Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Resource Id
		 */
		resource_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/resources/{resource_id}';
};

export type OrganizationadminDeleteResourceFcb010C5Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminDeleteResourceFcb010C5Response =
	OrganizationadminDeleteResourceFcb010C5Responses[keyof OrganizationadminDeleteResourceFcb010C5Responses];

export type OrganizationadminGetResource37Ec9D2aData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Resource Id
		 */
		resource_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/resources/{resource_id}';
};

export type OrganizationadminGetResource37Ec9D2aResponses = {
	/**
	 * OK
	 */
	200: AdditionalResourceSchema;
};

export type OrganizationadminGetResource37Ec9D2aResponse =
	OrganizationadminGetResource37Ec9D2aResponses[keyof OrganizationadminGetResource37Ec9D2aResponses];

export type OrganizationadminUpdateResourceDeb96DccData = {
	body: AdditionalResourceUpdateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Resource Id
		 */
		resource_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/resources/{resource_id}';
};

export type OrganizationadminUpdateResourceDeb96DccResponses = {
	/**
	 * OK
	 */
	200: AdditionalResourceSchema;
};

export type OrganizationadminUpdateResourceDeb96DccResponse =
	OrganizationadminUpdateResourceDeb96DccResponses[keyof OrganizationadminUpdateResourceDeb96DccResponses];

export type OrganizationadminListMembers2A68Cad8Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organization-admin/{slug}/members';
};

export type OrganizationadminListMembers2A68Cad8Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationMemberSchema;
};

export type OrganizationadminListMembers2A68Cad8Response =
	OrganizationadminListMembers2A68Cad8Responses[keyof OrganizationadminListMembers2A68Cad8Responses];

export type OrganizationadminRemoveMember6A94E37bData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * User Id
		 */
		user_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/members/{user_id}';
};

export type OrganizationadminRemoveMember6A94E37bResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminRemoveMember6A94E37bResponse =
	OrganizationadminRemoveMember6A94E37bResponses[keyof OrganizationadminRemoveMember6A94E37bResponses];

export type OrganizationadminListStaffEbfc54C1Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organization-admin/{slug}/staff';
};

export type OrganizationadminListStaffEbfc54C1Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationStaffSchema;
};

export type OrganizationadminListStaffEbfc54C1Response =
	OrganizationadminListStaffEbfc54C1Responses[keyof OrganizationadminListStaffEbfc54C1Responses];

export type OrganizationadminRemoveStaff2Bbdb9FcData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * User Id
		 */
		user_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/staff/{user_id}';
};

export type OrganizationadminRemoveStaff2Bbdb9FcResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminRemoveStaff2Bbdb9FcResponse =
	OrganizationadminRemoveStaff2Bbdb9FcResponses[keyof OrganizationadminRemoveStaff2Bbdb9FcResponses];

export type OrganizationadminAddStaff7679F0EcData = {
	body?: PermissionsSchema | null;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * User Id
		 */
		user_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/staff/{user_id}';
};

export type OrganizationadminAddStaff7679F0EcResponses = {
	/**
	 * Created
	 */
	201: OrganizationStaffSchema;
};

export type OrganizationadminAddStaff7679F0EcResponse =
	OrganizationadminAddStaff7679F0EcResponses[keyof OrganizationadminAddStaff7679F0EcResponses];

export type OrganizationadminUpdateStaffPermissions3De2643bData = {
	body: PermissionsSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * User Id
		 */
		user_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/staff/{user_id}/permissions';
};

export type OrganizationadminUpdateStaffPermissions3De2643bResponses = {
	/**
	 * OK
	 */
	200: OrganizationStaffSchema;
};

export type OrganizationadminUpdateStaffPermissions3De2643bResponse =
	OrganizationadminUpdateStaffPermissions3De2643bResponses[keyof OrganizationadminUpdateStaffPermissions3De2643bResponses];

export type OrganizationadminClearTags95Cf6F7fData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/tags';
};

export type OrganizationadminClearTags95Cf6F7fResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminClearTags95Cf6F7fResponse =
	OrganizationadminClearTags95Cf6F7fResponses[keyof OrganizationadminClearTags95Cf6F7fResponses];

export type OrganizationadminAddTagsD9Cb9B62Data = {
	body: TagUpdateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/tags';
};

export type OrganizationadminAddTagsD9Cb9B62Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TagSchema>;
};

export type OrganizationadminAddTagsD9Cb9B62Response =
	OrganizationadminAddTagsD9Cb9B62Responses[keyof OrganizationadminAddTagsD9Cb9B62Responses];

export type OrganizationadminRemoveTags5337350bData = {
	body: TagUpdateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/tags/remove';
};

export type OrganizationadminRemoveTags5337350bResponses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TagSchema>;
};

export type OrganizationadminRemoveTags5337350bResponse =
	OrganizationadminRemoveTags5337350bResponses[keyof OrganizationadminRemoveTags5337350bResponses];

export type EventListEventsFbe8B973Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Country
		 */
		country?: string | null;
		/**
		 * City Id
		 */
		city_id?: number | null;
		/**
		 * Organization
		 */
		organization?: string | null;
		event_type?: Types | null;
		visibility?: Visibility | null;
		/**
		 * Event Series
		 */
		event_series?: string | null;
		/**
		 * Next Events
		 */
		next_events?: boolean | null;
		/**
		 * Past Events
		 */
		past_events?: boolean | null;
		status?: Status | null;
		/**
		 * Tags
		 */
		tags?: Array<string> | null;
		/**
		 * Order By
		 */
		order_by?: 'start' | '-start' | 'distance';
		/**
		 * Include Past
		 */
		include_past?: boolean;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/events/';
};

export type EventListEventsFbe8B973Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventInListSchema;
};

export type EventListEventsFbe8B973Response =
	EventListEventsFbe8B973Responses[keyof EventListEventsFbe8B973Responses];

export type EventClaimInvitation61Ff7B9fData = {
	body?: never;
	path: {
		/**
		 * Token
		 */
		token: string;
	};
	query?: never;
	url: '/api/events/claim-invitation/{token}';
};

export type EventClaimInvitation61Ff7B9fErrors = {
	/**
	 * Bad Request
	 */
	400: ResponseMessage;
};

export type EventClaimInvitation61Ff7B9fError =
	EventClaimInvitation61Ff7B9fErrors[keyof EventClaimInvitation61Ff7B9fErrors];

export type EventClaimInvitation61Ff7B9fResponses = {
	/**
	 * OK
	 */
	200: MinimalEventSchema;
};

export type EventClaimInvitation61Ff7B9fResponse =
	EventClaimInvitation61Ff7B9fResponses[keyof EventClaimInvitation61Ff7B9fResponses];

export type EventGetEventAttendees3C4D22E9Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/events/{event_id}/attendee-list';
};

export type EventGetEventAttendees3C4D22E9Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaMinimalRevelUserSchema;
};

export type EventGetEventAttendees3C4D22E9Response =
	EventGetEventAttendees3C4D22E9Responses[keyof EventGetEventAttendees3C4D22E9Responses];

export type EventGetMyEventStatus34Fbf248Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/my-status';
};

export type EventGetMyEventStatus34Fbf248Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: EventRsvpSchema | EventTicketSchema | EventUserEligibility;
};

export type EventGetMyEventStatus34Fbf248Response =
	EventGetMyEventStatus34Fbf248Responses[keyof EventGetMyEventStatus34Fbf248Responses];

export type EventRequestInvitationEeea9609Data = {
	body: EventInvitationRequestCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/request-invitation';
};

export type EventRequestInvitationEeea9609Errors = {
	/**
	 * Bad Request
	 */
	400: ResponseMessage;
};

export type EventRequestInvitationEeea9609Error =
	EventRequestInvitationEeea9609Errors[keyof EventRequestInvitationEeea9609Errors];

export type EventRequestInvitationEeea9609Responses = {
	/**
	 * Created
	 */
	201: EventInvitationRequestSchema;
};

export type EventRequestInvitationEeea9609Response =
	EventRequestInvitationEeea9609Responses[keyof EventRequestInvitationEeea9609Responses];

export type EventListResources4A5Cc720Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		resource_type?: ResourceTypes | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/events/{event_id}/resources';
};

export type EventListResources4A5Cc720Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaAdditionalResourceSchema;
};

export type EventListResources4A5Cc720Response =
	EventListResources4A5Cc720Responses[keyof EventListResources4A5Cc720Responses];

export type EventDeleteInvitationRequest120F7CdaData = {
	body?: never;
	path: {
		/**
		 * Request Id
		 */
		request_id: string;
	};
	query?: never;
	url: '/api/events/invitation-request/{request_id}';
};

export type EventDeleteInvitationRequest120F7CdaResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventDeleteInvitationRequest120F7CdaResponse =
	EventDeleteInvitationRequest120F7CdaResponses[keyof EventDeleteInvitationRequest120F7CdaResponses];

export type EventListUserInvitationRequests9Df4Ec25Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Event Id
		 */
		event_id?: string | null;
		/**
		 * Status
		 */
		status?: 'pending' | 'approved' | 'rejected';
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/events/me/pending_invitation_requests';
};

export type EventListUserInvitationRequests9Df4Ec25Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventInvitationRequestSchema;
};

export type EventListUserInvitationRequests9Df4Ec25Response =
	EventListUserInvitationRequests9Df4Ec25Responses[keyof EventListUserInvitationRequests9Df4Ec25Responses];

export type EventGetEventBySlugs559C2Da7Data = {
	body?: never;
	path: {
		/**
		 * Org Slug
		 */
		org_slug: string;
		/**
		 * Event Slug
		 */
		event_slug: string;
	};
	query?: never;
	url: '/api/events/{org_slug}/{event_slug}';
};

export type EventGetEventBySlugs559C2Da7Responses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type EventGetEventBySlugs559C2Da7Response =
	EventGetEventBySlugs559C2Da7Responses[keyof EventGetEventBySlugs559C2Da7Responses];

export type EventGetEventFf8A7B2aData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}';
};

export type EventGetEventFf8A7B2aResponses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type EventGetEventFf8A7B2aResponse =
	EventGetEventFf8A7B2aResponses[keyof EventGetEventFf8A7B2aResponses];

export type EventRsvpEvent29565362Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Status
		 */
		answer: 'yes' | 'no' | 'maybe';
	};
	query?: never;
	url: '/api/events/{event_id}/rsvp/{answer}';
};

export type EventRsvpEvent29565362Errors = {
	/**
	 * Bad Request
	 */
	400: EventUserEligibility;
};

export type EventRsvpEvent29565362Error =
	EventRsvpEvent29565362Errors[keyof EventRsvpEvent29565362Errors];

export type EventRsvpEvent29565362Responses = {
	/**
	 * OK
	 */
	200: EventRsvpSchema;
};

export type EventRsvpEvent29565362Response =
	EventRsvpEvent29565362Responses[keyof EventRsvpEvent29565362Responses];

export type EventListTiers19F83752Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/tickets/tiers';
};

export type EventListTiers19F83752Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TierSchema>;
};

export type EventListTiers19F83752Response =
	EventListTiers19F83752Responses[keyof EventListTiers19F83752Responses];

export type EventTicketCheckout76067C48Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Tier Id
		 */
		tier_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/tickets/{tier_id}/checkout';
};

export type EventTicketCheckout76067C48Errors = {
	/**
	 * Bad Request
	 */
	400: EventUserEligibility;
};

export type EventTicketCheckout76067C48Error =
	EventTicketCheckout76067C48Errors[keyof EventTicketCheckout76067C48Errors];

export type EventTicketCheckout76067C48Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: StripeCheckoutSessionSchema | EventTicketSchema;
};

export type EventTicketCheckout76067C48Response =
	EventTicketCheckout76067C48Responses[keyof EventTicketCheckout76067C48Responses];

export type EventTicketPwycCheckoutE43B1345Data = {
	body: PwycCheckoutPayloadSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Tier Id
		 */
		tier_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/tickets/{tier_id}/checkout/pwyc';
};

export type EventTicketPwycCheckoutE43B1345Errors = {
	/**
	 * Bad Request
	 */
	400: EventUserEligibility;
};

export type EventTicketPwycCheckoutE43B1345Error =
	EventTicketPwycCheckoutE43B1345Errors[keyof EventTicketPwycCheckoutE43B1345Errors];

export type EventTicketPwycCheckoutE43B1345Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: StripeCheckoutSessionSchema | EventTicketSchema;
};

export type EventTicketPwycCheckoutE43B1345Response =
	EventTicketPwycCheckoutE43B1345Responses[keyof EventTicketPwycCheckoutE43B1345Responses];

export type EventGetQuestionnaireAb1251EbData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Questionnaire Id
		 */
		questionnaire_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/questionnaire/{questionnaire_id}';
};

export type EventGetQuestionnaireAb1251EbResponses = {
	/**
	 * OK
	 */
	200: QuestionnaireSchema;
};

export type EventGetQuestionnaireAb1251EbResponse =
	EventGetQuestionnaireAb1251EbResponses[keyof EventGetQuestionnaireAb1251EbResponses];

export type EventSubmitQuestionnaire48725095Data = {
	body: QuestionnaireSubmissionSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Questionnaire Id
		 */
		questionnaire_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/questionnaire/{questionnaire_id}/submit';
};

export type EventSubmitQuestionnaire48725095Errors = {
	/**
	 * Bad Request
	 */
	400: ResponseMessage;
};

export type EventSubmitQuestionnaire48725095Error =
	EventSubmitQuestionnaire48725095Errors[keyof EventSubmitQuestionnaire48725095Errors];

export type EventSubmitQuestionnaire48725095Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: QuestionnaireSubmissionResponseSchema | QuestionnaireEvaluationForUserSchema;
};

export type EventSubmitQuestionnaire48725095Response =
	EventSubmitQuestionnaire48725095Responses[keyof EventSubmitQuestionnaire48725095Responses];

export type EventadminDeleteEventToken7B2Bedc8Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Token Id
		 */
		token_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/token/{token_id}';
};

export type EventadminDeleteEventToken7B2Bedc8Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminDeleteEventToken7B2Bedc8Response =
	EventadminDeleteEventToken7B2Bedc8Responses[keyof EventadminDeleteEventToken7B2Bedc8Responses];

export type EventadminUpdateEventToken40B03978Data = {
	body: EventTokenUpdateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Token Id
		 */
		token_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/token/{token_id}';
};

export type EventadminUpdateEventToken40B03978Responses = {
	/**
	 * OK
	 */
	200: EventTokenSchema;
};

export type EventadminUpdateEventToken40B03978Response =
	EventadminUpdateEventToken40B03978Responses[keyof EventadminUpdateEventToken40B03978Responses];

export type EventadminListEventTokens608332C9Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Is Active
		 */
		is_active?: boolean | null;
		/**
		 * Event Id
		 */
		event_id?: string | null;
		/**
		 * Has Invitation
		 */
		has_invitation?: boolean | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/tokens';
};

export type EventadminListEventTokens608332C9Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventTokenSchema;
};

export type EventadminListEventTokens608332C9Response =
	EventadminListEventTokens608332C9Responses[keyof EventadminListEventTokens608332C9Responses];

export type EventadminCreateEventToken8D75Ec90Data = {
	body: EventTokenCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/token';
};

export type EventadminCreateEventToken8D75Ec90Responses = {
	/**
	 * OK
	 */
	200: EventTokenSchema;
};

export type EventadminCreateEventToken8D75Ec90Response =
	EventadminCreateEventToken8D75Ec90Responses[keyof EventadminCreateEventToken8D75Ec90Responses];

export type EventadminDecideInvitationRequestAa282797Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Request Id
		 */
		request_id: string;
		/**
		 * Decision
		 */
		decision: 'approve' | 'reject';
	};
	query?: never;
	url: '/api/event-admin/{event_id}/invitation-request/{request_id}/{decision}';
};

export type EventadminDecideInvitationRequestAa282797Responses = {
	/**
	 * OK
	 */
	200: EventInvitationRequestSchema;
};

export type EventadminDecideInvitationRequestAa282797Response =
	EventadminDecideInvitationRequestAa282797Responses[keyof EventadminDecideInvitationRequestAa282797Responses];

export type EventadminListEventInvitationRequests3B399060Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Status
		 */
		status?: 'pending' | 'approved' | 'rejected';
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/invitation_requests';
};

export type EventadminListEventInvitationRequests3B399060Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventInvitationRequestInternalSchema;
};

export type EventadminListEventInvitationRequests3B399060Response =
	EventadminListEventInvitationRequests3B399060Responses[keyof EventadminListEventInvitationRequests3B399060Responses];

export type EventadminUpdateEvent64Fc71FeData = {
	body: EventEditSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}';
};

export type EventadminUpdateEvent64Fc71FeErrors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type EventadminUpdateEvent64Fc71FeError =
	EventadminUpdateEvent64Fc71FeErrors[keyof EventadminUpdateEvent64Fc71FeErrors];

export type EventadminUpdateEvent64Fc71FeResponses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type EventadminUpdateEvent64Fc71FeResponse =
	EventadminUpdateEvent64Fc71FeResponses[keyof EventadminUpdateEvent64Fc71FeResponses];

export type EventadminUpdateEventStatusBf5Ec3E2Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Status
		 */
		status: 'open' | 'closed' | 'draft' | 'deleted';
	};
	query?: never;
	url: '/api/event-admin/{event_id}/actions/update-status/{status}';
};

export type EventadminUpdateEventStatusBf5Ec3E2Responses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type EventadminUpdateEventStatusBf5Ec3E2Response =
	EventadminUpdateEventStatusBf5Ec3E2Responses[keyof EventadminUpdateEventStatusBf5Ec3E2Responses];

export type EventadminUploadLogoF6692Dc9Data = {
	/**
	 * FileParams
	 */
	body: {
		/**
		 * Logo
		 */
		logo: Blob | File;
	};
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/upload-logo';
};

export type EventadminUploadLogoF6692Dc9Responses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type EventadminUploadLogoF6692Dc9Response =
	EventadminUploadLogoF6692Dc9Responses[keyof EventadminUploadLogoF6692Dc9Responses];

export type EventadminUploadCoverArtDa4Cff21Data = {
	/**
	 * FileParams
	 */
	body: {
		/**
		 * Cover Art
		 */
		cover_art: Blob | File;
	};
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/upload-cover-art';
};

export type EventadminUploadCoverArtDa4Cff21Responses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type EventadminUploadCoverArtDa4Cff21Response =
	EventadminUploadCoverArtDa4Cff21Responses[keyof EventadminUploadCoverArtDa4Cff21Responses];

export type EventadminClearTags79613E5cData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tags';
};

export type EventadminClearTags79613E5cResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminClearTags79613E5cResponse =
	EventadminClearTags79613E5cResponses[keyof EventadminClearTags79613E5cResponses];

export type EventadminAddTags5Ac7D15bData = {
	body: TagUpdateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tags';
};

export type EventadminAddTags5Ac7D15bResponses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TagSchema>;
};

export type EventadminAddTags5Ac7D15bResponse =
	EventadminAddTags5Ac7D15bResponses[keyof EventadminAddTags5Ac7D15bResponses];

export type EventadminRemoveTags64A3F36fData = {
	body: TagUpdateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tags/remove';
};

export type EventadminRemoveTags64A3F36fResponses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TagSchema>;
};

export type EventadminRemoveTags64A3F36fResponse =
	EventadminRemoveTags64A3F36fResponses[keyof EventadminRemoveTags64A3F36fResponses];

export type EventadminListTicketTiers2Cbd74BeData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/ticket-tiers';
};

export type EventadminListTicketTiers2Cbd74BeResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaTicketTierDetailSchema;
};

export type EventadminListTicketTiers2Cbd74BeResponse =
	EventadminListTicketTiers2Cbd74BeResponses[keyof EventadminListTicketTiers2Cbd74BeResponses];

export type EventadminCreateTicketTier86110675Data = {
	body: TicketTierCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/ticket-tier';
};

export type EventadminCreateTicketTier86110675Responses = {
	/**
	 * OK
	 */
	200: TicketTierDetailSchema;
};

export type EventadminCreateTicketTier86110675Response =
	EventadminCreateTicketTier86110675Responses[keyof EventadminCreateTicketTier86110675Responses];

export type EventadminDeleteTicketTier3034039fData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Tier Id
		 */
		tier_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/ticket-tier/{tier_id}';
};

export type EventadminDeleteTicketTier3034039fResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminDeleteTicketTier3034039fResponse =
	EventadminDeleteTicketTier3034039fResponses[keyof EventadminDeleteTicketTier3034039fResponses];

export type EventadminUpdateTicketTier54A2F559Data = {
	body: TicketTierUpdateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Tier Id
		 */
		tier_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/ticket-tier/{tier_id}';
};

export type EventadminUpdateTicketTier54A2F559Responses = {
	/**
	 * OK
	 */
	200: TicketTierDetailSchema;
};

export type EventadminUpdateTicketTier54A2F559Response =
	EventadminUpdateTicketTier54A2F559Responses[keyof EventadminUpdateTicketTier54A2F559Responses];

export type EventadminListPendingTickets989C1421Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/pending-tickets';
};

export type EventadminListPendingTickets989C1421Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaPendingTicketSchema;
};

export type EventadminListPendingTickets989C1421Response =
	EventadminListPendingTickets989C1421Responses[keyof EventadminListPendingTickets989C1421Responses];

export type EventadminConfirmTicketPayment392Fa846Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Ticket Id
		 */
		ticket_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tickets/{ticket_id}/confirm-payment';
};

export type EventadminConfirmTicketPayment392Fa846Responses = {
	/**
	 * OK
	 */
	200: EventTicketSchema;
};

export type EventadminConfirmTicketPayment392Fa846Response =
	EventadminConfirmTicketPayment392Fa846Responses[keyof EventadminConfirmTicketPayment392Fa846Responses];

export type EventadminCheckInTicketB4Df1Ee8Data = {
	body: CheckInRequestSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/check-in';
};

export type EventadminCheckInTicketB4Df1Ee8Errors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type EventadminCheckInTicketB4Df1Ee8Error =
	EventadminCheckInTicketB4Df1Ee8Errors[keyof EventadminCheckInTicketB4Df1Ee8Errors];

export type EventadminCheckInTicketB4Df1Ee8Responses = {
	/**
	 * OK
	 */
	200: CheckInResponseSchema;
};

export type EventadminCheckInTicketB4Df1Ee8Response =
	EventadminCheckInTicketB4Df1Ee8Responses[keyof EventadminCheckInTicketB4Df1Ee8Responses];

export type EventadminListInvitationsD3B1C3C1Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/invitations';
};

export type EventadminListInvitationsD3B1C3C1Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventInvitationListSchema;
};

export type EventadminListInvitationsD3B1C3C1Response =
	EventadminListInvitationsD3B1C3C1Responses[keyof EventadminListInvitationsD3B1C3C1Responses];

export type EventadminCreateInvitations8Cbbe3D0Data = {
	body: DirectInvitationCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/invitations';
};

export type EventadminCreateInvitations8Cbbe3D0Errors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type EventadminCreateInvitations8Cbbe3D0Error =
	EventadminCreateInvitations8Cbbe3D0Errors[keyof EventadminCreateInvitations8Cbbe3D0Errors];

export type EventadminCreateInvitations8Cbbe3D0Responses = {
	/**
	 * OK
	 */
	200: DirectInvitationResponseSchema;
};

export type EventadminCreateInvitations8Cbbe3D0Response =
	EventadminCreateInvitations8Cbbe3D0Responses[keyof EventadminCreateInvitations8Cbbe3D0Responses];

export type EventadminListPendingInvitations50B3417eData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/pending-invitations';
};

export type EventadminListPendingInvitations50B3417eResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaPendingEventInvitationListSchema;
};

export type EventadminListPendingInvitations50B3417eResponse =
	EventadminListPendingInvitations50B3417eResponses[keyof EventadminListPendingInvitations50B3417eResponses];

export type EventadminDeleteInvitationEndpoint48Ed771cData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Invitation Type
		 */
		invitation_type: 'registered' | 'pending';
		/**
		 * Invitation Id
		 */
		invitation_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/invitations/{invitation_type}/{invitation_id}';
};

export type EventadminDeleteInvitationEndpoint48Ed771cErrors = {
	/**
	 * Not Found
	 */
	404: ValidationErrorResponse;
};

export type EventadminDeleteInvitationEndpoint48Ed771cError =
	EventadminDeleteInvitationEndpoint48Ed771cErrors[keyof EventadminDeleteInvitationEndpoint48Ed771cErrors];

export type EventadminDeleteInvitationEndpoint48Ed771cResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminDeleteInvitationEndpoint48Ed771cResponse =
	EventadminDeleteInvitationEndpoint48Ed771cResponses[keyof EventadminDeleteInvitationEndpoint48Ed771cResponses];

export type PermissionMyPermissionsC74726AaData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/permissions/my-permissions';
};

export type PermissionMyPermissionsC74726AaResponses = {
	/**
	 * OK
	 */
	200: OrganizationPermissionsSchema;
};

export type PermissionMyPermissionsC74726AaResponse =
	PermissionMyPermissionsC74726AaResponses[keyof PermissionMyPermissionsC74726AaResponses];

export type EventseriesListEventSeriesA2C209EdData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Organization
		 */
		organization?: string | null;
		/**
		 * Tags
		 */
		tags?: Array<string> | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-series/';
};

export type EventseriesListEventSeriesA2C209EdResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventSeriesRetrieveSchema;
};

export type EventseriesListEventSeriesA2C209EdResponse =
	EventseriesListEventSeriesA2C209EdResponses[keyof EventseriesListEventSeriesA2C209EdResponses];

export type EventseriesGetEventSeriesBySlugsCd27A526Data = {
	body?: never;
	path: {
		/**
		 * Org Slug
		 */
		org_slug: string;
		/**
		 * Series Slug
		 */
		series_slug: string;
	};
	query?: never;
	url: '/api/event-series/{org_slug}/{series_slug}';
};

export type EventseriesGetEventSeriesBySlugsCd27A526Responses = {
	/**
	 * OK
	 */
	200: EventSeriesRetrieveSchema;
};

export type EventseriesGetEventSeriesBySlugsCd27A526Response =
	EventseriesGetEventSeriesBySlugsCd27A526Responses[keyof EventseriesGetEventSeriesBySlugsCd27A526Responses];

export type EventseriesGetEventSeries918D90CbData = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series/{series_id}';
};

export type EventseriesGetEventSeries918D90CbResponses = {
	/**
	 * OK
	 */
	200: EventSeriesRetrieveSchema;
};

export type EventseriesGetEventSeries918D90CbResponse =
	EventseriesGetEventSeries918D90CbResponses[keyof EventseriesGetEventSeries918D90CbResponses];

export type EventseriesListResourcesCc79E02aData = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: {
		resource_type?: ResourceTypes | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-series/{series_id}/resources';
};

export type EventseriesListResourcesCc79E02aResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaAdditionalResourceSchema;
};

export type EventseriesListResourcesCc79E02aResponse =
	EventseriesListResourcesCc79E02aResponses[keyof EventseriesListResourcesCc79E02aResponses];

export type EventseriesadminDeleteEventSeries3005B023Data = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/';
};

export type EventseriesadminDeleteEventSeries3005B023Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventseriesadminDeleteEventSeries3005B023Response =
	EventseriesadminDeleteEventSeries3005B023Responses[keyof EventseriesadminDeleteEventSeries3005B023Responses];

export type EventseriesadminUpdateEventSeriesAcd3E2FdData = {
	body: EventSeriesEditSchema;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/';
};

export type EventseriesadminUpdateEventSeriesAcd3E2FdErrors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type EventseriesadminUpdateEventSeriesAcd3E2FdError =
	EventseriesadminUpdateEventSeriesAcd3E2FdErrors[keyof EventseriesadminUpdateEventSeriesAcd3E2FdErrors];

export type EventseriesadminUpdateEventSeriesAcd3E2FdResponses = {
	/**
	 * OK
	 */
	200: EventSeriesRetrieveSchema;
};

export type EventseriesadminUpdateEventSeriesAcd3E2FdResponse =
	EventseriesadminUpdateEventSeriesAcd3E2FdResponses[keyof EventseriesadminUpdateEventSeriesAcd3E2FdResponses];

export type EventseriesadminUploadLogo5C8E9F0bData = {
	/**
	 * FileParams
	 */
	body: {
		/**
		 * Logo
		 */
		logo: Blob | File;
	};
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/upload-logo';
};

export type EventseriesadminUploadLogo5C8E9F0bResponses = {
	/**
	 * OK
	 */
	200: EventSeriesRetrieveSchema;
};

export type EventseriesadminUploadLogo5C8E9F0bResponse =
	EventseriesadminUploadLogo5C8E9F0bResponses[keyof EventseriesadminUploadLogo5C8E9F0bResponses];

export type EventseriesadminUploadCoverArt28875C09Data = {
	/**
	 * FileParams
	 */
	body: {
		/**
		 * Cover Art
		 */
		cover_art: Blob | File;
	};
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/upload-cover-art';
};

export type EventseriesadminUploadCoverArt28875C09Responses = {
	/**
	 * OK
	 */
	200: EventSeriesRetrieveSchema;
};

export type EventseriesadminUploadCoverArt28875C09Response =
	EventseriesadminUploadCoverArt28875C09Responses[keyof EventseriesadminUploadCoverArt28875C09Responses];

export type EventseriesadminClearTags3Af6857fData = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/tags';
};

export type EventseriesadminClearTags3Af6857fResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventseriesadminClearTags3Af6857fResponse =
	EventseriesadminClearTags3Af6857fResponses[keyof EventseriesadminClearTags3Af6857fResponses];

export type EventseriesadminAddTags374800F7Data = {
	body: TagUpdateSchema;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/tags';
};

export type EventseriesadminAddTags374800F7Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TagSchema>;
};

export type EventseriesadminAddTags374800F7Response =
	EventseriesadminAddTags374800F7Responses[keyof EventseriesadminAddTags374800F7Responses];

export type EventseriesadminRemoveTags4Fa83C0eData = {
	body: TagUpdateSchema;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/tags/remove';
};

export type EventseriesadminRemoveTags4Fa83C0eResponses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TagSchema>;
};

export type EventseriesadminRemoveTags4Fa83C0eResponse =
	EventseriesadminRemoveTags4Fa83C0eResponses[keyof EventseriesadminRemoveTags4Fa83C0eResponses];

export type PotluckListPotluckItems6Efb6Eb9Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/potluck/';
};

export type PotluckListPotluckItems6Efb6Eb9Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<PotluckItemRetrieveSchema>;
};

export type PotluckListPotluckItems6Efb6Eb9Response =
	PotluckListPotluckItems6Efb6Eb9Responses[keyof PotluckListPotluckItems6Efb6Eb9Responses];

export type PotluckCreatePotluckItemD4710F64Data = {
	body: PotluckItemCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/potluck/';
};

export type PotluckCreatePotluckItemD4710F64Responses = {
	/**
	 * OK
	 */
	200: PotluckItemRetrieveSchema;
};

export type PotluckCreatePotluckItemD4710F64Response =
	PotluckCreatePotluckItemD4710F64Responses[keyof PotluckCreatePotluckItemD4710F64Responses];

export type PotluckDeletePotluckItem957A382bData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Item Id
		 */
		item_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/potluck/{item_id}';
};

export type PotluckDeletePotluckItem957A382bResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type PotluckDeletePotluckItem957A382bResponse =
	PotluckDeletePotluckItem957A382bResponses[keyof PotluckDeletePotluckItem957A382bResponses];

export type PotluckUpdatePotluckItem5A2Cc5EaData = {
	body: PotluckItemCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Item Id
		 */
		item_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/potluck/{item_id}';
};

export type PotluckUpdatePotluckItem5A2Cc5EaResponses = {
	/**
	 * OK
	 */
	200: PotluckItemRetrieveSchema;
};

export type PotluckUpdatePotluckItem5A2Cc5EaResponse =
	PotluckUpdatePotluckItem5A2Cc5EaResponses[keyof PotluckUpdatePotluckItem5A2Cc5EaResponses];

export type PotluckClaimPotluckItem0Dd0D7BbData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Item Id
		 */
		item_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/potluck/{item_id}/claim';
};

export type PotluckClaimPotluckItem0Dd0D7BbResponses = {
	/**
	 * OK
	 */
	200: PotluckItemRetrieveSchema;
};

export type PotluckClaimPotluckItem0Dd0D7BbResponse =
	PotluckClaimPotluckItem0Dd0D7BbResponses[keyof PotluckClaimPotluckItem0Dd0D7BbResponses];

export type PotluckUnclaimPotluckItemE366C231Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Item Id
		 */
		item_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/potluck/{item_id}/unclaim';
};

export type PotluckUnclaimPotluckItemE366C231Responses = {
	/**
	 * OK
	 */
	200: PotluckItemRetrieveSchema;
};

export type PotluckUnclaimPotluckItemE366C231Response =
	PotluckUnclaimPotluckItemE366C231Responses[keyof PotluckUnclaimPotluckItemE366C231Responses];

export type QuestionnaireListOrgQuestionnairesE0A0441cData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/questionnaires/';
};

export type QuestionnaireListOrgQuestionnairesE0A0441cResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationQuestionnaireInListSchema;
};

export type QuestionnaireListOrgQuestionnairesE0A0441cResponse =
	QuestionnaireListOrgQuestionnairesE0A0441cResponses[keyof QuestionnaireListOrgQuestionnairesE0A0441cResponses];

export type QuestionnaireCreateOrgQuestionnaireA73B2412Data = {
	body: QuestionnaireCreateSchema;
	path: {
		/**
		 * Organization Id
		 */
		organization_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{organization_id}/create-questionnaire';
};

export type QuestionnaireCreateOrgQuestionnaireA73B2412Errors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type QuestionnaireCreateOrgQuestionnaireA73B2412Error =
	QuestionnaireCreateOrgQuestionnaireA73B2412Errors[keyof QuestionnaireCreateOrgQuestionnaireA73B2412Errors];

export type QuestionnaireCreateOrgQuestionnaireA73B2412Responses = {
	/**
	 * OK
	 */
	200: OrganizationQuestionnaireSchema;
};

export type QuestionnaireCreateOrgQuestionnaireA73B2412Response =
	QuestionnaireCreateOrgQuestionnaireA73B2412Responses[keyof QuestionnaireCreateOrgQuestionnaireA73B2412Responses];

export type QuestionnaireGetOrgQuestionnaire88B731D9Data = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}';
};

export type QuestionnaireGetOrgQuestionnaire88B731D9Responses = {
	/**
	 * OK
	 */
	200: OrganizationQuestionnaireSchema;
};

export type QuestionnaireGetOrgQuestionnaire88B731D9Response =
	QuestionnaireGetOrgQuestionnaire88B731D9Responses[keyof QuestionnaireGetOrgQuestionnaire88B731D9Responses];

export type QuestionnaireCreateSection9Ca949D3Data = {
	body: SectionCreateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/sections';
};

export type QuestionnaireCreateSection9Ca949D3Responses = {
	/**
	 * OK
	 */
	200: SectionUpdateSchema;
};

export type QuestionnaireCreateSection9Ca949D3Response =
	QuestionnaireCreateSection9Ca949D3Responses[keyof QuestionnaireCreateSection9Ca949D3Responses];

export type QuestionnaireUpdateSection72E37612Data = {
	body: SectionUpdateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Section Id
		 */
		section_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/sections/{section_id}';
};

export type QuestionnaireUpdateSection72E37612Responses = {
	/**
	 * OK
	 */
	200: SectionUpdateSchema;
};

export type QuestionnaireUpdateSection72E37612Response =
	QuestionnaireUpdateSection72E37612Responses[keyof QuestionnaireUpdateSection72E37612Responses];

export type QuestionnaireCreateMcQuestion30Dea3CdData = {
	body: MultipleChoiceQuestionCreateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/multiple-choice-questions';
};

export type QuestionnaireCreateMcQuestion30Dea3CdResponses = {
	/**
	 * OK
	 */
	200: MultipleChoiceQuestionUpdateSchema;
};

export type QuestionnaireCreateMcQuestion30Dea3CdResponse =
	QuestionnaireCreateMcQuestion30Dea3CdResponses[keyof QuestionnaireCreateMcQuestion30Dea3CdResponses];

export type QuestionnaireUpdateMcQuestion2F22Dd77Data = {
	body: MultipleChoiceQuestionUpdateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Question Id
		 */
		question_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/multiple-choice-questions/{question_id}';
};

export type QuestionnaireUpdateMcQuestion2F22Dd77Responses = {
	/**
	 * OK
	 */
	200: MultipleChoiceQuestionUpdateSchema;
};

export type QuestionnaireUpdateMcQuestion2F22Dd77Response =
	QuestionnaireUpdateMcQuestion2F22Dd77Responses[keyof QuestionnaireUpdateMcQuestion2F22Dd77Responses];

export type QuestionnaireCreateMcOption5312A4C1Data = {
	body: MultipleChoiceOptionCreateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Question Id
		 */
		question_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/multiple-choice-questions/{question_id}/options';
};

export type QuestionnaireCreateMcOption5312A4C1Responses = {
	/**
	 * OK
	 */
	200: MultipleChoiceOptionUpdateSchema;
};

export type QuestionnaireCreateMcOption5312A4C1Response =
	QuestionnaireCreateMcOption5312A4C1Responses[keyof QuestionnaireCreateMcOption5312A4C1Responses];

export type QuestionnaireUpdateMcOptionFe7F96B7Data = {
	body: MultipleChoiceOptionUpdateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Option Id
		 */
		option_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/multiple-choice-options/{option_id}';
};

export type QuestionnaireUpdateMcOptionFe7F96B7Responses = {
	/**
	 * OK
	 */
	200: MultipleChoiceOptionUpdateSchema;
};

export type QuestionnaireUpdateMcOptionFe7F96B7Response =
	QuestionnaireUpdateMcOptionFe7F96B7Responses[keyof QuestionnaireUpdateMcOptionFe7F96B7Responses];

export type QuestionnaireCreateFtQuestionD24560D0Data = {
	body: FreeTextQuestionCreateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/free-text-questions';
};

export type QuestionnaireCreateFtQuestionD24560D0Responses = {
	/**
	 * OK
	 */
	200: FreeTextQuestionUpdateSchema;
};

export type QuestionnaireCreateFtQuestionD24560D0Response =
	QuestionnaireCreateFtQuestionD24560D0Responses[keyof QuestionnaireCreateFtQuestionD24560D0Responses];

export type QuestionnaireUpdateFtQuestion828F4DdcData = {
	body: FreeTextQuestionUpdateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Question Id
		 */
		question_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/free-text-questions/{question_id}';
};

export type QuestionnaireUpdateFtQuestion828F4DdcResponses = {
	/**
	 * OK
	 */
	200: FreeTextQuestionUpdateSchema;
};

export type QuestionnaireUpdateFtQuestion828F4DdcResponse =
	QuestionnaireUpdateFtQuestion828F4DdcResponses[keyof QuestionnaireUpdateFtQuestion828F4DdcResponses];

export type QuestionnaireListSubmissions7E04Dd8dData = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/questionnaires/{org_questionnaire_id}/submissions';
};

export type QuestionnaireListSubmissions7E04Dd8dResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaSubmissionListItemSchema;
};

export type QuestionnaireListSubmissions7E04Dd8dResponse =
	QuestionnaireListSubmissions7E04Dd8dResponses[keyof QuestionnaireListSubmissions7E04Dd8dResponses];

export type QuestionnaireGetSubmissionDetail77Af308cData = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Submission Id
		 */
		submission_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/submissions/{submission_id}';
};

export type QuestionnaireGetSubmissionDetail77Af308cResponses = {
	/**
	 * OK
	 */
	200: SubmissionDetailSchema;
};

export type QuestionnaireGetSubmissionDetail77Af308cResponse =
	QuestionnaireGetSubmissionDetail77Af308cResponses[keyof QuestionnaireGetSubmissionDetail77Af308cResponses];

export type QuestionnaireEvaluateSubmissionCcfabd98Data = {
	body: EvaluationCreateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Submission Id
		 */
		submission_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/submissions/{submission_id}/evaluate';
};

export type QuestionnaireEvaluateSubmissionCcfabd98Errors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type QuestionnaireEvaluateSubmissionCcfabd98Error =
	QuestionnaireEvaluateSubmissionCcfabd98Errors[keyof QuestionnaireEvaluateSubmissionCcfabd98Errors];

export type QuestionnaireEvaluateSubmissionCcfabd98Responses = {
	/**
	 * OK
	 */
	200: EvaluationResponseSchema;
};

export type QuestionnaireEvaluateSubmissionCcfabd98Response =
	QuestionnaireEvaluateSubmissionCcfabd98Responses[keyof QuestionnaireEvaluateSubmissionCcfabd98Responses];

export type UserpreferencesGetGeneralPreferencesA39613AeData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/preferences/general';
};

export type UserpreferencesGetGeneralPreferencesA39613AeResponses = {
	/**
	 * OK
	 */
	200: GeneralUserPreferencesSchema;
};

export type UserpreferencesGetGeneralPreferencesA39613AeResponse =
	UserpreferencesGetGeneralPreferencesA39613AeResponses[keyof UserpreferencesGetGeneralPreferencesA39613AeResponses];

export type UserpreferencesUpdateGlobalPreferencesC1D4E2FbData = {
	body: GeneralUserPreferencesUpdateSchema;
	path?: never;
	query?: {
		/**
		 * Overwrite Children
		 */
		overwrite_children?: boolean;
	};
	url: '/api/preferences/general';
};

export type UserpreferencesUpdateGlobalPreferencesC1D4E2FbResponses = {
	/**
	 * OK
	 */
	200: GeneralUserPreferencesSchema;
};

export type UserpreferencesUpdateGlobalPreferencesC1D4E2FbResponse =
	UserpreferencesUpdateGlobalPreferencesC1D4E2FbResponses[keyof UserpreferencesUpdateGlobalPreferencesC1D4E2FbResponses];

export type UserpreferencesGetOrganizationPreferencesB9Ac8Ee0Data = {
	body?: never;
	path: {
		/**
		 * Organization Id
		 */
		organization_id: string;
	};
	query?: never;
	url: '/api/preferences/organization/{organization_id}';
};

export type UserpreferencesGetOrganizationPreferencesB9Ac8Ee0Responses = {
	/**
	 * OK
	 */
	200: UserOrganizationPreferencesSchema;
};

export type UserpreferencesGetOrganizationPreferencesB9Ac8Ee0Response =
	UserpreferencesGetOrganizationPreferencesB9Ac8Ee0Responses[keyof UserpreferencesGetOrganizationPreferencesB9Ac8Ee0Responses];

export type UserpreferencesUpdateOrganizationPreferences56790307Data = {
	body: UserOrganizationPreferencesUpdateSchema;
	path: {
		/**
		 * Organization Id
		 */
		organization_id: string;
	};
	query?: {
		/**
		 * Overwrite Children
		 */
		overwrite_children?: boolean;
	};
	url: '/api/preferences/organization/{organization_id}';
};

export type UserpreferencesUpdateOrganizationPreferences56790307Responses = {
	/**
	 * OK
	 */
	200: UserOrganizationPreferencesSchema;
};

export type UserpreferencesUpdateOrganizationPreferences56790307Response =
	UserpreferencesUpdateOrganizationPreferences56790307Responses[keyof UserpreferencesUpdateOrganizationPreferences56790307Responses];

export type UserpreferencesGetEventSeriesPreferences93B5B471Data = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/preferences/event-series/{series_id}';
};

export type UserpreferencesGetEventSeriesPreferences93B5B471Responses = {
	/**
	 * OK
	 */
	200: UserEventSeriesPreferencesSchema;
};

export type UserpreferencesGetEventSeriesPreferences93B5B471Response =
	UserpreferencesGetEventSeriesPreferences93B5B471Responses[keyof UserpreferencesGetEventSeriesPreferences93B5B471Responses];

export type UserpreferencesUpdateEventSeriesPreferences23058B96Data = {
	body: UserEventSeriesPreferencesUpdateSchema;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: {
		/**
		 * Overwrite Children
		 */
		overwrite_children?: boolean;
	};
	url: '/api/preferences/event-series/{series_id}';
};

export type UserpreferencesUpdateEventSeriesPreferences23058B96Responses = {
	/**
	 * OK
	 */
	200: UserEventSeriesPreferencesSchema;
};

export type UserpreferencesUpdateEventSeriesPreferences23058B96Response =
	UserpreferencesUpdateEventSeriesPreferences23058B96Responses[keyof UserpreferencesUpdateEventSeriesPreferences23058B96Responses];

export type UserpreferencesGetEventPreferencesF62Bc462Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/preferences/event/{event_id}';
};

export type UserpreferencesGetEventPreferencesF62Bc462Responses = {
	/**
	 * OK
	 */
	200: UserEventPreferencesSchema;
};

export type UserpreferencesGetEventPreferencesF62Bc462Response =
	UserpreferencesGetEventPreferencesF62Bc462Responses[keyof UserpreferencesGetEventPreferencesF62Bc462Responses];

export type UserpreferencesUpdateEventPreferences8C10FbadData = {
	body: UserEventPreferencesUpdateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Overwrite Children
		 */
		overwrite_children?: boolean;
	};
	url: '/api/preferences/event/{event_id}';
};

export type UserpreferencesUpdateEventPreferences8C10FbadResponses = {
	/**
	 * OK
	 */
	200: UserEventPreferencesSchema;
};

export type UserpreferencesUpdateEventPreferences8C10FbadResponse =
	UserpreferencesUpdateEventPreferences8C10FbadResponses[keyof UserpreferencesUpdateEventPreferences8C10FbadResponses];

export type StripewebhookHandleWebhookE602E6F5Data = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/stripe/webhook';
};

export type StripewebhookHandleWebhookE602E6F5Responses = {
	/**
	 * OK
	 */
	200: unknown;
};

export type TagListTagsA5CcbaccData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/tags/';
};

export type TagListTagsA5CcbaccResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaTagSchema;
};

export type TagListTagsA5CcbaccResponse =
	TagListTagsA5CcbaccResponses[keyof TagListTagsA5CcbaccResponses];

export type CityListCities0Bf56Bd4Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Country
		 */
		country?: string | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/cities/';
};

export type CityListCities0Bf56Bd4Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaCitySchema;
};

export type CityListCities0Bf56Bd4Response =
	CityListCities0Bf56Bd4Responses[keyof CityListCities0Bf56Bd4Responses];

export type CityListCountries9Ef2F0C1Data = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/cities/countries';
};

export type CityListCountries9Ef2F0C1Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<string>;
};

export type CityListCountries9Ef2F0C1Response =
	CityListCountries9Ef2F0C1Responses[keyof CityListCountries9Ef2F0C1Responses];

export type CityGetCityCc9D2716Data = {
	body?: never;
	path: {
		/**
		 * City Id
		 */
		city_id: number;
	};
	query?: never;
	url: '/api/cities/{city_id}';
};

export type CityGetCityCc9D2716Responses = {
	/**
	 * OK
	 */
	200: CitySchema;
};

export type CityGetCityCc9D2716Response =
	CityGetCityCc9D2716Responses[keyof CityGetCityCc9D2716Responses];
