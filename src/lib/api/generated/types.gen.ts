// This file is auto-generated by @hey-api/openapi-ts

export type ClientOptions = {
	baseUrl: 'http://localhost:8000' | (string & {});
};

/**
 * VersionResponse
 */
export type VersionResponse = {
	/**
	 * Version
	 */
	version: string;
};

/**
 * ResponseOk
 */
export type ResponseOk = {
	/**
	 * Status
	 */
	status?: 'ok';
};

/**
 * TempToken
 */
export type TempToken = {
	/**
	 * Token
	 *
	 * The temporary token to be used with OTP.
	 */
	token: string;
	/**
	 * Type
	 */
	type?: 'otp';
};

/**
 * TokenObtainPairOutputSchema
 */
export type TokenObtainPairOutputSchema = {
	/**
	 * Username
	 *
	 * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
	 */
	username: string;
	/**
	 * Refresh
	 */
	refresh: string;
	/**
	 * Access
	 */
	access: string;
};

/**
 * TokenObtainPairInputSchema
 */
export type TokenObtainPairInputSchema = {
	/**
	 * Password
	 */
	password: string;
	/**
	 * Username
	 *
	 * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
	 */
	username: string;
};

/**
 * TokenRefreshOutputSchema
 */
export type TokenRefreshOutputSchema = {
	/**
	 * Refresh
	 */
	refresh: string;
	/**
	 * Access
	 */
	access: string | null;
};

/**
 * TokenRefreshInputSchema
 */
export type TokenRefreshInputSchema = {
	/**
	 * Refresh
	 */
	refresh: string;
};

/**
 * DemoLoginSchema
 */
export type DemoLoginSchema = {
	/**
	 * Username
	 */
	username: string;
	/**
	 * Password
	 */
	password: string;
};

/**
 * TempTokenWithTOTP
 */
export type TempTokenWithTotp = {
	/**
	 * Token
	 */
	token: string;
	/**
	 * Otp
	 *
	 * The one-time password to verify.
	 */
	otp: string;
};

/**
 * GoogleIDTokenSchema
 */
export type GoogleIdTokenSchema = {
	/**
	 * Id Token
	 *
	 * The Google ID token to verify.
	 */
	id_token: string;
};

/**
 * TOTPProvisioningUriSchema
 */
export type TotpProvisioningUriSchema = {
	/**
	 * Uri
	 *
	 * The provisioning URI for the TOTP app, to be rendered in a QR code.
	 */
	uri: string;
};

/**
 * RevelUserSchema
 */
export type RevelUserSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Email
	 */
	email: string;
	/**
	 * Email Verified
	 */
	email_verified: boolean;
	/**
	 * Preferred Name
	 */
	preferred_name: string;
	/**
	 * Pronouns
	 */
	pronouns: string;
	/**
	 * Is Active
	 */
	is_active: boolean;
	/**
	 * First Name
	 */
	first_name: string;
	/**
	 * Last Name
	 */
	last_name: string;
	/**
	 * Totp Active
	 */
	totp_active: boolean;
};

/**
 * OTPVerifySchema
 */
export type OtpVerifySchema = {
	/**
	 * Otp
	 *
	 * The one-time password to verify.
	 */
	otp: string;
};

/**
 * ResponseMessage
 */
export type ResponseMessage = {
	/**
	 * Message
	 */
	message: string;
};

/**
 * ProfileUpdateSchema
 *
 * Schema for updating user profile information.
 */
export type ProfileUpdateSchema = {
	/**
	 * Preferred Name
	 *
	 * User's preferred name
	 */
	preferred_name: string;
	/**
	 * Pronouns
	 *
	 * User's pronouns
	 */
	pronouns: string;
	/**
	 * First Name
	 *
	 * User's first name
	 */
	first_name: string;
	/**
	 * Last Name
	 *
	 * User's last name
	 */
	last_name: string;
};

/**
 * RegisterUserSchema
 */
export type RegisterUserSchema = {
	/**
	 * Password1
	 *
	 * Password
	 */
	password1: string;
	/**
	 * Password2
	 *
	 * Password confirmation
	 */
	password2: string;
	/**
	 * Email
	 */
	email: string;
	/**
	 * First Name
	 */
	first_name?: string;
	/**
	 * Last Name
	 */
	last_name?: string;
};

/**
 * VerifyEmailResponseSchema
 */
export type VerifyEmailResponseSchema = {
	user: RevelUserSchema;
	token: TokenObtainPairOutputSchema;
};

/**
 * VerifyEmailSchema
 */
export type VerifyEmailSchema = {
	/**
	 * Token
	 */
	token: string;
};

/**
 * DeleteAccountConfirmSchema
 */
export type DeleteAccountConfirmSchema = {
	/**
	 * Token
	 */
	token: string;
};

/**
 * PasswordResetRequestSchema
 */
export type PasswordResetRequestSchema = {
	/**
	 * Email
	 */
	email: string;
};

/**
 * PasswordResetSchema
 */
export type PasswordResetSchema = {
	/**
	 * Password1
	 *
	 * Password
	 */
	password1: string;
	/**
	 * Password2
	 *
	 * Password confirmation
	 */
	password2: string;
	/**
	 * Token
	 */
	token: string;
};

/**
 * DashboardOrganizationsFiltersSchema
 */
export type DashboardOrganizationsFiltersSchema = {
	/**
	 * Owner
	 */
	owner?: boolean;
	/**
	 * Staff
	 */
	staff?: boolean;
	/**
	 * Member
	 */
	member?: boolean;
	/**
	 * Subscriber
	 */
	subscriber?: boolean;
};

/**
 * DynamicInput
 */
export type DynamicInput = {
	/**
	 * Page
	 */
	page?: number;
	/**
	 * Page Size
	 */
	page_size?: number;
};

/**
 * Input
 */
export type Input = {
	/**
	 * Search
	 */
	search?: string | null;
};

/**
 * CitySchema
 */
export type CitySchema = {
	/**
	 * ID
	 */
	id?: number | null;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Country
	 */
	country: string;
	/**
	 * Admin Name
	 */
	admin_name?: string | null;
};

/**
 * OrganizationRetrieveSchema
 */
export type OrganizationRetrieveSchema = {
	/**
	 * Tags
	 */
	tags?: Array<string>;
	city?: CitySchema | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Id
	 */
	id: string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Slug
	 */
	slug: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Logo
	 */
	logo?: string | null;
	/**
	 * Cover Art
	 */
	cover_art?: string | null;
	visibility: Visibility;
	/**
	 * Is Stripe Connected
	 */
	is_stripe_connected: boolean;
	/**
	 * Platform Fee Percent
	 */
	platform_fee_percent?: number | string | null;
};

/**
 * PaginatedResponseSchema[OrganizationRetrieveSchema]
 */
export type PaginatedResponseSchemaOrganizationRetrieveSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<OrganizationRetrieveSchema>;
};

/**
 * Visibility
 */
export type Visibility = 'public' | 'private' | 'members-only' | 'staff-only';

/**
 * DashboardEventsFiltersSchema
 */
export type DashboardEventsFiltersSchema = {
	/**
	 * Owner
	 */
	owner?: boolean;
	/**
	 * Staff
	 */
	staff?: boolean;
	/**
	 * Member
	 */
	member?: boolean;
	/**
	 * Rsvp Yes
	 */
	rsvp_yes?: boolean;
	/**
	 * Rsvp No
	 */
	rsvp_no?: boolean;
	/**
	 * Rsvp Maybe
	 */
	rsvp_maybe?: boolean;
	/**
	 * Got Ticket
	 */
	got_ticket?: boolean;
	/**
	 * Got Invitation
	 */
	got_invitation?: boolean;
	/**
	 * Subscriber
	 */
	subscriber?: boolean;
};

/**
 * EventInListSchema
 */
export type EventInListSchema = {
	/**
	 * Tags
	 */
	tags?: Array<string>;
	city?: CitySchema | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Id
	 */
	id: string;
	event_type: Types;
	visibility: Visibility;
	organization: OrganizationRetrieveSchema;
	status: Status;
	event_series?: EventSeriesRetrieveSchema | null;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Slug
	 */
	slug: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Invitation Message
	 */
	invitation_message?: string | null;
	/**
	 * Invitation Message Html
	 */
	invitation_message_html?: string;
	/**
	 * Max Attendees
	 */
	max_attendees?: number;
	/**
	 * Waitlist Open
	 */
	waitlist_open?: boolean | null;
	/**
	 * Start
	 */
	start: string;
	/**
	 * End
	 */
	end: string;
	/**
	 * Rsvp Before
	 */
	rsvp_before?: string | null;
	/**
	 * Logo
	 */
	logo?: string | null;
	/**
	 * Cover Art
	 */
	cover_art?: string | null;
	/**
	 * Free For Members
	 */
	free_for_members: boolean;
	/**
	 * Free For Staff
	 */
	free_for_staff: boolean;
	/**
	 * Requires Ticket
	 */
	requires_ticket: boolean;
	/**
	 * Potluck Open
	 */
	potluck_open: boolean;
	/**
	 * Attendee Count
	 */
	attendee_count: number;
};

/**
 * EventSeriesRetrieveSchema
 */
export type EventSeriesRetrieveSchema = {
	/**
	 * Tags
	 */
	tags?: Array<string>;
	/**
	 * Id
	 */
	id: string;
	organization: OrganizationRetrieveSchema;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Slug
	 */
	slug: string;
	/**
	 * Logo
	 */
	logo?: string | null;
	/**
	 * Cover Art
	 */
	cover_art?: string | null;
};

/**
 * PaginatedResponseSchema[EventInListSchema]
 */
export type PaginatedResponseSchemaEventInListSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<EventInListSchema>;
};

/**
 * Status
 */
export type Status = 'draft' | 'ready' | 'published';

/**
 * Types
 */
export type Types = 'admission' | 'membership' | 'feedback' | 'generic';

/**
 * DashboardEventSeriesFiltersSchema
 */
export type DashboardEventSeriesFiltersSchema = {
	/**
	 * Owner
	 */
	owner?: boolean;
	/**
	 * Staff
	 */
	staff?: boolean;
	/**
	 * Member
	 */
	member?: boolean;
	/**
	 * Subscriber
	 */
	subscriber?: boolean;
};

/**
 * PaginatedResponseSchema[EventSeriesRetrieveSchema]
 */
export type PaginatedResponseSchemaEventSeriesRetrieveSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<EventSeriesRetrieveSchema>;
};

/**
 * InvitationSchema
 */
export type InvitationSchema = {
	/**
	 * Waives Questionnaire
	 */
	waives_questionnaire?: boolean;
	/**
	 * Waives Purchase
	 */
	waives_purchase?: boolean;
	/**
	 * Overrides Max Attendees
	 */
	overrides_max_attendees?: boolean;
	/**
	 * Waives Membership Required
	 */
	waives_membership_required?: boolean;
	/**
	 * Waives Rsvp Deadline
	 */
	waives_rsvp_deadline?: boolean;
	/**
	 * Custom Message
	 */
	custom_message?: string | null;
	event: EventInListSchema;
	tier?: TierSchema | null;
	/**
	 * User Id
	 */
	user_id: string;
};

/**
 * PaginatedResponseSchema[InvitationSchema]
 */
export type PaginatedResponseSchemaInvitationSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<InvitationSchema>;
};

/**
 * TierSchema
 */
export type TierSchema = {
	/**
	 * Event Id
	 */
	event_id: string;
	/**
	 * Price
	 */
	price: number | string;
	/**
	 * Currency
	 */
	currency: string;
	/**
	 * Total Available
	 */
	total_available: number | null;
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Price Type
	 *
	 * Whether this tier has a fixed price or allows pay-what-you-can pricing
	 */
	price_type?: string;
	/**
	 * Pwyc Min
	 *
	 * Minimum amount for pay-what-you-can pricing
	 */
	pwyc_min?: number | string;
	/**
	 * Pwyc Max
	 *
	 * Maximum amount for pay-what-you-can pricing (optional)
	 */
	pwyc_max?: number | string | null;
	/**
	 * Sales Start At
	 *
	 * When ticket sales begin for this tier
	 */
	sales_start_at?: string | null;
	/**
	 * Sales End At
	 *
	 * When ticket sales end for this tier
	 */
	sales_end_at?: string | null;
	/**
	 * Purchasable By
	 */
	purchasable_by?: string;
	/**
	 * Payment Method
	 */
	payment_method?: string;
};

/**
 * OrganizationFilterSchema
 */
export type OrganizationFilterSchema = {
	/**
	 * Country
	 */
	country?: string | null;
	/**
	 * City Id
	 */
	city_id?: number | null;
	/**
	 * Tags
	 */
	tags?: Array<string> | null;
};

/**
 * ResourceFilterSchema
 */
export type ResourceFilterSchema = {
	resource_type?: ResourceTypes | null;
};

/**
 * ResourceTypes
 */
export type ResourceTypes = 'file' | 'link' | 'text';

/**
 * AdditionalResourceSchema
 */
export type AdditionalResourceSchema = {
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Text Html
	 */
	text_html?: string;
	/**
	 * Event Ids
	 */
	event_ids?: Array<string>;
	/**
	 * Event Series Ids
	 */
	event_series_ids?: Array<string>;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Resource Type
	 */
	resource_type: string;
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * File
	 */
	file?: string | null;
	/**
	 * Link
	 */
	link?: string | null;
	/**
	 * Text
	 */
	text?: string | null;
	/**
	 * Visibility
	 */
	visibility?: string;
	/**
	 * Display On Organization Page
	 *
	 * Whether the resource should be displayed on organization pages.
	 */
	display_on_organization_page?: boolean;
};

/**
 * PaginatedResponseSchema[AdditionalResourceSchema]
 */
export type PaginatedResponseSchemaAdditionalResourceSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<AdditionalResourceSchema>;
};

/**
 * MinimalRevelUserSchema
 */
export type MinimalRevelUserSchema = {
	/**
	 * Preferred Name
	 *
	 * Preferred name
	 */
	preferred_name?: string | null;
	/**
	 * Pronouns
	 *
	 * Pronouns
	 */
	pronouns?: string | null;
	/**
	 * First Name
	 */
	first_name?: string | null;
	/**
	 * Last Name
	 */
	last_name?: string | null;
};

/**
 * OrganizationMembershipRequestRetrieve
 */
export type OrganizationMembershipRequestRetrieve = {
	user: MinimalRevelUserSchema;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Status
	 */
	status?: string;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * OrganizationEditSchema
 */
export type OrganizationEditSchema = {
	/**
	 * City Id
	 */
	city_id?: number | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Description
	 */
	description?: string;
	visibility: Visibility;
};

/**
 * StripeOnboardingLinkSchema
 */
export type StripeOnboardingLinkSchema = {
	/**
	 * Onboarding Url
	 */
	onboarding_url: string;
};

/**
 * StripeAccountStatusSchema
 */
export type StripeAccountStatusSchema = {
	/**
	 * Is Connected
	 */
	is_connected: boolean;
	/**
	 * Charges Enabled
	 */
	charges_enabled?: boolean;
	/**
	 * Details Submitted
	 */
	details_submitted?: boolean;
};

/**
 * ValidationErrorResponse
 */
export type ValidationErrorResponse = {
	/**
	 * Errors
	 */
	errors: {
		[key: string]: string | Array<string>;
	};
};

/**
 * EventSeriesEditSchema
 */
export type EventSeriesEditSchema = {
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
};

/**
 * EventDetailSchema
 */
export type EventDetailSchema = {
	/**
	 * Tags
	 */
	tags?: Array<string>;
	city?: CitySchema | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Id
	 */
	id: string;
	event_type: Types;
	visibility: Visibility;
	organization: OrganizationRetrieveSchema;
	status: Status;
	event_series?: EventSeriesRetrieveSchema | null;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Slug
	 */
	slug: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Description Html
	 */
	description_html?: string;
	/**
	 * Invitation Message
	 */
	invitation_message?: string | null;
	/**
	 * Invitation Message Html
	 */
	invitation_message_html?: string;
	/**
	 * Max Attendees
	 */
	max_attendees?: number;
	/**
	 * Waitlist Open
	 */
	waitlist_open?: boolean | null;
	/**
	 * Start
	 */
	start: string;
	/**
	 * End
	 */
	end: string;
	/**
	 * Rsvp Before
	 */
	rsvp_before?: string | null;
	/**
	 * Logo
	 */
	logo?: string | null;
	/**
	 * Cover Art
	 */
	cover_art?: string | null;
	/**
	 * Free For Members
	 */
	free_for_members: boolean;
	/**
	 * Free For Staff
	 */
	free_for_staff: boolean;
	/**
	 * Requires Ticket
	 */
	requires_ticket: boolean;
	/**
	 * Potluck Open
	 */
	potluck_open: boolean;
	/**
	 * Attendee Count
	 */
	attendee_count: number;
};

/**
 * EventCreateSchema
 */
export type EventCreateSchema = {
	/**
	 * City Id
	 */
	city_id?: number | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
	event_type?: Types | null;
	status?: Status;
	visibility?: Visibility | null;
	/**
	 * Invitation Message
	 *
	 * Invitation message
	 */
	invitation_message?: string | null;
	/**
	 * Max Attendees
	 */
	max_attendees?: number;
	/**
	 * Waitlist Open
	 */
	waitlist_open?: boolean;
	/**
	 * Start
	 */
	start: string;
	/**
	 * End
	 */
	end?: string | null;
	/**
	 * Rsvp Before
	 *
	 * RSVP deadline for events that do not require tickets
	 */
	rsvp_before?: string | null;
	/**
	 * Check In Starts At
	 *
	 * When check-in opens for this event
	 */
	check_in_starts_at?: string | null;
	/**
	 * Check In Ends At
	 *
	 * When check-in closes for this event
	 */
	check_in_ends_at?: string | null;
	/**
	 * Event Series Id
	 */
	event_series_id?: string | null;
	/**
	 * Free For Members
	 */
	free_for_members?: boolean;
	/**
	 * Free For Staff
	 */
	free_for_staff?: boolean;
	/**
	 * Requires Ticket
	 */
	requires_ticket?: boolean;
	/**
	 * Potluck Open
	 */
	potluck_open?: boolean;
};

/**
 * OrganizationTokenFilterSchema
 */
export type OrganizationTokenFilterSchema = {
	/**
	 * Is Active
	 */
	is_active?: boolean | null;
	/**
	 * Organization Id
	 */
	organization_id?: string | null;
	/**
	 * Membership Pass
	 */
	membership_pass?: boolean | null;
};

/**
 * OrganizationTokenSchema
 */
export type OrganizationTokenSchema = {
	/**
	 * Created At
	 */
	created_at: string;
	/**
	 * Updated At
	 */
	updated_at: string;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Issuer
	 */
	issuer: string;
	/**
	 * Expires At
	 */
	expires_at?: string | null;
	/**
	 * Uses
	 */
	uses?: number;
	/**
	 * Max Uses
	 *
	 * The maximum number of invites allowed for this token. 0 Means unlimited.
	 */
	max_uses?: number;
	/**
	 * Organization
	 */
	organization: string;
	/**
	 * Grants Membership
	 */
	grants_membership?: boolean;
	/**
	 * Grants Staff Status
	 */
	grants_staff_status?: boolean;
};

/**
 * PaginatedResponseSchema[OrganizationTokenSchema]
 */
export type PaginatedResponseSchemaOrganizationTokenSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<OrganizationTokenSchema>;
};

/**
 * OrganizationTokenCreateSchema
 */
export type OrganizationTokenCreateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Max Uses
	 */
	max_uses?: number;
	/**
	 * Grants Membership
	 */
	grants_membership?: boolean;
	/**
	 * Grants Staff Status
	 */
	grants_staff_status?: boolean;
	/**
	 * Duration
	 */
	duration?: number;
};

/**
 * OrganizationTokenUpdateSchema
 */
export type OrganizationTokenUpdateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Max Uses
	 */
	max_uses?: number;
	/**
	 * Grants Membership
	 */
	grants_membership?: boolean;
	/**
	 * Grants Staff Status
	 */
	grants_staff_status?: boolean;
	/**
	 * Expires At
	 */
	expires_at?: string | null;
};

/**
 * PaginatedResponseSchema[OrganizationMembershipRequestRetrieve]
 */
export type PaginatedResponseSchemaOrganizationMembershipRequestRetrieve = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<OrganizationMembershipRequestRetrieve>;
};

/**
 * AdditionalResourceCreateSchema
 */
export type AdditionalResourceCreateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Description
	 */
	description?: string | null;
	resource_type: ResourceTypes;
	/**
	 * Visibility
	 */
	visibility?: 'public' | 'private' | 'members-only' | 'staff-only';
	/**
	 * Display On Organization Page
	 */
	display_on_organization_page?: boolean;
	/**
	 * Link
	 */
	link?: string | null;
	/**
	 * Text
	 */
	text?: string | null;
	/**
	 * Event Series Ids
	 */
	event_series_ids?: Array<string>;
	/**
	 * Event Ids
	 */
	event_ids?: Array<string>;
};

/**
 * AdditionalResourceUpdateSchema
 */
export type AdditionalResourceUpdateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Description
	 */
	description?: string | null;
	visibility?: Visibility | null;
	/**
	 * Display On Organization Page
	 */
	display_on_organization_page?: boolean | null;
	/**
	 * Link
	 */
	link?: string | null;
	/**
	 * Text
	 */
	text?: string | null;
	/**
	 * Event Series Ids
	 */
	event_series_ids?: Array<string> | null;
	/**
	 * Event Ids
	 */
	event_ids?: Array<string> | null;
};

/**
 * MemberUserSchema
 */
export type MemberUserSchema = {
	/**
	 * Email Address
	 */
	email?: string | null;
	/**
	 * Phone Number
	 *
	 * Phone number
	 */
	phone_number?: string | null;
	/**
	 * Preferred Name
	 *
	 * Preferred name
	 */
	preferred_name?: string | null;
	/**
	 * Pronouns
	 *
	 * Pronouns
	 */
	pronouns?: string | null;
	/**
	 * First Name
	 */
	first_name?: string | null;
	/**
	 * Last Name
	 */
	last_name?: string | null;
};

/**
 * OrganizationMemberSchema
 */
export type OrganizationMemberSchema = {
	user: MemberUserSchema;
	/**
	 * Member Since
	 */
	member_since: string;
};

/**
 * PaginatedResponseSchema[OrganizationMemberSchema]
 */
export type PaginatedResponseSchemaOrganizationMemberSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<OrganizationMemberSchema>;
};

/**
 * OrganizationStaffSchema
 */
export type OrganizationStaffSchema = {
	user: MemberUserSchema;
	/**
	 * Staff Since
	 */
	staff_since: string;
	permissions: PermissionsSchema;
};

/**
 * PaginatedResponseSchema[OrganizationStaffSchema]
 */
export type PaginatedResponseSchemaOrganizationStaffSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<OrganizationStaffSchema>;
};

/**
 * PermissionMap
 */
export type PermissionMap = {
	/**
	 * Create Event
	 */
	create_event?: boolean;
	/**
	 * Create Event Series
	 */
	create_event_series?: boolean;
	/**
	 * Edit Event Series
	 */
	edit_event_series?: boolean;
	/**
	 * Delete Event Series
	 */
	delete_event_series?: boolean;
	/**
	 * Edit Event
	 */
	edit_event?: boolean;
	/**
	 * Delete Event
	 */
	delete_event?: boolean;
	/**
	 * Open Event
	 */
	open_event?: boolean;
	/**
	 * Manage Tickets
	 */
	manage_tickets?: boolean;
	/**
	 * Close Event
	 */
	close_event?: boolean;
	/**
	 * Manage Event
	 */
	manage_event?: boolean;
	/**
	 * Check In Attendees
	 */
	check_in_attendees?: boolean;
	/**
	 * Invite To Event
	 */
	invite_to_event?: boolean;
	/**
	 * Edit Organization
	 */
	edit_organization?: boolean;
	/**
	 * Manage Members
	 */
	manage_members?: boolean;
	/**
	 * Manage Potluck
	 */
	manage_potluck?: boolean;
	/**
	 * Create Questionnaire
	 */
	create_questionnaire?: boolean;
	/**
	 * Edit Questionnaire
	 */
	edit_questionnaire?: boolean;
	/**
	 * Delete Questionnaire
	 */
	delete_questionnaire?: boolean;
	/**
	 * Evaluate Questionnaire
	 */
	evaluate_questionnaire?: boolean;
	/**
	 * Manage Membership
	 */
	manage_membership?: boolean;
};

/**
 * PermissionsSchema
 */
export type PermissionsSchema = {
	default?: PermissionMap;
	/**
	 * Event Overrides
	 */
	event_overrides?: {
		[key: string]: PermissionMap;
	};
};

/**
 * TagSchema
 */
export type TagSchema = {
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Color
	 *
	 * Hex color (e.g. #FF0099)
	 */
	color?: string | null;
	/**
	 * Icon
	 *
	 * Optional icon name
	 */
	icon?: string | null;
};

/**
 * TagUpdateSchema
 */
export type TagUpdateSchema = {
	/**
	 * Tags
	 *
	 * A list of tag names to add or remove.
	 */
	tags: Array<string>;
};

/**
 * EventFilterSchema
 */
export type EventFilterSchema = {
	/**
	 * Country
	 */
	country?: string | null;
	/**
	 * City Id
	 */
	city_id?: number | null;
	/**
	 * Organization
	 */
	organization?: string | null;
	event_type?: Types | null;
	visibility?: Visibility | null;
	/**
	 * Event Series
	 */
	event_series?: string | null;
	/**
	 * Next Events
	 */
	next_events?: boolean | null;
	/**
	 * Past Events
	 */
	past_events?: boolean | null;
	status?: Status | null;
	/**
	 * Tags
	 */
	tags?: Array<string> | null;
};

/**
 * MinimalEventSchema
 */
export type MinimalEventSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Slug
	 */
	slug: string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Start
	 */
	start?: string | null;
	/**
	 * Logo
	 */
	logo?: string | null;
};

/**
 * PaginatedResponseSchema[MinimalRevelUserSchema]
 */
export type PaginatedResponseSchemaMinimalRevelUserSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<MinimalRevelUserSchema>;
};

/**
 * EventRSVPSchema
 */
export type EventRsvpSchema = {
	/**
	 * Event Id
	 */
	event_id: string;
	status: Status;
};

/**
 * EventTicketSchema
 */
export type EventTicketSchema = {
	/**
	 * Event Id
	 */
	event_id: string | null;
	tier?: TierSchema | null;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Status
	 */
	status?: string;
	/**
	 * Checked In At
	 */
	checked_in_at?: string | null;
};

/**
 * EventUserEligibility
 */
export type EventUserEligibility = {
	/**
	 * Allowed
	 */
	allowed: boolean;
	/**
	 * Event Id
	 */
	event_id: string;
	/**
	 * Reason
	 */
	reason?: string | null;
	next_step?: NextStep | null;
	/**
	 * Questionnaires Missing
	 */
	questionnaires_missing?: Array<string> | null;
	/**
	 * Questionnaires Pending Review
	 */
	questionnaires_pending_review?: Array<string> | null;
	/**
	 * Questionnaires Failed
	 */
	questionnaires_failed?: Array<string> | null;
	/**
	 * Retry On
	 */
	retry_on?: string | null;
};

/**
 * NextStep
 */
export type NextStep =
	| 'request_invitation'
	| 'become_member'
	| 'complete_questionnaire'
	| 'wait_for_questionnaire_evaluation'
	| 'wait_to_retake_questionnaire'
	| 'wait_for_event_to_open'
	| 'join_waitlist'
	| 'purchase_ticket'
	| 'rsvp';

/**
 * EventInvitationRequestSchema
 */
export type EventInvitationRequestSchema = {
	user: MinimalRevelUserSchema;
	event: EventInListSchema;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Message
	 */
	message?: string | null;
	/**
	 * Status
	 */
	status?: string;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * EventInvitationRequestCreateSchema
 */
export type EventInvitationRequestCreateSchema = {
	/**
	 * Message
	 */
	message?: string | null;
};

/**
 * PaginatedResponseSchema[EventInvitationRequestSchema]
 */
export type PaginatedResponseSchemaEventInvitationRequestSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<EventInvitationRequestSchema>;
};

/**
 * StripeCheckoutSessionSchema
 */
export type StripeCheckoutSessionSchema = {
	/**
	 * Checkout Url
	 */
	checkout_url: string;
};

/**
 * PWYCCheckoutPayloadSchema
 *
 * Schema for Pay What You Can checkout payload.
 */
export type PwycCheckoutPayloadSchema = {
	/**
	 * Pwyc
	 *
	 * Pay what you can amount, minimum 1
	 */
	pwyc: number | string;
};

/**
 * FreeTextQuestionSchema
 */
export type FreeTextQuestionSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Question
	 */
	question: string;
	/**
	 * Is Mandatory
	 */
	is_mandatory: boolean;
	/**
	 * Order
	 */
	order: number;
};

/**
 * MultipleChoiceOptionSchema
 */
export type MultipleChoiceOptionSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Option
	 */
	option: string;
	/**
	 * Order
	 */
	order: number;
};

/**
 * MultipleChoiceQuestionSchema
 */
export type MultipleChoiceQuestionSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Question
	 */
	question: string;
	/**
	 * Is Mandatory
	 */
	is_mandatory: boolean;
	/**
	 * Order
	 */
	order: number;
	/**
	 * Allow Multiple Answers
	 */
	allow_multiple_answers: boolean;
	/**
	 * Options
	 */
	options: Array<MultipleChoiceOptionSchema>;
};

/**
 * QuestionnaireSchema
 */
export type QuestionnaireSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Multiple Choice Questions
	 */
	multiple_choice_questions?: Array<MultipleChoiceQuestionSchema>;
	/**
	 * Free Text Questions
	 */
	free_text_questions?: Array<FreeTextQuestionSchema>;
	/**
	 * Sections
	 */
	sections?: Array<SectionSchema>;
};

/**
 * SectionSchema
 */
export type SectionSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Multiple Choice Questions
	 */
	multiple_choice_questions?: Array<MultipleChoiceQuestionSchema>;
	/**
	 * Free Text Questions
	 */
	free_text_questions?: Array<FreeTextQuestionSchema>;
	/**
	 * Order
	 */
	order: number;
};

/**
 * QuestionnaireEvaluationForUserSchema
 */
export type QuestionnaireEvaluationForUserSchema = {
	submission: QuestionnaireSubmissionResponseSchema;
	/**
	 * Score
	 */
	score: number | string;
	status: QuestionnairesModelsQuestionnaireEvaluationStatus;
};

/**
 * QuestionnaireSubmissionResponseSchema
 */
export type QuestionnaireSubmissionResponseSchema = {
	/**
	 * Questionnaire Id
	 */
	questionnaire_id: string;
	status: QuestionnairesModelsQuestionnaireSubmissionStatus;
	/**
	 * Submitted At
	 */
	submitted_at: string;
};

/**
 * Status
 */
export type QuestionnairesModelsQuestionnaireEvaluationStatus =
	| 'approved'
	| 'rejected'
	| 'pending review';

/**
 * Status
 */
export type QuestionnairesModelsQuestionnaireSubmissionStatus = 'draft' | 'ready';

/**
 * FreeTextSubmissionSchema
 */
export type FreeTextSubmissionSchema = {
	/**
	 * Question Id
	 */
	question_id: string;
	/**
	 * Answer
	 */
	answer: string;
};

/**
 * MultipleChoiceSubmissionSchema
 */
export type MultipleChoiceSubmissionSchema = {
	/**
	 * Question Id
	 */
	question_id: string;
	/**
	 * Options Id
	 */
	options_id: Array<string>;
};

/**
 * QuestionnaireSubmissionSchema
 */
export type QuestionnaireSubmissionSchema = {
	/**
	 * Questionnaire Id
	 */
	questionnaire_id: string;
	/**
	 * Multiple Choice Answers
	 */
	multiple_choice_answers?: Array<MultipleChoiceSubmissionSchema>;
	/**
	 * Free Text Answers
	 */
	free_text_answers?: Array<FreeTextSubmissionSchema>;
	status: Status;
};

/**
 * EventTokenSchema
 */
export type EventTokenSchema = {
	/**
	 * Created At
	 */
	created_at: string;
	/**
	 * Updated At
	 */
	updated_at: string;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Issuer
	 */
	issuer: string;
	/**
	 * Expires At
	 */
	expires_at?: string | null;
	/**
	 * Uses
	 */
	uses?: number;
	/**
	 * Max Uses
	 *
	 * The maximum number of invites allowed for this token. 0 Means unlimited.
	 */
	max_uses?: number;
	/**
	 * Event
	 */
	event: string;
	/**
	 * Grants Invitation
	 */
	grants_invitation?: boolean;
	/**
	 * Invitation Tier
	 */
	invitation_tier?: string | null;
	/**
	 * Invitation Payload
	 *
	 * If provided, the token will we viable to claim invitations.
	 */
	invitation_payload?: {
		[key: string]: unknown;
	} | null;
};

/**
 * EventTokenUpdateSchema
 */
export type EventTokenUpdateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Max Uses
	 */
	max_uses?: number;
	invitation?: InvitationBaseSchema | null;
	/**
	 * Invitation Tier Id
	 */
	invitation_tier_id?: string | null;
	/**
	 * Expires At
	 */
	expires_at?: string | null;
};

/**
 * InvitationBaseSchema
 */
export type InvitationBaseSchema = {
	/**
	 * Waives Questionnaire
	 */
	waives_questionnaire?: boolean;
	/**
	 * Waives Purchase
	 */
	waives_purchase?: boolean;
	/**
	 * Overrides Max Attendees
	 */
	overrides_max_attendees?: boolean;
	/**
	 * Waives Membership Required
	 */
	waives_membership_required?: boolean;
	/**
	 * Waives Rsvp Deadline
	 */
	waives_rsvp_deadline?: boolean;
	/**
	 * Custom Message
	 */
	custom_message?: string | null;
};

/**
 * EventTokenFilterSchema
 */
export type EventTokenFilterSchema = {
	/**
	 * Is Active
	 */
	is_active?: boolean | null;
	/**
	 * Event Id
	 */
	event_id?: string | null;
	/**
	 * Has Invitation
	 */
	has_invitation?: boolean | null;
};

/**
 * PaginatedResponseSchema[EventTokenSchema]
 */
export type PaginatedResponseSchemaEventTokenSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<EventTokenSchema>;
};

/**
 * EventTokenCreateSchema
 */
export type EventTokenCreateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Max Uses
	 */
	max_uses?: number;
	invitation?: InvitationBaseSchema | null;
	/**
	 * Invitation Tier Id
	 */
	invitation_tier_id?: string | null;
	/**
	 * Duration
	 */
	duration?: number;
};

/**
 * EventInvitationRequestInternalSchema
 */
export type EventInvitationRequestInternalSchema = {
	user: MinimalRevelUserSchema;
	event: EventInListSchema;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Message
	 */
	message?: string | null;
	/**
	 * Status
	 */
	status?: string;
	/**
	 * Created At
	 */
	created_at: string;
	decided_by?: MinimalRevelUserSchema | null;
};

/**
 * PaginatedResponseSchema[EventInvitationRequestInternalSchema]
 */
export type PaginatedResponseSchemaEventInvitationRequestInternalSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<EventInvitationRequestInternalSchema>;
};

/**
 * EventEditSchema
 */
export type EventEditSchema = {
	/**
	 * City Id
	 */
	city_id?: number | null;
	/**
	 * Address
	 */
	address?: string | null;
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Description
	 */
	description?: string | null;
	event_type?: Types | null;
	status?: Status;
	visibility?: Visibility | null;
	/**
	 * Invitation Message
	 *
	 * Invitation message
	 */
	invitation_message?: string | null;
	/**
	 * Max Attendees
	 */
	max_attendees?: number;
	/**
	 * Waitlist Open
	 */
	waitlist_open?: boolean;
	/**
	 * Start
	 */
	start?: string | null;
	/**
	 * End
	 */
	end?: string | null;
	/**
	 * Rsvp Before
	 *
	 * RSVP deadline for events that do not require tickets
	 */
	rsvp_before?: string | null;
	/**
	 * Check In Starts At
	 *
	 * When check-in opens for this event
	 */
	check_in_starts_at?: string | null;
	/**
	 * Check In Ends At
	 *
	 * When check-in closes for this event
	 */
	check_in_ends_at?: string | null;
	/**
	 * Event Series Id
	 */
	event_series_id?: string | null;
	/**
	 * Free For Members
	 */
	free_for_members?: boolean;
	/**
	 * Free For Staff
	 */
	free_for_staff?: boolean;
	/**
	 * Requires Ticket
	 */
	requires_ticket?: boolean;
	/**
	 * Potluck Open
	 */
	potluck_open?: boolean;
};

/**
 * PaginatedResponseSchema[TicketTierDetailSchema]
 */
export type PaginatedResponseSchemaTicketTierDetailSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<TicketTierDetailSchema>;
};

/**
 * TicketTierDetailSchema
 */
export type TicketTierDetailSchema = {
	/**
	 * Event Id
	 */
	event_id: string;
	/**
	 * Total Available
	 */
	total_available?: number | null;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
	/**
	 * Visibility
	 */
	visibility?: string;
	/**
	 * Payment Method
	 */
	payment_method?: string;
	/**
	 * Purchasable By
	 */
	purchasable_by?: string;
	/**
	 * Price
	 */
	price?: number | string;
	/**
	 * Price Type
	 *
	 * Whether this tier has a fixed price or allows pay-what-you-can pricing
	 */
	price_type?: string;
	/**
	 * Pwyc Min
	 *
	 * Minimum amount for pay-what-you-can pricing
	 */
	pwyc_min?: number | string;
	/**
	 * Pwyc Max
	 *
	 * Maximum amount for pay-what-you-can pricing (optional)
	 */
	pwyc_max?: number | string | null;
	/**
	 * Currency
	 *
	 * ISO 4217 currency code
	 */
	currency?: string;
	/**
	 * Sales Start At
	 *
	 * When ticket sales begin for this tier
	 */
	sales_start_at?: string | null;
	/**
	 * Sales End At
	 *
	 * When ticket sales end for this tier
	 */
	sales_end_at?: string | null;
	/**
	 * Created At
	 */
	created_at: string;
	/**
	 * Updated At
	 */
	updated_at: string;
	/**
	 * Total Quantity
	 */
	total_quantity?: number | null;
	/**
	 * Quantity Sold
	 */
	quantity_sold?: number;
	/**
	 * Manual Payment Instructions
	 */
	manual_payment_instructions?: string | null;
};

/**
 * PaymentMethod
 */
export type PaymentMethod = 'online' | 'offline' | 'at_the_door' | 'free';

/**
 * PriceType
 */
export type PriceType = 'fixed' | 'pwyc';

/**
 * PurchasableBy
 */
export type PurchasableBy = 'public' | 'members' | 'invited' | 'invited_and_members';

/**
 * TicketTierCreateSchema
 */
export type TicketTierCreateSchema = {
	payment_method?: PaymentMethod;
	/**
	 * Price
	 */
	price?: number | string;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Description
	 */
	description?: string | null;
	visibility?: Visibility;
	purchasable_by?: PurchasableBy;
	price_type?: PriceType;
	/**
	 * Pwyc Min
	 */
	pwyc_min?: number | string;
	/**
	 * Pwyc Max
	 */
	pwyc_max?: number | string | null;
	/**
	 * Currency
	 */
	currency?: string;
	/**
	 * Sales Start At
	 */
	sales_start_at?: string | null;
	/**
	 * Sales End At
	 */
	sales_end_at?: string | null;
	/**
	 * Total Quantity
	 */
	total_quantity?: number | null;
};

/**
 * TicketTierUpdateSchema
 */
export type TicketTierUpdateSchema = {
	payment_method?: PaymentMethod;
	/**
	 * Price
	 */
	price?: number | string;
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Description
	 */
	description?: string | null;
	visibility?: Visibility | null;
	purchasable_by?: PurchasableBy | null;
	price_type?: PriceType | null;
	/**
	 * Pwyc Min
	 */
	pwyc_min?: number | string | null;
	/**
	 * Pwyc Max
	 */
	pwyc_max?: number | string | null;
	/**
	 * Currency
	 */
	currency?: string | null;
	/**
	 * Sales Start At
	 */
	sales_start_at?: string | null;
	/**
	 * Sales End At
	 */
	sales_end_at?: string | null;
	/**
	 * Total Quantity
	 */
	total_quantity?: number | null;
};

/**
 * PaginatedResponseSchema[PendingTicketSchema]
 */
export type PaginatedResponseSchemaPendingTicketSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<PendingTicketSchema>;
};

/**
 * PendingTicketSchema
 *
 * Schema for pending tickets in admin interface.
 */
export type PendingTicketSchema = {
	user: MemberUserSchema;
	tier: TierSchema;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Status
	 */
	status?: string;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * CheckInResponseSchema
 *
 * Schema for ticket check-in response.
 */
export type CheckInResponseSchema = {
	user: MinimalRevelUserSchema;
	tier?: TierSchema | null;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Status
	 */
	status?: string;
	/**
	 * Checked In At
	 */
	checked_in_at?: string | null;
};

/**
 * CheckInRequestSchema
 *
 * Schema for ticket check-in requests.
 */
export type CheckInRequestSchema = {
	/**
	 * Ticket Id
	 */
	ticket_id: string;
};

/**
 * DirectInvitationResponseSchema
 *
 * Response schema for direct invitation creation.
 */
export type DirectInvitationResponseSchema = {
	/**
	 * Created Invitations
	 *
	 * Number of EventInvitation objects created
	 */
	created_invitations: number;
	/**
	 * Pending Invitations
	 *
	 * Number of PendingEventInvitation objects created
	 */
	pending_invitations: number;
	/**
	 * Total Invited
	 *
	 * Total number of users invited
	 */
	total_invited: number;
};

/**
 * DirectInvitationCreateSchema
 *
 * Schema for creating direct invitations to events.
 */
export type DirectInvitationCreateSchema = {
	/**
	 * Waives Questionnaire
	 */
	waives_questionnaire?: boolean;
	/**
	 * Waives Purchase
	 */
	waives_purchase?: boolean;
	/**
	 * Overrides Max Attendees
	 */
	overrides_max_attendees?: boolean;
	/**
	 * Waives Membership Required
	 */
	waives_membership_required?: boolean;
	/**
	 * Waives Rsvp Deadline
	 */
	waives_rsvp_deadline?: boolean;
	/**
	 * Custom Message
	 */
	custom_message?: string | null;
	/**
	 * Emails
	 *
	 * List of email addresses to invite
	 */
	emails: Array<string>;
	/**
	 * Tier Id
	 *
	 * Ticket tier to assign to invitations
	 */
	tier_id: string;
	/**
	 * Send Notification
	 *
	 * Whether to send notification emails
	 */
	send_notification?: boolean;
};

/**
 * EventInvitationListSchema
 *
 * Schema for listing EventInvitation objects.
 */
export type EventInvitationListSchema = {
	/**
	 * Id
	 */
	id: string;
	user: MinimalRevelUserSchema;
	tier?: TierSchema | null;
	/**
	 * Waives Questionnaire
	 */
	waives_questionnaire: boolean;
	/**
	 * Waives Purchase
	 */
	waives_purchase: boolean;
	/**
	 * Overrides Max Attendees
	 */
	overrides_max_attendees: boolean;
	/**
	 * Waives Membership Required
	 */
	waives_membership_required: boolean;
	/**
	 * Waives Rsvp Deadline
	 */
	waives_rsvp_deadline: boolean;
	/**
	 * Custom Message
	 */
	custom_message?: string | null;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * PaginatedResponseSchema[EventInvitationListSchema]
 */
export type PaginatedResponseSchemaEventInvitationListSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<EventInvitationListSchema>;
};

/**
 * PaginatedResponseSchema[PendingEventInvitationListSchema]
 */
export type PaginatedResponseSchemaPendingEventInvitationListSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<PendingEventInvitationListSchema>;
};

/**
 * PendingEventInvitationListSchema
 *
 * Schema for listing PendingEventInvitation objects.
 */
export type PendingEventInvitationListSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Email
	 */
	email: string;
	tier?: TierSchema | null;
	/**
	 * Waives Questionnaire
	 */
	waives_questionnaire: boolean;
	/**
	 * Waives Purchase
	 */
	waives_purchase: boolean;
	/**
	 * Overrides Max Attendees
	 */
	overrides_max_attendees: boolean;
	/**
	 * Waives Membership Required
	 */
	waives_membership_required: boolean;
	/**
	 * Waives Rsvp Deadline
	 */
	waives_rsvp_deadline: boolean;
	/**
	 * Custom Message
	 */
	custom_message?: string | null;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * OrganizationPermissionsSchema
 */
export type OrganizationPermissionsSchema = {
	/**
	 * Organization Permissions
	 */
	organization_permissions?: {
		[key: string]: PermissionsSchema | 'owner';
	} | null;
};

/**
 * EventSeriesFilterSchema
 */
export type EventSeriesFilterSchema = {
	/**
	 * Organization
	 */
	organization?: string | null;
	/**
	 * Tags
	 */
	tags?: Array<string> | null;
};

/**
 * PotluckItemRetrieveSchema
 */
export type PotluckItemRetrieveSchema = {
	/**
	 * Is Assigned
	 */
	is_assigned?: boolean;
	/**
	 * Is Owned
	 */
	is_owned?: boolean;
	/**
	 * Note Html
	 */
	note_html?: string;
	/**
	 * Id
	 */
	id?: string | null;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Item Type
	 */
	item_type: string;
	/**
	 * Quantity
	 */
	quantity?: string | null;
	/**
	 * Note
	 */
	note?: string | null;
};

/**
 * ItemTypes
 */
export type ItemTypes =
	| 'food'
	| 'main_course'
	| 'side_dish'
	| 'dessert'
	| 'drink'
	| 'alcohol'
	| 'non_alcoholic'
	| 'supplies'
	| 'labor'
	| 'entertainment'
	| 'sexual_health'
	| 'toys'
	| 'care'
	| 'transport'
	| 'misc';

/**
 * PotluckItemCreateSchema
 */
export type PotluckItemCreateSchema = {
	item_type: ItemTypes;
	/**
	 * Name
	 */
	name: string;
	/**
	 * Quantity
	 */
	quantity?: string | null;
	/**
	 * Note
	 */
	note?: string | null;
};

/**
 * EvaluationMode
 */
export type EvaluationMode = 'automatic' | 'manual' | 'hybrid';

/**
 * OrganizationQuestionnaireInListSchema
 */
export type OrganizationQuestionnaireInListSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Events
	 */
	events?: Array<MinimalEventSchema>;
	/**
	 * Event Series
	 */
	event_series?: Array<EventSeriesRetrieveSchema>;
	/**
	 * Max Submission Age
	 */
	max_submission_age?: string | number | null;
	questionnaire_type: Types;
	questionnaire: QuestionnaireInListSchema;
};

/**
 * PaginatedResponseSchema[OrganizationQuestionnaireInListSchema]
 */
export type PaginatedResponseSchemaOrganizationQuestionnaireInListSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<OrganizationQuestionnaireInListSchema>;
};

/**
 * QuestionnaireInListSchema
 */
export type QuestionnaireInListSchema = {
	/**
	 * Name
	 */
	name: string;
	status: QuestionnairesModelsQuestionnaireStatus;
	/**
	 * Min Score
	 */
	min_score: number | string;
	/**
	 * Shuffle Questions
	 */
	shuffle_questions?: boolean;
	/**
	 * Shuffle Sections
	 */
	shuffle_sections?: boolean;
	evaluation_mode: EvaluationMode;
	/**
	 * Id
	 */
	id: string;
};

/**
 * FreeTextQuestionCreateSchema
 *
 * Schema for creating a FreeTextQuestion.
 */
export type FreeTextQuestionCreateSchema = {
	/**
	 * Section Id
	 */
	section_id?: string | null;
	/**
	 * Question
	 */
	question: string;
	/**
	 * Is Mandatory
	 */
	is_mandatory?: boolean;
	/**
	 * Order
	 */
	order?: number;
	/**
	 * Positive Weight
	 */
	positive_weight?: number | string;
	/**
	 * Negative Weight
	 */
	negative_weight?: number | string;
	/**
	 * Is Fatal
	 */
	is_fatal?: boolean;
	/**
	 * Llm Guidelines
	 */
	llm_guidelines?: string | null;
};

/**
 * MultipleChoiceOptionCreateSchema
 *
 * Schema for creating a MultipleChoiceOption.
 */
export type MultipleChoiceOptionCreateSchema = {
	/**
	 * Option
	 */
	option: string;
	/**
	 * Is Correct
	 */
	is_correct?: boolean;
	/**
	 * Order
	 */
	order?: number;
};

/**
 * MultipleChoiceQuestionCreateSchema
 *
 * Schema for creating a MultipleChoiceQuestion.
 */
export type MultipleChoiceQuestionCreateSchema = {
	/**
	 * Section Id
	 */
	section_id?: string | null;
	/**
	 * Question
	 */
	question: string;
	/**
	 * Is Mandatory
	 */
	is_mandatory?: boolean;
	/**
	 * Order
	 */
	order?: number;
	/**
	 * Positive Weight
	 */
	positive_weight?: number | string;
	/**
	 * Negative Weight
	 */
	negative_weight?: number | string;
	/**
	 * Is Fatal
	 */
	is_fatal?: boolean;
	/**
	 * Allow Multiple Answers
	 */
	allow_multiple_answers?: boolean;
	/**
	 * Shuffle Options
	 */
	shuffle_options?: boolean;
	/**
	 * Options
	 */
	options: Array<MultipleChoiceOptionCreateSchema>;
};

/**
 * OrganizationQuestionnaireSchema
 */
export type OrganizationQuestionnaireSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Events
	 */
	events?: Array<MinimalEventSchema>;
	/**
	 * Event Series
	 */
	event_series?: Array<EventSeriesRetrieveSchema>;
	/**
	 * Max Submission Age
	 */
	max_submission_age?: string | number | null;
	questionnaire_type: Types;
	questionnaire: QuestionnaireCreateSchema;
};

/**
 * QuestionnaireCreateSchema
 *
 * Schema for creating a new Questionnaire with its sections and questions.
 */
export type QuestionnaireCreateSchema = {
	/**
	 * Name
	 */
	name: string;
	status?: Status;
	/**
	 * Min Score
	 */
	min_score: number | string;
	/**
	 * Shuffle Questions
	 */
	shuffle_questions?: boolean;
	/**
	 * Shuffle Sections
	 */
	shuffle_sections?: boolean;
	evaluation_mode: EvaluationMode;
	/**
	 * Sections
	 */
	sections?: Array<SectionCreateSchema>;
	/**
	 * Multiplechoicequestion Questions
	 */
	multiplechoicequestion_questions?: Array<MultipleChoiceQuestionCreateSchema>;
	/**
	 * Freetextquestion Questions
	 */
	freetextquestion_questions?: Array<FreeTextQuestionCreateSchema>;
	/**
	 * Llm Guidelines
	 */
	llm_guidelines?: string | null;
	/**
	 * Can Retake After
	 */
	can_retake_after?: string | number | null;
};

/**
 * SectionCreateSchema
 *
 * Schema for creating a QuestionnaireSection.
 */
export type SectionCreateSchema = {
	/**
	 * Name
	 */
	name: string;
	/**
	 * Order
	 */
	order?: number;
	/**
	 * Multiplechoicequestion Questions
	 */
	multiplechoicequestion_questions?: Array<MultipleChoiceQuestionCreateSchema>;
	/**
	 * Freetextquestion Questions
	 */
	freetextquestion_questions?: Array<FreeTextQuestionCreateSchema>;
};

/**
 * OrganizationQuestionnaireCreateSchema
 *
 * Schema for creating OrganizationQuestionnaire with its underlying Questionnaire.
 *
 * Combines Questionnaire creation fields (name, sections, questions, etc.) with
 * OrganizationQuestionnaire wrapper fields (max_submission_age, questionnaire_type).
 */
export type OrganizationQuestionnaireCreateSchema = {
	/**
	 * Max Submission Age
	 */
	max_submission_age?: string | null;
	questionnaire_type?: Types;
	/**
	 * Name
	 */
	name: string;
	status?: Status;
	/**
	 * Min Score
	 */
	min_score: number | string;
	/**
	 * Shuffle Questions
	 */
	shuffle_questions?: boolean;
	/**
	 * Shuffle Sections
	 */
	shuffle_sections?: boolean;
	evaluation_mode: EvaluationMode;
	/**
	 * Sections
	 */
	sections?: Array<SectionCreateSchema>;
	/**
	 * Multiplechoicequestion Questions
	 */
	multiplechoicequestion_questions?: Array<MultipleChoiceQuestionCreateSchema>;
	/**
	 * Freetextquestion Questions
	 */
	freetextquestion_questions?: Array<FreeTextQuestionCreateSchema>;
	/**
	 * Llm Guidelines
	 */
	llm_guidelines?: string | null;
	/**
	 * Can Retake After
	 */
	can_retake_after?: string | number | null;
};

/**
 * OrganizationQuestionnaireUpdateSchema
 *
 * Schema for updating OrganizationQuestionnaire and its underlying Questionnaire.
 *
 * Includes fields from both OrganizationQuestionnaire (wrapper) and Questionnaire (the actual questionnaire).
 * All fields are optional to allow partial updates.
 */
export type OrganizationQuestionnaireUpdateSchema = {
	/**
	 * Name
	 */
	name?: string | null;
	/**
	 * Min Score
	 */
	min_score?: number | string | null;
	/**
	 * Shuffle Questions
	 */
	shuffle_questions?: boolean | null;
	/**
	 * Shuffle Sections
	 */
	shuffle_sections?: boolean | null;
	evaluation_mode?: EvaluationMode | null;
	/**
	 * Llm Guidelines
	 */
	llm_guidelines?: string | null;
	/**
	 * Can Retake After
	 */
	can_retake_after?: string | null;
	/**
	 * Max Attempts
	 */
	max_attempts?: number;
	/**
	 * Max Submission Age
	 */
	max_submission_age?: string | null;
	questionnaire_type?: Types | null;
};

/**
 * SectionUpdateSchema
 *
 * Schema for updating a Section.
 */
export type SectionUpdateSchema = {
	/**
	 * Name
	 */
	name: string;
	/**
	 * Order
	 */
	order?: number;
	/**
	 * Multiplechoicequestion Questions
	 */
	multiplechoicequestion_questions?: Array<MultipleChoiceQuestionCreateSchema>;
	/**
	 * Freetextquestion Questions
	 */
	freetextquestion_questions?: Array<FreeTextQuestionCreateSchema>;
};

/**
 * MultipleChoiceQuestionUpdateSchema
 *
 * Schema for updating a MultipleChoiceQuestion.
 */
export type MultipleChoiceQuestionUpdateSchema = {
	/**
	 * Section Id
	 */
	section_id?: string | null;
	/**
	 * Question
	 */
	question: string;
	/**
	 * Is Mandatory
	 */
	is_mandatory?: boolean;
	/**
	 * Order
	 */
	order?: number;
	/**
	 * Positive Weight
	 */
	positive_weight?: number | string;
	/**
	 * Negative Weight
	 */
	negative_weight?: number | string;
	/**
	 * Is Fatal
	 */
	is_fatal?: boolean;
	/**
	 * Allow Multiple Answers
	 */
	allow_multiple_answers?: boolean;
	/**
	 * Shuffle Options
	 */
	shuffle_options?: boolean;
	/**
	 * Options
	 */
	options: Array<MultipleChoiceOptionCreateSchema>;
};

/**
 * MultipleChoiceOptionUpdateSchema
 *
 * Schema for updating a MultipleChoiceOption.
 */
export type MultipleChoiceOptionUpdateSchema = {
	/**
	 * Option
	 */
	option: string;
	/**
	 * Is Correct
	 */
	is_correct?: boolean;
	/**
	 * Order
	 */
	order?: number;
};

/**
 * FreeTextQuestionUpdateSchema
 *
 * Schema for updating a FreeTextQuestion.
 */
export type FreeTextQuestionUpdateSchema = {
	/**
	 * Section Id
	 */
	section_id?: string | null;
	/**
	 * Question
	 */
	question: string;
	/**
	 * Is Mandatory
	 */
	is_mandatory?: boolean;
	/**
	 * Order
	 */
	order?: number;
	/**
	 * Positive Weight
	 */
	positive_weight?: number | string;
	/**
	 * Negative Weight
	 */
	negative_weight?: number | string;
	/**
	 * Is Fatal
	 */
	is_fatal?: boolean;
	/**
	 * Llm Guidelines
	 */
	llm_guidelines?: string | null;
};

/**
 * PaginatedResponseSchema[SubmissionListItemSchema]
 */
export type PaginatedResponseSchemaSubmissionListItemSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<SubmissionListItemSchema>;
};

/**
 * SubmissionListItemSchema
 *
 * Schema for listing submissions for organization staff.
 */
export type SubmissionListItemSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * User Email
	 */
	user_email: string;
	/**
	 * User Name
	 */
	user_name: string;
	/**
	 * Questionnaire Name
	 */
	questionnaire_name: string;
	evaluation_status?: Status | null;
	/**
	 * Evaluation Score
	 */
	evaluation_score?: number | string | null;
	/**
	 * Status
	 *
	 * The status of the submission.
	 */
	status?: string;
	/**
	 * Submitted At
	 */
	submitted_at?: string | null;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * EvaluationResponseSchema
 *
 * Schema for evaluation response.
 */
export type EvaluationResponseSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * Submission Id
	 */
	submission_id: string;
	status: Status;
	/**
	 * Score
	 */
	score: number | string | null;
	/**
	 * Comments
	 */
	comments: string | null;
	/**
	 * Evaluator Id
	 */
	evaluator_id: string | null;
	/**
	 * Created At
	 */
	created_at: string;
	/**
	 * Updated At
	 */
	updated_at: string;
};

/**
 * QuestionAnswerDetailSchema
 *
 * Schema for question and answer details.
 */
export type QuestionAnswerDetailSchema = {
	/**
	 * Question Id
	 */
	question_id: string;
	/**
	 * Question Text
	 */
	question_text: string;
	/**
	 * Question Type
	 */
	question_type: string;
	/**
	 * Answer Content
	 */
	answer_content: {
		[key: string]: unknown;
	};
};

/**
 * SubmissionDetailSchema
 *
 * Schema for detailed view of a submission.
 */
export type SubmissionDetailSchema = {
	/**
	 * Id
	 */
	id: string;
	/**
	 * User Email
	 */
	user_email: string;
	/**
	 * User Name
	 */
	user_name: string;
	questionnaire: QuestionnaireInListSchema;
	status: QuestionnairesModelsQuestionnaireSubmissionStatus;
	/**
	 * Submitted At
	 */
	submitted_at: string | null;
	evaluation?: EvaluationResponseSchema | null;
	/**
	 * Answers
	 */
	answers: Array<QuestionAnswerDetailSchema>;
	/**
	 * Created At
	 */
	created_at: string;
};

/**
 * Status
 */
export type QuestionnairesModelsQuestionnaireStatus = 'draft' | 'ready' | 'published';

/**
 * EvaluationCreateSchema
 *
 * Schema for creating/updating an evaluation.
 */
export type EvaluationCreateSchema = {
	status: Status;
	/**
	 * Score
	 */
	score?: number | string | null;
	/**
	 * Comments
	 */
	comments?: string | null;
};

/**
 * EventAssignmentSchema
 */
export type EventAssignmentSchema = {
	/**
	 * Event Ids
	 */
	event_ids: Array<string>;
};

/**
 * EventSeriesAssignmentSchema
 */
export type EventSeriesAssignmentSchema = {
	/**
	 * Event Series Ids
	 */
	event_series_ids: Array<string>;
};

/**
 * GeneralUserPreferencesSchema
 */
export type GeneralUserPreferencesSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	city?: CitySchema | null;
};

/**
 * VisibilityPreference
 */
export type VisibilityPreference = 'always' | 'never' | 'to_members' | 'to_invitees' | 'to_both';

/**
 * GeneralUserPreferencesUpdateSchema
 */
export type GeneralUserPreferencesUpdateSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * City Id
	 */
	city_id?: number | null;
};

/**
 * UserOrganizationPreferencesSchema
 */
export type UserOrganizationPreferencesSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * Is Subscribed
	 */
	is_subscribed: boolean;
	/**
	 * Notify On New Events
	 */
	notify_on_new_events: boolean;
};

/**
 * UserOrganizationPreferencesUpdateSchema
 */
export type UserOrganizationPreferencesUpdateSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * Is Subscribed
	 */
	is_subscribed?: boolean;
	/**
	 * Notify On New Events
	 */
	notify_on_new_events?: boolean;
};

/**
 * UserEventSeriesPreferencesSchema
 */
export type UserEventSeriesPreferencesSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * Is Subscribed
	 */
	is_subscribed: boolean;
	/**
	 * Notify On New Events
	 */
	notify_on_new_events: boolean;
};

/**
 * UserEventSeriesPreferencesUpdateSchema
 */
export type UserEventSeriesPreferencesUpdateSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * Is Subscribed
	 */
	is_subscribed?: boolean;
	/**
	 * Notify On New Events
	 */
	notify_on_new_events?: boolean;
};

/**
 * UserEventPreferencesSchema
 */
export type UserEventPreferencesSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * Is Subscribed
	 */
	is_subscribed: boolean;
	/**
	 * Notify On Potluck Updates
	 */
	notify_on_potluck_updates: boolean;
};

/**
 * UserEventPreferencesUpdateSchema
 */
export type UserEventPreferencesUpdateSchema = {
	show_me_on_attendee_list?: VisibilityPreference;
	/**
	 * Event Reminders
	 */
	event_reminders?: boolean;
	/**
	 * Silence All Notifications
	 */
	silence_all_notifications?: boolean;
	/**
	 * Is Subscribed
	 */
	is_subscribed?: boolean;
	/**
	 * Notify On Potluck Updates
	 */
	notify_on_potluck_updates?: boolean;
};

/**
 * PaginatedResponseSchema[TagSchema]
 */
export type PaginatedResponseSchemaTagSchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<TagSchema>;
};

/**
 * CityFilterSchema
 */
export type CityFilterSchema = {
	/**
	 * Country
	 */
	country?: string | null;
};

/**
 * PaginatedResponseSchema[CitySchema]
 */
export type PaginatedResponseSchemaCitySchema = {
	/**
	 * Count
	 */
	count: number;
	/**
	 * Next
	 */
	next: string | null;
	/**
	 * Previous
	 */
	previous: string | null;
	/**
	 * Results
	 */
	results: Array<CitySchema>;
};

export type ApiApiVersionData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/version';
};

export type ApiApiVersionResponses = {
	/**
	 * OK
	 */
	200: VersionResponse;
};

export type ApiApiVersionResponse = ApiApiVersionResponses[keyof ApiApiVersionResponses];

export type ApiApiHealthcheckData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/healthcheck';
};

export type ApiApiHealthcheckResponses = {
	/**
	 * OK
	 */
	200: ResponseOk;
};

export type ApiApiHealthcheckResponse =
	ApiApiHealthcheckResponses[keyof ApiApiHealthcheckResponses];

export type AuthObtainToken3345D8C8Data = {
	body: TokenObtainPairInputSchema;
	path?: never;
	query?: never;
	url: '/api/auth/token/pair';
};

export type AuthObtainToken3345D8C8Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: TokenObtainPairOutputSchema | TempToken;
};

export type AuthObtainToken3345D8C8Response =
	AuthObtainToken3345D8C8Responses[keyof AuthObtainToken3345D8C8Responses];

export type TokenRefreshData = {
	body: TokenRefreshInputSchema;
	path?: never;
	query?: never;
	url: '/api/auth/refresh';
};

export type TokenRefreshResponses = {
	/**
	 * OK
	 */
	200: TokenRefreshOutputSchema;
};

export type TokenRefreshResponse = TokenRefreshResponses[keyof TokenRefreshResponses];

export type AuthDemoObtainToken8Dcf5223Data = {
	body: DemoLoginSchema;
	path?: never;
	query?: never;
	url: '/api/auth/demo/token/pair';
};

export type AuthDemoObtainToken8Dcf5223Responses = {
	/**
	 * OK
	 */
	200: TokenObtainPairOutputSchema;
};

export type AuthDemoObtainToken8Dcf5223Response =
	AuthDemoObtainToken8Dcf5223Responses[keyof AuthDemoObtainToken8Dcf5223Responses];

export type AuthObtainTokenWithOtp46814DfbData = {
	body: TempTokenWithTotp;
	path?: never;
	query?: never;
	url: '/api/auth/token/pair/otp';
};

export type AuthObtainTokenWithOtp46814DfbResponses = {
	/**
	 * OK
	 */
	200: TokenObtainPairOutputSchema;
};

export type AuthObtainTokenWithOtp46814DfbResponse =
	AuthObtainTokenWithOtp46814DfbResponses[keyof AuthObtainTokenWithOtp46814DfbResponses];

export type AuthGoogleLogin8Df12665Data = {
	body: GoogleIdTokenSchema;
	path?: never;
	query?: never;
	url: '/api/auth/google/login';
};

export type AuthGoogleLogin8Df12665Responses = {
	/**
	 * OK
	 */
	200: TokenObtainPairOutputSchema;
};

export type AuthGoogleLogin8Df12665Response =
	AuthGoogleLogin8Df12665Responses[keyof AuthGoogleLogin8Df12665Responses];

export type OtpSetupOtp9C41130cData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/otp/setup';
};

export type OtpSetupOtp9C41130cResponses = {
	/**
	 * OK
	 */
	200: TotpProvisioningUriSchema;
};

export type OtpSetupOtp9C41130cResponse =
	OtpSetupOtp9C41130cResponses[keyof OtpSetupOtp9C41130cResponses];

export type OtpEnableOtp9E070581Data = {
	body: OtpVerifySchema;
	path?: never;
	query?: never;
	url: '/api/otp/verify';
};

export type OtpEnableOtp9E070581Responses = {
	/**
	 * OK
	 */
	200: RevelUserSchema;
};

export type OtpEnableOtp9E070581Response =
	OtpEnableOtp9E070581Responses[keyof OtpEnableOtp9E070581Responses];

export type OtpDisableOtpBa908B6dData = {
	body: OtpVerifySchema;
	path?: never;
	query?: never;
	url: '/api/otp/disable';
};

export type OtpDisableOtpBa908B6dResponses = {
	/**
	 * OK
	 */
	200: RevelUserSchema;
};

export type OtpDisableOtpBa908B6dResponse =
	OtpDisableOtpBa908B6dResponses[keyof OtpDisableOtpBa908B6dResponses];

export type AccountExportData7302D324Data = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/account/export-data';
};

export type AccountExportData7302D324Responses = {
	/**
	 * OK
	 */
	200: ResponseMessage;
};

export type AccountExportData7302D324Response =
	AccountExportData7302D324Responses[keyof AccountExportData7302D324Responses];

export type AccountMe2C6272B3Data = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/account/me';
};

export type AccountMe2C6272B3Responses = {
	/**
	 * OK
	 */
	200: RevelUserSchema;
};

export type AccountMe2C6272B3Response =
	AccountMe2C6272B3Responses[keyof AccountMe2C6272B3Responses];

export type AccountUpdateProfile8E461A12Data = {
	body: ProfileUpdateSchema;
	path?: never;
	query?: never;
	url: '/api/account/me';
};

export type AccountUpdateProfile8E461A12Responses = {
	/**
	 * OK
	 */
	200: RevelUserSchema;
};

export type AccountUpdateProfile8E461A12Response =
	AccountUpdateProfile8E461A12Responses[keyof AccountUpdateProfile8E461A12Responses];

export type AccountRegister2F1Be53dData = {
	body: RegisterUserSchema;
	path?: never;
	query?: never;
	url: '/api/account/register';
};

export type AccountRegister2F1Be53dResponses = {
	/**
	 * Created
	 */
	201: RevelUserSchema;
};

export type AccountRegister2F1Be53dResponse =
	AccountRegister2F1Be53dResponses[keyof AccountRegister2F1Be53dResponses];

export type AccountVerifyEmailE5Bfd398Data = {
	body: VerifyEmailSchema;
	path?: never;
	query?: never;
	url: '/api/account/verify';
};

export type AccountVerifyEmailE5Bfd398Responses = {
	/**
	 * OK
	 */
	200: VerifyEmailResponseSchema;
};

export type AccountVerifyEmailE5Bfd398Response =
	AccountVerifyEmailE5Bfd398Responses[keyof AccountVerifyEmailE5Bfd398Responses];

export type AccountResendVerificationEmail3Eeac89bData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/account/verify-resend';
};

export type AccountResendVerificationEmail3Eeac89bErrors = {
	/**
	 * Bad Request
	 */
	400: ResponseMessage;
};

export type AccountResendVerificationEmail3Eeac89bError =
	AccountResendVerificationEmail3Eeac89bErrors[keyof AccountResendVerificationEmail3Eeac89bErrors];

export type AccountResendVerificationEmail3Eeac89bResponses = {
	/**
	 * OK
	 */
	200: ResponseMessage;
};

export type AccountResendVerificationEmail3Eeac89bResponse =
	AccountResendVerificationEmail3Eeac89bResponses[keyof AccountResendVerificationEmail3Eeac89bResponses];

export type AccountDeleteAccountRequestA3245490Data = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/account/delete-request';
};

export type AccountDeleteAccountRequestA3245490Responses = {
	/**
	 * OK
	 */
	200: ResponseMessage;
};

export type AccountDeleteAccountRequestA3245490Response =
	AccountDeleteAccountRequestA3245490Responses[keyof AccountDeleteAccountRequestA3245490Responses];

export type AccountDeleteAccountConfirm17Ae2A5dData = {
	body: DeleteAccountConfirmSchema;
	path?: never;
	query?: never;
	url: '/api/account/delete-confirm';
};

export type AccountDeleteAccountConfirm17Ae2A5dResponses = {
	/**
	 * OK
	 */
	200: ResponseMessage;
};

export type AccountDeleteAccountConfirm17Ae2A5dResponse =
	AccountDeleteAccountConfirm17Ae2A5dResponses[keyof AccountDeleteAccountConfirm17Ae2A5dResponses];

export type AccountResetPasswordRequest9E291A60Data = {
	body: PasswordResetRequestSchema;
	path?: never;
	query?: never;
	url: '/api/account/password/reset-request';
};

export type AccountResetPasswordRequest9E291A60Responses = {
	/**
	 * OK
	 */
	200: ResponseMessage;
};

export type AccountResetPasswordRequest9E291A60Response =
	AccountResetPasswordRequest9E291A60Responses[keyof AccountResetPasswordRequest9E291A60Responses];

export type AccountResetPasswordE1F30D85Data = {
	body: PasswordResetSchema;
	path?: never;
	query?: never;
	url: '/api/account/password/reset';
};

export type AccountResetPasswordE1F30D85Responses = {
	/**
	 * OK
	 */
	200: ResponseMessage;
};

export type AccountResetPasswordE1F30D85Response =
	AccountResetPasswordE1F30D85Responses[keyof AccountResetPasswordE1F30D85Responses];

export type DashboardDashboardOrganizations0E32708fData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Owner
		 */
		owner?: boolean;
		/**
		 * Staff
		 */
		staff?: boolean;
		/**
		 * Member
		 */
		member?: boolean;
		/**
		 * Subscriber
		 */
		subscriber?: boolean;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/dashboard/organizations';
};

export type DashboardDashboardOrganizations0E32708fResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationRetrieveSchema;
};

export type DashboardDashboardOrganizations0E32708fResponse =
	DashboardDashboardOrganizations0E32708fResponses[keyof DashboardDashboardOrganizations0E32708fResponses];

export type DashboardDashboardEventsBd634997Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Owner
		 */
		owner?: boolean;
		/**
		 * Staff
		 */
		staff?: boolean;
		/**
		 * Member
		 */
		member?: boolean;
		/**
		 * Rsvp Yes
		 */
		rsvp_yes?: boolean;
		/**
		 * Rsvp No
		 */
		rsvp_no?: boolean;
		/**
		 * Rsvp Maybe
		 */
		rsvp_maybe?: boolean;
		/**
		 * Got Ticket
		 */
		got_ticket?: boolean;
		/**
		 * Got Invitation
		 */
		got_invitation?: boolean;
		/**
		 * Subscriber
		 */
		subscriber?: boolean;
		/**
		 * Order By
		 */
		order_by?: 'start' | '-start';
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/dashboard/events';
};

export type DashboardDashboardEventsBd634997Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventInListSchema;
};

export type DashboardDashboardEventsBd634997Response =
	DashboardDashboardEventsBd634997Responses[keyof DashboardDashboardEventsBd634997Responses];

export type DashboardDashboardEventSeries3C7F6Cb1Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Owner
		 */
		owner?: boolean;
		/**
		 * Staff
		 */
		staff?: boolean;
		/**
		 * Member
		 */
		member?: boolean;
		/**
		 * Subscriber
		 */
		subscriber?: boolean;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/dashboard/event_series';
};

export type DashboardDashboardEventSeries3C7F6Cb1Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventSeriesRetrieveSchema;
};

export type DashboardDashboardEventSeries3C7F6Cb1Response =
	DashboardDashboardEventSeries3C7F6Cb1Responses[keyof DashboardDashboardEventSeries3C7F6Cb1Responses];

export type DashboardDashboardInvitations58Db198bData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/dashboard/invitations';
};

export type DashboardDashboardInvitations58Db198bResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaInvitationSchema;
};

export type DashboardDashboardInvitations58Db198bResponse =
	DashboardDashboardInvitations58Db198bResponses[keyof DashboardDashboardInvitations58Db198bResponses];

export type OrganizationListOrganizations34A08E93Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Country
		 */
		country?: string | null;
		/**
		 * City Id
		 */
		city_id?: number | null;
		/**
		 * Tags
		 */
		tags?: Array<string> | null;
		/**
		 * Order By
		 */
		order_by?: 'name' | '-name' | 'distance';
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organizations/';
};

export type OrganizationListOrganizations34A08E93Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationRetrieveSchema;
};

export type OrganizationListOrganizations34A08E93Response =
	OrganizationListOrganizations34A08E93Responses[keyof OrganizationListOrganizations34A08E93Responses];

export type OrganizationGetOrganizationD8F70Ed1Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organizations/{slug}';
};

export type OrganizationGetOrganizationD8F70Ed1Responses = {
	/**
	 * OK
	 */
	200: OrganizationRetrieveSchema;
};

export type OrganizationGetOrganizationD8F70Ed1Response =
	OrganizationGetOrganizationD8F70Ed1Responses[keyof OrganizationGetOrganizationD8F70Ed1Responses];

export type OrganizationListResources6F5E967aData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		resource_type?: ResourceTypes | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organizations/{slug}/resources';
};

export type OrganizationListResources6F5E967aResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaAdditionalResourceSchema;
};

export type OrganizationListResources6F5E967aResponse =
	OrganizationListResources6F5E967aResponses[keyof OrganizationListResources6F5E967aResponses];

export type OrganizationCreateMembershipRequest2Dd9A710Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organizations/{slug}/membership-requests';
};

export type OrganizationCreateMembershipRequest2Dd9A710Responses = {
	/**
	 * OK
	 */
	200: OrganizationMembershipRequestRetrieve;
};

export type OrganizationCreateMembershipRequest2Dd9A710Response =
	OrganizationCreateMembershipRequest2Dd9A710Responses[keyof OrganizationCreateMembershipRequest2Dd9A710Responses];

export type OrganizationClaimInvitation3361B794Data = {
	body?: never;
	path: {
		/**
		 * Token
		 */
		token: string;
	};
	query?: never;
	url: '/api/organizations/claim-invitation/{token}';
};

export type OrganizationClaimInvitation3361B794Errors = {
	/**
	 * Bad Request
	 */
	400: ResponseMessage;
};

export type OrganizationClaimInvitation3361B794Error =
	OrganizationClaimInvitation3361B794Errors[keyof OrganizationClaimInvitation3361B794Errors];

export type OrganizationClaimInvitation3361B794Responses = {
	/**
	 * OK
	 */
	200: OrganizationRetrieveSchema;
};

export type OrganizationClaimInvitation3361B794Response =
	OrganizationClaimInvitation3361B794Responses[keyof OrganizationClaimInvitation3361B794Responses];

export type OrganizationadminUpdateOrganization5E6Fe595Data = {
	body: OrganizationEditSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}';
};

export type OrganizationadminUpdateOrganization5E6Fe595Responses = {
	/**
	 * OK
	 */
	200: OrganizationRetrieveSchema;
};

export type OrganizationadminUpdateOrganization5E6Fe595Response =
	OrganizationadminUpdateOrganization5E6Fe595Responses[keyof OrganizationadminUpdateOrganization5E6Fe595Responses];

export type OrganizationadminStripeConnectBb0B6F33Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/stripe/connect';
};

export type OrganizationadminStripeConnectBb0B6F33Responses = {
	/**
	 * OK
	 */
	200: StripeOnboardingLinkSchema;
};

export type OrganizationadminStripeConnectBb0B6F33Response =
	OrganizationadminStripeConnectBb0B6F33Responses[keyof OrganizationadminStripeConnectBb0B6F33Responses];

export type OrganizationadminStripeAccountVerify6602231cData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/stripe/account/verify';
};

export type OrganizationadminStripeAccountVerify6602231cResponses = {
	/**
	 * OK
	 */
	200: StripeAccountStatusSchema;
};

export type OrganizationadminStripeAccountVerify6602231cResponse =
	OrganizationadminStripeAccountVerify6602231cResponses[keyof OrganizationadminStripeAccountVerify6602231cResponses];

export type OrganizationadminUploadLogo37845009Data = {
	/**
	 * FileParams
	 */
	body: {
		/**
		 * Logo
		 */
		logo: Blob | File;
	};
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/upload-logo';
};

export type OrganizationadminUploadLogo37845009Responses = {
	/**
	 * OK
	 */
	200: OrganizationRetrieveSchema;
};

export type OrganizationadminUploadLogo37845009Response =
	OrganizationadminUploadLogo37845009Responses[keyof OrganizationadminUploadLogo37845009Responses];

export type OrganizationadminUploadCoverArt52C08167Data = {
	/**
	 * FileParams
	 */
	body: {
		/**
		 * Cover Art
		 */
		cover_art: Blob | File;
	};
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/upload-cover-art';
};

export type OrganizationadminUploadCoverArt52C08167Responses = {
	/**
	 * OK
	 */
	200: OrganizationRetrieveSchema;
};

export type OrganizationadminUploadCoverArt52C08167Response =
	OrganizationadminUploadCoverArt52C08167Responses[keyof OrganizationadminUploadCoverArt52C08167Responses];

export type OrganizationadminDeleteLogo31558FdbData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/delete-logo';
};

export type OrganizationadminDeleteLogo31558FdbResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminDeleteLogo31558FdbResponse =
	OrganizationadminDeleteLogo31558FdbResponses[keyof OrganizationadminDeleteLogo31558FdbResponses];

export type OrganizationadminDeleteCoverArtDcdaac5fData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/delete-cover-art';
};

export type OrganizationadminDeleteCoverArtDcdaac5fResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminDeleteCoverArtDcdaac5fResponse =
	OrganizationadminDeleteCoverArtDcdaac5fResponses[keyof OrganizationadminDeleteCoverArtDcdaac5fResponses];

export type OrganizationadminCreateEventSeries45603E91Data = {
	body: EventSeriesEditSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/create-event-series';
};

export type OrganizationadminCreateEventSeries45603E91Errors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type OrganizationadminCreateEventSeries45603E91Error =
	OrganizationadminCreateEventSeries45603E91Errors[keyof OrganizationadminCreateEventSeries45603E91Errors];

export type OrganizationadminCreateEventSeries45603E91Responses = {
	/**
	 * OK
	 */
	200: EventSeriesRetrieveSchema;
};

export type OrganizationadminCreateEventSeries45603E91Response =
	OrganizationadminCreateEventSeries45603E91Responses[keyof OrganizationadminCreateEventSeries45603E91Responses];

export type OrganizationadminCreateEvent4A5877B8Data = {
	body: EventCreateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/create-event';
};

export type OrganizationadminCreateEvent4A5877B8Errors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type OrganizationadminCreateEvent4A5877B8Error =
	OrganizationadminCreateEvent4A5877B8Errors[keyof OrganizationadminCreateEvent4A5877B8Errors];

export type OrganizationadminCreateEvent4A5877B8Responses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type OrganizationadminCreateEvent4A5877B8Response =
	OrganizationadminCreateEvent4A5877B8Responses[keyof OrganizationadminCreateEvent4A5877B8Responses];

export type OrganizationadminListOrganizationTokens2183C72dData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		/**
		 * Is Active
		 */
		is_active?: boolean | null;
		/**
		 * Organization Id
		 */
		organization_id?: string | null;
		/**
		 * Membership Pass
		 */
		membership_pass?: boolean | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organization-admin/{slug}/tokens';
};

export type OrganizationadminListOrganizationTokens2183C72dResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationTokenSchema;
};

export type OrganizationadminListOrganizationTokens2183C72dResponse =
	OrganizationadminListOrganizationTokens2183C72dResponses[keyof OrganizationadminListOrganizationTokens2183C72dResponses];

export type OrganizationadminCreateOrganizationTokenE9103Cc1Data = {
	body: OrganizationTokenCreateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/token';
};

export type OrganizationadminCreateOrganizationTokenE9103Cc1Responses = {
	/**
	 * OK
	 */
	200: OrganizationTokenSchema;
};

export type OrganizationadminCreateOrganizationTokenE9103Cc1Response =
	OrganizationadminCreateOrganizationTokenE9103Cc1Responses[keyof OrganizationadminCreateOrganizationTokenE9103Cc1Responses];

export type OrganizationadminDeleteOrganizationTokenE18Ff03bData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Token Id
		 */
		token_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/token/{token_id}';
};

export type OrganizationadminDeleteOrganizationTokenE18Ff03bResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminDeleteOrganizationTokenE18Ff03bResponse =
	OrganizationadminDeleteOrganizationTokenE18Ff03bResponses[keyof OrganizationadminDeleteOrganizationTokenE18Ff03bResponses];

export type OrganizationadminUpdateOrganizationToken483620BcData = {
	body: OrganizationTokenUpdateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Token Id
		 */
		token_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/token/{token_id}';
};

export type OrganizationadminUpdateOrganizationToken483620BcResponses = {
	/**
	 * OK
	 */
	200: OrganizationTokenSchema;
};

export type OrganizationadminUpdateOrganizationToken483620BcResponse =
	OrganizationadminUpdateOrganizationToken483620BcResponses[keyof OrganizationadminUpdateOrganizationToken483620BcResponses];

export type OrganizationadminListMembershipRequests188Bf181Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organization-admin/{slug}/membership-requests';
};

export type OrganizationadminListMembershipRequests188Bf181Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationMembershipRequestRetrieve;
};

export type OrganizationadminListMembershipRequests188Bf181Response =
	OrganizationadminListMembershipRequests188Bf181Responses[keyof OrganizationadminListMembershipRequests188Bf181Responses];

export type OrganizationadminApproveMembershipRequestB8248F2aData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Request Id
		 */
		request_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/membership-requests/{request_id}/approve';
};

export type OrganizationadminApproveMembershipRequestB8248F2aResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminApproveMembershipRequestB8248F2aResponse =
	OrganizationadminApproveMembershipRequestB8248F2aResponses[keyof OrganizationadminApproveMembershipRequestB8248F2aResponses];

export type OrganizationadminRejectMembershipRequest1Ccdf903Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Request Id
		 */
		request_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/membership-requests/{request_id}/reject';
};

export type OrganizationadminRejectMembershipRequest1Ccdf903Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminRejectMembershipRequest1Ccdf903Response =
	OrganizationadminRejectMembershipRequest1Ccdf903Responses[keyof OrganizationadminRejectMembershipRequest1Ccdf903Responses];

export type OrganizationadminListResources416B6E7dData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		resource_type?: ResourceTypes | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organization-admin/{slug}/resources';
};

export type OrganizationadminListResources416B6E7dResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaAdditionalResourceSchema;
};

export type OrganizationadminListResources416B6E7dResponse =
	OrganizationadminListResources416B6E7dResponses[keyof OrganizationadminListResources416B6E7dResponses];

export type OrganizationadminCreateResource4B6C1124Data = {
	/**
	 * FormParams
	 */
	body: {
		/**
		 * Name
		 */
		name?: string | null;
		/**
		 * Description
		 */
		description?: string | null;
		/**
		 * ResourceTypes
		 */
		resource_type: 'file' | 'link' | 'text';
		/**
		 * Visibility
		 */
		visibility?: 'public' | 'private' | 'members-only' | 'staff-only';
		/**
		 * Display On Organization Page
		 */
		display_on_organization_page?: boolean;
		/**
		 * Link
		 */
		link?: string | null;
		/**
		 * Text
		 */
		text?: string | null;
		/**
		 * Event Series Ids
		 */
		event_series_ids?: Array<string>;
		/**
		 * Event Ids
		 */
		event_ids?: Array<string>;
	};
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/resources';
};

export type OrganizationadminCreateResource4B6C1124Responses = {
	/**
	 * OK
	 */
	200: AdditionalResourceSchema;
};

export type OrganizationadminCreateResource4B6C1124Response =
	OrganizationadminCreateResource4B6C1124Responses[keyof OrganizationadminCreateResource4B6C1124Responses];

export type OrganizationadminDeleteResourceF6C7Db62Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Resource Id
		 */
		resource_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/resources/{resource_id}';
};

export type OrganizationadminDeleteResourceF6C7Db62Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminDeleteResourceF6C7Db62Response =
	OrganizationadminDeleteResourceF6C7Db62Responses[keyof OrganizationadminDeleteResourceF6C7Db62Responses];

export type OrganizationadminGetResourceC9D29FefData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Resource Id
		 */
		resource_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/resources/{resource_id}';
};

export type OrganizationadminGetResourceC9D29FefResponses = {
	/**
	 * OK
	 */
	200: AdditionalResourceSchema;
};

export type OrganizationadminGetResourceC9D29FefResponse =
	OrganizationadminGetResourceC9D29FefResponses[keyof OrganizationadminGetResourceC9D29FefResponses];

export type OrganizationadminUpdateResource9E995367Data = {
	body: AdditionalResourceUpdateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * Resource Id
		 */
		resource_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/resources/{resource_id}';
};

export type OrganizationadminUpdateResource9E995367Responses = {
	/**
	 * OK
	 */
	200: AdditionalResourceSchema;
};

export type OrganizationadminUpdateResource9E995367Response =
	OrganizationadminUpdateResource9E995367Responses[keyof OrganizationadminUpdateResource9E995367Responses];

export type OrganizationadminListMembersA6D0C4E8Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organization-admin/{slug}/members';
};

export type OrganizationadminListMembersA6D0C4E8Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationMemberSchema;
};

export type OrganizationadminListMembersA6D0C4E8Response =
	OrganizationadminListMembersA6D0C4E8Responses[keyof OrganizationadminListMembersA6D0C4E8Responses];

export type OrganizationadminRemoveMember20A15911Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * User Id
		 */
		user_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/members/{user_id}';
};

export type OrganizationadminRemoveMember20A15911Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminRemoveMember20A15911Response =
	OrganizationadminRemoveMember20A15911Responses[keyof OrganizationadminRemoveMember20A15911Responses];

export type OrganizationadminListStaffCdf78EafData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/organization-admin/{slug}/staff';
};

export type OrganizationadminListStaffCdf78EafResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationStaffSchema;
};

export type OrganizationadminListStaffCdf78EafResponse =
	OrganizationadminListStaffCdf78EafResponses[keyof OrganizationadminListStaffCdf78EafResponses];

export type OrganizationadminRemoveStaff785D3F09Data = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * User Id
		 */
		user_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/staff/{user_id}';
};

export type OrganizationadminRemoveStaff785D3F09Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminRemoveStaff785D3F09Response =
	OrganizationadminRemoveStaff785D3F09Responses[keyof OrganizationadminRemoveStaff785D3F09Responses];

export type OrganizationadminAddStaffCcaf00E3Data = {
	body?: PermissionsSchema | null;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * User Id
		 */
		user_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/staff/{user_id}';
};

export type OrganizationadminAddStaffCcaf00E3Responses = {
	/**
	 * Created
	 */
	201: OrganizationStaffSchema;
};

export type OrganizationadminAddStaffCcaf00E3Response =
	OrganizationadminAddStaffCcaf00E3Responses[keyof OrganizationadminAddStaffCcaf00E3Responses];

export type OrganizationadminUpdateStaffPermissions7De08F49Data = {
	body: PermissionsSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
		/**
		 * User Id
		 */
		user_id: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/staff/{user_id}/permissions';
};

export type OrganizationadminUpdateStaffPermissions7De08F49Responses = {
	/**
	 * OK
	 */
	200: OrganizationStaffSchema;
};

export type OrganizationadminUpdateStaffPermissions7De08F49Response =
	OrganizationadminUpdateStaffPermissions7De08F49Responses[keyof OrganizationadminUpdateStaffPermissions7De08F49Responses];

export type OrganizationadminClearTagsFc208B9cData = {
	body?: never;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/tags';
};

export type OrganizationadminClearTagsFc208B9cResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type OrganizationadminClearTagsFc208B9cResponse =
	OrganizationadminClearTagsFc208B9cResponses[keyof OrganizationadminClearTagsFc208B9cResponses];

export type OrganizationadminAddTags03Dbb3C3Data = {
	body: TagUpdateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/tags';
};

export type OrganizationadminAddTags03Dbb3C3Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TagSchema>;
};

export type OrganizationadminAddTags03Dbb3C3Response =
	OrganizationadminAddTags03Dbb3C3Responses[keyof OrganizationadminAddTags03Dbb3C3Responses];

export type OrganizationadminRemoveTagsD0Aec8F1Data = {
	body: TagUpdateSchema;
	path: {
		/**
		 * Slug
		 */
		slug: string;
	};
	query?: never;
	url: '/api/organization-admin/{slug}/tags/remove';
};

export type OrganizationadminRemoveTagsD0Aec8F1Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TagSchema>;
};

export type OrganizationadminRemoveTagsD0Aec8F1Response =
	OrganizationadminRemoveTagsD0Aec8F1Responses[keyof OrganizationadminRemoveTagsD0Aec8F1Responses];

export type EventListEvents1A658307Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Country
		 */
		country?: string | null;
		/**
		 * City Id
		 */
		city_id?: number | null;
		/**
		 * Organization
		 */
		organization?: string | null;
		event_type?: Types | null;
		visibility?: Visibility | null;
		/**
		 * Event Series
		 */
		event_series?: string | null;
		/**
		 * Next Events
		 */
		next_events?: boolean | null;
		/**
		 * Past Events
		 */
		past_events?: boolean | null;
		status?: Status | null;
		/**
		 * Tags
		 */
		tags?: Array<string> | null;
		/**
		 * Order By
		 */
		order_by?: 'start' | '-start' | 'distance';
		/**
		 * Include Past
		 */
		include_past?: boolean;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/events/';
};

export type EventListEvents1A658307Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventInListSchema;
};

export type EventListEvents1A658307Response =
	EventListEvents1A658307Responses[keyof EventListEvents1A658307Responses];

export type EventClaimInvitation935047E1Data = {
	body?: never;
	path: {
		/**
		 * Token
		 */
		token: string;
	};
	query?: never;
	url: '/api/events/claim-invitation/{token}';
};

export type EventClaimInvitation935047E1Errors = {
	/**
	 * Bad Request
	 */
	400: ResponseMessage;
};

export type EventClaimInvitation935047E1Error =
	EventClaimInvitation935047E1Errors[keyof EventClaimInvitation935047E1Errors];

export type EventClaimInvitation935047E1Responses = {
	/**
	 * OK
	 */
	200: MinimalEventSchema;
};

export type EventClaimInvitation935047E1Response =
	EventClaimInvitation935047E1Responses[keyof EventClaimInvitation935047E1Responses];

export type EventGetEventAttendees77E1E518Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/events/{event_id}/attendee-list';
};

export type EventGetEventAttendees77E1E518Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaMinimalRevelUserSchema;
};

export type EventGetEventAttendees77E1E518Response =
	EventGetEventAttendees77E1E518Responses[keyof EventGetEventAttendees77E1E518Responses];

export type EventGetMyEventStatus209Cdf75Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/my-status';
};

export type EventGetMyEventStatus209Cdf75Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: EventRsvpSchema | EventTicketSchema | EventUserEligibility;
};

export type EventGetMyEventStatus209Cdf75Response =
	EventGetMyEventStatus209Cdf75Responses[keyof EventGetMyEventStatus209Cdf75Responses];

export type EventRequestInvitationF170A23bData = {
	body: EventInvitationRequestCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/request-invitation';
};

export type EventRequestInvitationF170A23bErrors = {
	/**
	 * Bad Request
	 */
	400: ResponseMessage;
};

export type EventRequestInvitationF170A23bError =
	EventRequestInvitationF170A23bErrors[keyof EventRequestInvitationF170A23bErrors];

export type EventRequestInvitationF170A23bResponses = {
	/**
	 * Created
	 */
	201: EventInvitationRequestSchema;
};

export type EventRequestInvitationF170A23bResponse =
	EventRequestInvitationF170A23bResponses[keyof EventRequestInvitationF170A23bResponses];

export type EventListResourcesD69C2524Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		resource_type?: ResourceTypes | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/events/{event_id}/resources';
};

export type EventListResourcesD69C2524Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaAdditionalResourceSchema;
};

export type EventListResourcesD69C2524Response =
	EventListResourcesD69C2524Responses[keyof EventListResourcesD69C2524Responses];

export type EventDeleteInvitationRequest912D3D08Data = {
	body?: never;
	path: {
		/**
		 * Request Id
		 */
		request_id: string;
	};
	query?: never;
	url: '/api/events/invitation-request/{request_id}';
};

export type EventDeleteInvitationRequest912D3D08Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventDeleteInvitationRequest912D3D08Response =
	EventDeleteInvitationRequest912D3D08Responses[keyof EventDeleteInvitationRequest912D3D08Responses];

export type EventListUserInvitationRequestsDd4D5D81Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Event Id
		 */
		event_id?: string | null;
		/**
		 * Status
		 */
		status?: 'pending' | 'approved' | 'rejected';
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/events/me/pending_invitation_requests';
};

export type EventListUserInvitationRequestsDd4D5D81Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventInvitationRequestSchema;
};

export type EventListUserInvitationRequestsDd4D5D81Response =
	EventListUserInvitationRequestsDd4D5D81Responses[keyof EventListUserInvitationRequestsDd4D5D81Responses];

export type EventGetEventBySlugs262B0077Data = {
	body?: never;
	path: {
		/**
		 * Org Slug
		 */
		org_slug: string;
		/**
		 * Event Slug
		 */
		event_slug: string;
	};
	query?: never;
	url: '/api/events/{org_slug}/{event_slug}';
};

export type EventGetEventBySlugs262B0077Responses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type EventGetEventBySlugs262B0077Response =
	EventGetEventBySlugs262B0077Responses[keyof EventGetEventBySlugs262B0077Responses];

export type EventGetEvent73D8A134Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}';
};

export type EventGetEvent73D8A134Responses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type EventGetEvent73D8A134Response =
	EventGetEvent73D8A134Responses[keyof EventGetEvent73D8A134Responses];

export type EventRsvpEvent9201Ac3eData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Status
		 */
		answer: 'yes' | 'no' | 'maybe';
	};
	query?: never;
	url: '/api/events/{event_id}/rsvp/{answer}';
};

export type EventRsvpEvent9201Ac3eErrors = {
	/**
	 * Bad Request
	 */
	400: EventUserEligibility;
};

export type EventRsvpEvent9201Ac3eError =
	EventRsvpEvent9201Ac3eErrors[keyof EventRsvpEvent9201Ac3eErrors];

export type EventRsvpEvent9201Ac3eResponses = {
	/**
	 * OK
	 */
	200: EventRsvpSchema;
};

export type EventRsvpEvent9201Ac3eResponse =
	EventRsvpEvent9201Ac3eResponses[keyof EventRsvpEvent9201Ac3eResponses];

export type EventListTiers23136Ae2Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/tickets/tiers';
};

export type EventListTiers23136Ae2Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TierSchema>;
};

export type EventListTiers23136Ae2Response =
	EventListTiers23136Ae2Responses[keyof EventListTiers23136Ae2Responses];

export type EventTicketCheckoutBe55B8B6Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Tier Id
		 */
		tier_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/tickets/{tier_id}/checkout';
};

export type EventTicketCheckoutBe55B8B6Errors = {
	/**
	 * Bad Request
	 */
	400: EventUserEligibility;
};

export type EventTicketCheckoutBe55B8B6Error =
	EventTicketCheckoutBe55B8B6Errors[keyof EventTicketCheckoutBe55B8B6Errors];

export type EventTicketCheckoutBe55B8B6Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: StripeCheckoutSessionSchema | EventTicketSchema;
};

export type EventTicketCheckoutBe55B8B6Response =
	EventTicketCheckoutBe55B8B6Responses[keyof EventTicketCheckoutBe55B8B6Responses];

export type EventTicketPwycCheckoutEdfa7D7bData = {
	body: PwycCheckoutPayloadSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Tier Id
		 */
		tier_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/tickets/{tier_id}/checkout/pwyc';
};

export type EventTicketPwycCheckoutEdfa7D7bErrors = {
	/**
	 * Bad Request
	 */
	400: EventUserEligibility;
};

export type EventTicketPwycCheckoutEdfa7D7bError =
	EventTicketPwycCheckoutEdfa7D7bErrors[keyof EventTicketPwycCheckoutEdfa7D7bErrors];

export type EventTicketPwycCheckoutEdfa7D7bResponses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: StripeCheckoutSessionSchema | EventTicketSchema;
};

export type EventTicketPwycCheckoutEdfa7D7bResponse =
	EventTicketPwycCheckoutEdfa7D7bResponses[keyof EventTicketPwycCheckoutEdfa7D7bResponses];

export type EventGetQuestionnaireE218Ced1Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Questionnaire Id
		 */
		questionnaire_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/questionnaire/{questionnaire_id}';
};

export type EventGetQuestionnaireE218Ced1Responses = {
	/**
	 * OK
	 */
	200: QuestionnaireSchema;
};

export type EventGetQuestionnaireE218Ced1Response =
	EventGetQuestionnaireE218Ced1Responses[keyof EventGetQuestionnaireE218Ced1Responses];

export type EventSubmitQuestionnaire0B52F8C9Data = {
	body: QuestionnaireSubmissionSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Questionnaire Id
		 */
		questionnaire_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/questionnaire/{questionnaire_id}/submit';
};

export type EventSubmitQuestionnaire0B52F8C9Errors = {
	/**
	 * Bad Request
	 */
	400: ResponseMessage;
};

export type EventSubmitQuestionnaire0B52F8C9Error =
	EventSubmitQuestionnaire0B52F8C9Errors[keyof EventSubmitQuestionnaire0B52F8C9Errors];

export type EventSubmitQuestionnaire0B52F8C9Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: QuestionnaireSubmissionResponseSchema | QuestionnaireEvaluationForUserSchema;
};

export type EventSubmitQuestionnaire0B52F8C9Response =
	EventSubmitQuestionnaire0B52F8C9Responses[keyof EventSubmitQuestionnaire0B52F8C9Responses];

export type EventadminDeleteEventToken6561773fData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Token Id
		 */
		token_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/token/{token_id}';
};

export type EventadminDeleteEventToken6561773fResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminDeleteEventToken6561773fResponse =
	EventadminDeleteEventToken6561773fResponses[keyof EventadminDeleteEventToken6561773fResponses];

export type EventadminUpdateEventToken7Fb7Cce9Data = {
	body: EventTokenUpdateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Token Id
		 */
		token_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/token/{token_id}';
};

export type EventadminUpdateEventToken7Fb7Cce9Responses = {
	/**
	 * OK
	 */
	200: EventTokenSchema;
};

export type EventadminUpdateEventToken7Fb7Cce9Response =
	EventadminUpdateEventToken7Fb7Cce9Responses[keyof EventadminUpdateEventToken7Fb7Cce9Responses];

export type EventadminListEventTokens422Cc08dData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Is Active
		 */
		is_active?: boolean | null;
		/**
		 * Event Id
		 */
		event_id?: string | null;
		/**
		 * Has Invitation
		 */
		has_invitation?: boolean | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/tokens';
};

export type EventadminListEventTokens422Cc08dResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventTokenSchema;
};

export type EventadminListEventTokens422Cc08dResponse =
	EventadminListEventTokens422Cc08dResponses[keyof EventadminListEventTokens422Cc08dResponses];

export type EventadminCreateEventTokenAf60D68cData = {
	body: EventTokenCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/token';
};

export type EventadminCreateEventTokenAf60D68cResponses = {
	/**
	 * OK
	 */
	200: EventTokenSchema;
};

export type EventadminCreateEventTokenAf60D68cResponse =
	EventadminCreateEventTokenAf60D68cResponses[keyof EventadminCreateEventTokenAf60D68cResponses];

export type EventadminDecideInvitationRequestF10118FbData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Request Id
		 */
		request_id: string;
		/**
		 * Decision
		 */
		decision: 'approve' | 'reject';
	};
	query?: never;
	url: '/api/event-admin/{event_id}/invitation-request/{request_id}/{decision}';
};

export type EventadminDecideInvitationRequestF10118FbResponses = {
	/**
	 * OK
	 */
	200: EventInvitationRequestSchema;
};

export type EventadminDecideInvitationRequestF10118FbResponse =
	EventadminDecideInvitationRequestF10118FbResponses[keyof EventadminDecideInvitationRequestF10118FbResponses];

export type EventadminListEventInvitationRequests2D58Fff4Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Status
		 */
		status?: 'pending' | 'approved' | 'rejected';
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/invitation_requests';
};

export type EventadminListEventInvitationRequests2D58Fff4Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventInvitationRequestInternalSchema;
};

export type EventadminListEventInvitationRequests2D58Fff4Response =
	EventadminListEventInvitationRequests2D58Fff4Responses[keyof EventadminListEventInvitationRequests2D58Fff4Responses];

export type EventadminUpdateEvent915D70F7Data = {
	body: EventEditSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}';
};

export type EventadminUpdateEvent915D70F7Errors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type EventadminUpdateEvent915D70F7Error =
	EventadminUpdateEvent915D70F7Errors[keyof EventadminUpdateEvent915D70F7Errors];

export type EventadminUpdateEvent915D70F7Responses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type EventadminUpdateEvent915D70F7Response =
	EventadminUpdateEvent915D70F7Responses[keyof EventadminUpdateEvent915D70F7Responses];

export type EventadminUpdateEventStatus05955A8aData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Status
		 */
		status: 'open' | 'closed' | 'draft' | 'deleted';
	};
	query?: never;
	url: '/api/event-admin/{event_id}/actions/update-status/{status}';
};

export type EventadminUpdateEventStatus05955A8aResponses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type EventadminUpdateEventStatus05955A8aResponse =
	EventadminUpdateEventStatus05955A8aResponses[keyof EventadminUpdateEventStatus05955A8aResponses];

export type EventadminUploadLogo5F54E903Data = {
	/**
	 * FileParams
	 */
	body: {
		/**
		 * Logo
		 */
		logo: Blob | File;
	};
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/upload-logo';
};

export type EventadminUploadLogo5F54E903Responses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type EventadminUploadLogo5F54E903Response =
	EventadminUploadLogo5F54E903Responses[keyof EventadminUploadLogo5F54E903Responses];

export type EventadminUploadCoverArtA805B668Data = {
	/**
	 * FileParams
	 */
	body: {
		/**
		 * Cover Art
		 */
		cover_art: Blob | File;
	};
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/upload-cover-art';
};

export type EventadminUploadCoverArtA805B668Responses = {
	/**
	 * OK
	 */
	200: EventDetailSchema;
};

export type EventadminUploadCoverArtA805B668Response =
	EventadminUploadCoverArtA805B668Responses[keyof EventadminUploadCoverArtA805B668Responses];

export type EventadminDeleteLogoB6F21423Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/delete-logo';
};

export type EventadminDeleteLogoB6F21423Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminDeleteLogoB6F21423Response =
	EventadminDeleteLogoB6F21423Responses[keyof EventadminDeleteLogoB6F21423Responses];

export type EventadminDeleteCoverArt4478Dd77Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/delete-cover-art';
};

export type EventadminDeleteCoverArt4478Dd77Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminDeleteCoverArt4478Dd77Response =
	EventadminDeleteCoverArt4478Dd77Responses[keyof EventadminDeleteCoverArt4478Dd77Responses];

export type EventadminClearTags1F6C2D6cData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tags';
};

export type EventadminClearTags1F6C2D6cResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminClearTags1F6C2D6cResponse =
	EventadminClearTags1F6C2D6cResponses[keyof EventadminClearTags1F6C2D6cResponses];

export type EventadminAddTagsA28D5B14Data = {
	body: TagUpdateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tags';
};

export type EventadminAddTagsA28D5B14Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TagSchema>;
};

export type EventadminAddTagsA28D5B14Response =
	EventadminAddTagsA28D5B14Responses[keyof EventadminAddTagsA28D5B14Responses];

export type EventadminRemoveTags2D997FfeData = {
	body: TagUpdateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tags/remove';
};

export type EventadminRemoveTags2D997FfeResponses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TagSchema>;
};

export type EventadminRemoveTags2D997FfeResponse =
	EventadminRemoveTags2D997FfeResponses[keyof EventadminRemoveTags2D997FfeResponses];

export type EventadminListTicketTiers2B1C8300Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/ticket-tiers';
};

export type EventadminListTicketTiers2B1C8300Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaTicketTierDetailSchema;
};

export type EventadminListTicketTiers2B1C8300Response =
	EventadminListTicketTiers2B1C8300Responses[keyof EventadminListTicketTiers2B1C8300Responses];

export type EventadminCreateTicketTierF3F7363dData = {
	body: TicketTierCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/ticket-tier';
};

export type EventadminCreateTicketTierF3F7363dResponses = {
	/**
	 * OK
	 */
	200: TicketTierDetailSchema;
};

export type EventadminCreateTicketTierF3F7363dResponse =
	EventadminCreateTicketTierF3F7363dResponses[keyof EventadminCreateTicketTierF3F7363dResponses];

export type EventadminDeleteTicketTier006Aaa35Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Tier Id
		 */
		tier_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/ticket-tier/{tier_id}';
};

export type EventadminDeleteTicketTier006Aaa35Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminDeleteTicketTier006Aaa35Response =
	EventadminDeleteTicketTier006Aaa35Responses[keyof EventadminDeleteTicketTier006Aaa35Responses];

export type EventadminUpdateTicketTier29B0594cData = {
	body: TicketTierUpdateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Tier Id
		 */
		tier_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/ticket-tier/{tier_id}';
};

export type EventadminUpdateTicketTier29B0594cResponses = {
	/**
	 * OK
	 */
	200: TicketTierDetailSchema;
};

export type EventadminUpdateTicketTier29B0594cResponse =
	EventadminUpdateTicketTier29B0594cResponses[keyof EventadminUpdateTicketTier29B0594cResponses];

export type EventadminListPendingTicketsC9D9679cData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/pending-tickets';
};

export type EventadminListPendingTicketsC9D9679cResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaPendingTicketSchema;
};

export type EventadminListPendingTicketsC9D9679cResponse =
	EventadminListPendingTicketsC9D9679cResponses[keyof EventadminListPendingTicketsC9D9679cResponses];

export type EventadminConfirmTicketPayment4Dde6437Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Ticket Id
		 */
		ticket_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/tickets/{ticket_id}/confirm-payment';
};

export type EventadminConfirmTicketPayment4Dde6437Responses = {
	/**
	 * OK
	 */
	200: EventTicketSchema;
};

export type EventadminConfirmTicketPayment4Dde6437Response =
	EventadminConfirmTicketPayment4Dde6437Responses[keyof EventadminConfirmTicketPayment4Dde6437Responses];

export type EventadminCheckInTicket59A70Bf8Data = {
	body: CheckInRequestSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/check-in';
};

export type EventadminCheckInTicket59A70Bf8Errors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type EventadminCheckInTicket59A70Bf8Error =
	EventadminCheckInTicket59A70Bf8Errors[keyof EventadminCheckInTicket59A70Bf8Errors];

export type EventadminCheckInTicket59A70Bf8Responses = {
	/**
	 * OK
	 */
	200: CheckInResponseSchema;
};

export type EventadminCheckInTicket59A70Bf8Response =
	EventadminCheckInTicket59A70Bf8Responses[keyof EventadminCheckInTicket59A70Bf8Responses];

export type EventadminListInvitations825E5905Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/invitations';
};

export type EventadminListInvitations825E5905Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventInvitationListSchema;
};

export type EventadminListInvitations825E5905Response =
	EventadminListInvitations825E5905Responses[keyof EventadminListInvitations825E5905Responses];

export type EventadminCreateInvitations733Ff6BaData = {
	body: DirectInvitationCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/invitations';
};

export type EventadminCreateInvitations733Ff6BaErrors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type EventadminCreateInvitations733Ff6BaError =
	EventadminCreateInvitations733Ff6BaErrors[keyof EventadminCreateInvitations733Ff6BaErrors];

export type EventadminCreateInvitations733Ff6BaResponses = {
	/**
	 * OK
	 */
	200: DirectInvitationResponseSchema;
};

export type EventadminCreateInvitations733Ff6BaResponse =
	EventadminCreateInvitations733Ff6BaResponses[keyof EventadminCreateInvitations733Ff6BaResponses];

export type EventadminListPendingInvitations2A4C53AfData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-admin/{event_id}/pending-invitations';
};

export type EventadminListPendingInvitations2A4C53AfResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaPendingEventInvitationListSchema;
};

export type EventadminListPendingInvitations2A4C53AfResponse =
	EventadminListPendingInvitations2A4C53AfResponses[keyof EventadminListPendingInvitations2A4C53AfResponses];

export type EventadminDeleteInvitationEndpointD2F4190eData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Invitation Type
		 */
		invitation_type: 'registered' | 'pending';
		/**
		 * Invitation Id
		 */
		invitation_id: string;
	};
	query?: never;
	url: '/api/event-admin/{event_id}/invitations/{invitation_type}/{invitation_id}';
};

export type EventadminDeleteInvitationEndpointD2F4190eErrors = {
	/**
	 * Not Found
	 */
	404: ValidationErrorResponse;
};

export type EventadminDeleteInvitationEndpointD2F4190eError =
	EventadminDeleteInvitationEndpointD2F4190eErrors[keyof EventadminDeleteInvitationEndpointD2F4190eErrors];

export type EventadminDeleteInvitationEndpointD2F4190eResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventadminDeleteInvitationEndpointD2F4190eResponse =
	EventadminDeleteInvitationEndpointD2F4190eResponses[keyof EventadminDeleteInvitationEndpointD2F4190eResponses];

export type PermissionMyPermissions5C36B820Data = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/permissions/my-permissions';
};

export type PermissionMyPermissions5C36B820Responses = {
	/**
	 * OK
	 */
	200: OrganizationPermissionsSchema;
};

export type PermissionMyPermissions5C36B820Response =
	PermissionMyPermissions5C36B820Responses[keyof PermissionMyPermissions5C36B820Responses];

export type EventseriesListEventSeries73738B47Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Organization
		 */
		organization?: string | null;
		/**
		 * Tags
		 */
		tags?: Array<string> | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-series/';
};

export type EventseriesListEventSeries73738B47Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaEventSeriesRetrieveSchema;
};

export type EventseriesListEventSeries73738B47Response =
	EventseriesListEventSeries73738B47Responses[keyof EventseriesListEventSeries73738B47Responses];

export type EventseriesGetEventSeriesBySlugsC1B70Ed3Data = {
	body?: never;
	path: {
		/**
		 * Org Slug
		 */
		org_slug: string;
		/**
		 * Series Slug
		 */
		series_slug: string;
	};
	query?: never;
	url: '/api/event-series/{org_slug}/{series_slug}';
};

export type EventseriesGetEventSeriesBySlugsC1B70Ed3Responses = {
	/**
	 * OK
	 */
	200: EventSeriesRetrieveSchema;
};

export type EventseriesGetEventSeriesBySlugsC1B70Ed3Response =
	EventseriesGetEventSeriesBySlugsC1B70Ed3Responses[keyof EventseriesGetEventSeriesBySlugsC1B70Ed3Responses];

export type EventseriesGetEventSeries095Fa42fData = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series/{series_id}';
};

export type EventseriesGetEventSeries095Fa42fResponses = {
	/**
	 * OK
	 */
	200: EventSeriesRetrieveSchema;
};

export type EventseriesGetEventSeries095Fa42fResponse =
	EventseriesGetEventSeries095Fa42fResponses[keyof EventseriesGetEventSeries095Fa42fResponses];

export type EventseriesListResourcesE6217Cb7Data = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: {
		resource_type?: ResourceTypes | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/event-series/{series_id}/resources';
};

export type EventseriesListResourcesE6217Cb7Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaAdditionalResourceSchema;
};

export type EventseriesListResourcesE6217Cb7Response =
	EventseriesListResourcesE6217Cb7Responses[keyof EventseriesListResourcesE6217Cb7Responses];

export type EventseriesadminDeleteEventSeriesDbf3981cData = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/';
};

export type EventseriesadminDeleteEventSeriesDbf3981cResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventseriesadminDeleteEventSeriesDbf3981cResponse =
	EventseriesadminDeleteEventSeriesDbf3981cResponses[keyof EventseriesadminDeleteEventSeriesDbf3981cResponses];

export type EventseriesadminUpdateEventSeries4D992747Data = {
	body: EventSeriesEditSchema;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/';
};

export type EventseriesadminUpdateEventSeries4D992747Errors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type EventseriesadminUpdateEventSeries4D992747Error =
	EventseriesadminUpdateEventSeries4D992747Errors[keyof EventseriesadminUpdateEventSeries4D992747Errors];

export type EventseriesadminUpdateEventSeries4D992747Responses = {
	/**
	 * OK
	 */
	200: EventSeriesRetrieveSchema;
};

export type EventseriesadminUpdateEventSeries4D992747Response =
	EventseriesadminUpdateEventSeries4D992747Responses[keyof EventseriesadminUpdateEventSeries4D992747Responses];

export type EventseriesadminUploadLogo5Afea2C4Data = {
	/**
	 * FileParams
	 */
	body: {
		/**
		 * Logo
		 */
		logo: Blob | File;
	};
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/upload-logo';
};

export type EventseriesadminUploadLogo5Afea2C4Responses = {
	/**
	 * OK
	 */
	200: EventSeriesRetrieveSchema;
};

export type EventseriesadminUploadLogo5Afea2C4Response =
	EventseriesadminUploadLogo5Afea2C4Responses[keyof EventseriesadminUploadLogo5Afea2C4Responses];

export type EventseriesadminUploadCoverArtF0C79525Data = {
	/**
	 * FileParams
	 */
	body: {
		/**
		 * Cover Art
		 */
		cover_art: Blob | File;
	};
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/upload-cover-art';
};

export type EventseriesadminUploadCoverArtF0C79525Responses = {
	/**
	 * OK
	 */
	200: EventSeriesRetrieveSchema;
};

export type EventseriesadminUploadCoverArtF0C79525Response =
	EventseriesadminUploadCoverArtF0C79525Responses[keyof EventseriesadminUploadCoverArtF0C79525Responses];

export type EventseriesadminDeleteLogoE3B42E9fData = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/delete-logo';
};

export type EventseriesadminDeleteLogoE3B42E9fResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventseriesadminDeleteLogoE3B42E9fResponse =
	EventseriesadminDeleteLogoE3B42E9fResponses[keyof EventseriesadminDeleteLogoE3B42E9fResponses];

export type EventseriesadminDeleteCoverArt0341E447Data = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/delete-cover-art';
};

export type EventseriesadminDeleteCoverArt0341E447Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventseriesadminDeleteCoverArt0341E447Response =
	EventseriesadminDeleteCoverArt0341E447Responses[keyof EventseriesadminDeleteCoverArt0341E447Responses];

export type EventseriesadminClearTags93B3Ecc0Data = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/tags';
};

export type EventseriesadminClearTags93B3Ecc0Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type EventseriesadminClearTags93B3Ecc0Response =
	EventseriesadminClearTags93B3Ecc0Responses[keyof EventseriesadminClearTags93B3Ecc0Responses];

export type EventseriesadminAddTags9C75B473Data = {
	body: TagUpdateSchema;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/tags';
};

export type EventseriesadminAddTags9C75B473Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TagSchema>;
};

export type EventseriesadminAddTags9C75B473Response =
	EventseriesadminAddTags9C75B473Responses[keyof EventseriesadminAddTags9C75B473Responses];

export type EventseriesadminRemoveTags2B11D1EaData = {
	body: TagUpdateSchema;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/event-series-admin/{series_id}/tags/remove';
};

export type EventseriesadminRemoveTags2B11D1EaResponses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<TagSchema>;
};

export type EventseriesadminRemoveTags2B11D1EaResponse =
	EventseriesadminRemoveTags2B11D1EaResponses[keyof EventseriesadminRemoveTags2B11D1EaResponses];

export type PotluckListPotluckItemsDadc973fData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/potluck/';
};

export type PotluckListPotluckItemsDadc973fResponses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<PotluckItemRetrieveSchema>;
};

export type PotluckListPotluckItemsDadc973fResponse =
	PotluckListPotluckItemsDadc973fResponses[keyof PotluckListPotluckItemsDadc973fResponses];

export type PotluckCreatePotluckItem815Ba978Data = {
	body: PotluckItemCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/potluck/';
};

export type PotluckCreatePotluckItem815Ba978Responses = {
	/**
	 * OK
	 */
	200: PotluckItemRetrieveSchema;
};

export type PotluckCreatePotluckItem815Ba978Response =
	PotluckCreatePotluckItem815Ba978Responses[keyof PotluckCreatePotluckItem815Ba978Responses];

export type PotluckDeletePotluckItem58C038B2Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Item Id
		 */
		item_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/potluck/{item_id}';
};

export type PotluckDeletePotluckItem58C038B2Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type PotluckDeletePotluckItem58C038B2Response =
	PotluckDeletePotluckItem58C038B2Responses[keyof PotluckDeletePotluckItem58C038B2Responses];

export type PotluckUpdatePotluckItem2A8132E0Data = {
	body: PotluckItemCreateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Item Id
		 */
		item_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/potluck/{item_id}';
};

export type PotluckUpdatePotluckItem2A8132E0Responses = {
	/**
	 * OK
	 */
	200: PotluckItemRetrieveSchema;
};

export type PotluckUpdatePotluckItem2A8132E0Response =
	PotluckUpdatePotluckItem2A8132E0Responses[keyof PotluckUpdatePotluckItem2A8132E0Responses];

export type PotluckClaimPotluckItem11Fa1EddData = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Item Id
		 */
		item_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/potluck/{item_id}/claim';
};

export type PotluckClaimPotluckItem11Fa1EddResponses = {
	/**
	 * OK
	 */
	200: PotluckItemRetrieveSchema;
};

export type PotluckClaimPotluckItem11Fa1EddResponse =
	PotluckClaimPotluckItem11Fa1EddResponses[keyof PotluckClaimPotluckItem11Fa1EddResponses];

export type PotluckUnclaimPotluckItem9033Bf38Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
		/**
		 * Item Id
		 */
		item_id: string;
	};
	query?: never;
	url: '/api/events/{event_id}/potluck/{item_id}/unclaim';
};

export type PotluckUnclaimPotluckItem9033Bf38Responses = {
	/**
	 * OK
	 */
	200: PotluckItemRetrieveSchema;
};

export type PotluckUnclaimPotluckItem9033Bf38Response =
	PotluckUnclaimPotluckItem9033Bf38Responses[keyof PotluckUnclaimPotluckItem9033Bf38Responses];

export type QuestionnaireListOrgQuestionnaires71890C8eData = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/questionnaires/';
};

export type QuestionnaireListOrgQuestionnaires71890C8eResponses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaOrganizationQuestionnaireInListSchema;
};

export type QuestionnaireListOrgQuestionnaires71890C8eResponse =
	QuestionnaireListOrgQuestionnaires71890C8eResponses[keyof QuestionnaireListOrgQuestionnaires71890C8eResponses];

export type QuestionnaireCreateOrgQuestionnaireE37038EbData = {
	body: OrganizationQuestionnaireCreateSchema;
	path: {
		/**
		 * Organization Id
		 */
		organization_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{organization_id}/create-questionnaire';
};

export type QuestionnaireCreateOrgQuestionnaireE37038EbErrors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type QuestionnaireCreateOrgQuestionnaireE37038EbError =
	QuestionnaireCreateOrgQuestionnaireE37038EbErrors[keyof QuestionnaireCreateOrgQuestionnaireE37038EbErrors];

export type QuestionnaireCreateOrgQuestionnaireE37038EbResponses = {
	/**
	 * OK
	 */
	200: OrganizationQuestionnaireSchema;
};

export type QuestionnaireCreateOrgQuestionnaireE37038EbResponse =
	QuestionnaireCreateOrgQuestionnaireE37038EbResponses[keyof QuestionnaireCreateOrgQuestionnaireE37038EbResponses];

export type QuestionnaireDeleteOrgQuestionnaire3B6D6033Data = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}';
};

export type QuestionnaireDeleteOrgQuestionnaire3B6D6033Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type QuestionnaireDeleteOrgQuestionnaire3B6D6033Response =
	QuestionnaireDeleteOrgQuestionnaire3B6D6033Responses[keyof QuestionnaireDeleteOrgQuestionnaire3B6D6033Responses];

export type QuestionnaireGetOrgQuestionnaire13B9Ed5dData = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}';
};

export type QuestionnaireGetOrgQuestionnaire13B9Ed5dResponses = {
	/**
	 * OK
	 */
	200: OrganizationQuestionnaireSchema;
};

export type QuestionnaireGetOrgQuestionnaire13B9Ed5dResponse =
	QuestionnaireGetOrgQuestionnaire13B9Ed5dResponses[keyof QuestionnaireGetOrgQuestionnaire13B9Ed5dResponses];

export type QuestionnaireUpdateOrgQuestionnaireEbc0E8D6Data = {
	body: OrganizationQuestionnaireUpdateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}';
};

export type QuestionnaireUpdateOrgQuestionnaireEbc0E8D6Responses = {
	/**
	 * OK
	 */
	200: OrganizationQuestionnaireSchema;
};

export type QuestionnaireUpdateOrgQuestionnaireEbc0E8D6Response =
	QuestionnaireUpdateOrgQuestionnaireEbc0E8D6Responses[keyof QuestionnaireUpdateOrgQuestionnaireEbc0E8D6Responses];

export type QuestionnaireCreateSection3Bec3Cc8Data = {
	body: SectionCreateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/sections';
};

export type QuestionnaireCreateSection3Bec3Cc8Responses = {
	/**
	 * OK
	 */
	200: SectionUpdateSchema;
};

export type QuestionnaireCreateSection3Bec3Cc8Response =
	QuestionnaireCreateSection3Bec3Cc8Responses[keyof QuestionnaireCreateSection3Bec3Cc8Responses];

export type QuestionnaireDeleteSection2839357aData = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Section Id
		 */
		section_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/sections/{section_id}';
};

export type QuestionnaireDeleteSection2839357aResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type QuestionnaireDeleteSection2839357aResponse =
	QuestionnaireDeleteSection2839357aResponses[keyof QuestionnaireDeleteSection2839357aResponses];

export type QuestionnaireUpdateSection71E7E691Data = {
	body: SectionUpdateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Section Id
		 */
		section_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/sections/{section_id}';
};

export type QuestionnaireUpdateSection71E7E691Responses = {
	/**
	 * OK
	 */
	200: SectionUpdateSchema;
};

export type QuestionnaireUpdateSection71E7E691Response =
	QuestionnaireUpdateSection71E7E691Responses[keyof QuestionnaireUpdateSection71E7E691Responses];

export type QuestionnaireCreateMcQuestionE0568F0cData = {
	body: MultipleChoiceQuestionCreateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/multiple-choice-questions';
};

export type QuestionnaireCreateMcQuestionE0568F0cResponses = {
	/**
	 * OK
	 */
	200: MultipleChoiceQuestionUpdateSchema;
};

export type QuestionnaireCreateMcQuestionE0568F0cResponse =
	QuestionnaireCreateMcQuestionE0568F0cResponses[keyof QuestionnaireCreateMcQuestionE0568F0cResponses];

export type QuestionnaireDeleteMcQuestion05Bf4B74Data = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Question Id
		 */
		question_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/multiple-choice-questions/{question_id}';
};

export type QuestionnaireDeleteMcQuestion05Bf4B74Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type QuestionnaireDeleteMcQuestion05Bf4B74Response =
	QuestionnaireDeleteMcQuestion05Bf4B74Responses[keyof QuestionnaireDeleteMcQuestion05Bf4B74Responses];

export type QuestionnaireUpdateMcQuestion936Bbd9dData = {
	body: MultipleChoiceQuestionUpdateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Question Id
		 */
		question_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/multiple-choice-questions/{question_id}';
};

export type QuestionnaireUpdateMcQuestion936Bbd9dResponses = {
	/**
	 * OK
	 */
	200: MultipleChoiceQuestionUpdateSchema;
};

export type QuestionnaireUpdateMcQuestion936Bbd9dResponse =
	QuestionnaireUpdateMcQuestion936Bbd9dResponses[keyof QuestionnaireUpdateMcQuestion936Bbd9dResponses];

export type QuestionnaireCreateMcOptionBc096C71Data = {
	body: MultipleChoiceOptionCreateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Question Id
		 */
		question_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/multiple-choice-questions/{question_id}/options';
};

export type QuestionnaireCreateMcOptionBc096C71Responses = {
	/**
	 * OK
	 */
	200: MultipleChoiceOptionUpdateSchema;
};

export type QuestionnaireCreateMcOptionBc096C71Response =
	QuestionnaireCreateMcOptionBc096C71Responses[keyof QuestionnaireCreateMcOptionBc096C71Responses];

export type QuestionnaireDeleteMcOptionEab87162Data = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Option Id
		 */
		option_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/multiple-choice-options/{option_id}';
};

export type QuestionnaireDeleteMcOptionEab87162Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type QuestionnaireDeleteMcOptionEab87162Response =
	QuestionnaireDeleteMcOptionEab87162Responses[keyof QuestionnaireDeleteMcOptionEab87162Responses];

export type QuestionnaireUpdateMcOption88D25Da9Data = {
	body: MultipleChoiceOptionUpdateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Option Id
		 */
		option_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/multiple-choice-options/{option_id}';
};

export type QuestionnaireUpdateMcOption88D25Da9Responses = {
	/**
	 * OK
	 */
	200: MultipleChoiceOptionUpdateSchema;
};

export type QuestionnaireUpdateMcOption88D25Da9Response =
	QuestionnaireUpdateMcOption88D25Da9Responses[keyof QuestionnaireUpdateMcOption88D25Da9Responses];

export type QuestionnaireCreateFtQuestion32291D7dData = {
	body: FreeTextQuestionCreateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/free-text-questions';
};

export type QuestionnaireCreateFtQuestion32291D7dResponses = {
	/**
	 * OK
	 */
	200: FreeTextQuestionUpdateSchema;
};

export type QuestionnaireCreateFtQuestion32291D7dResponse =
	QuestionnaireCreateFtQuestion32291D7dResponses[keyof QuestionnaireCreateFtQuestion32291D7dResponses];

export type QuestionnaireDeleteFtQuestionA32E12CdData = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Question Id
		 */
		question_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/free-text-questions/{question_id}';
};

export type QuestionnaireDeleteFtQuestionA32E12CdResponses = {
	/**
	 * No Content
	 */
	204: void;
};

export type QuestionnaireDeleteFtQuestionA32E12CdResponse =
	QuestionnaireDeleteFtQuestionA32E12CdResponses[keyof QuestionnaireDeleteFtQuestionA32E12CdResponses];

export type QuestionnaireUpdateFtQuestion104Bee43Data = {
	body: FreeTextQuestionUpdateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Question Id
		 */
		question_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/free-text-questions/{question_id}';
};

export type QuestionnaireUpdateFtQuestion104Bee43Responses = {
	/**
	 * OK
	 */
	200: FreeTextQuestionUpdateSchema;
};

export type QuestionnaireUpdateFtQuestion104Bee43Response =
	QuestionnaireUpdateFtQuestion104Bee43Responses[keyof QuestionnaireUpdateFtQuestion104Bee43Responses];

export type QuestionnaireListSubmissions7Df8Cb01Data = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/questionnaires/{org_questionnaire_id}/submissions';
};

export type QuestionnaireListSubmissions7Df8Cb01Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaSubmissionListItemSchema;
};

export type QuestionnaireListSubmissions7Df8Cb01Response =
	QuestionnaireListSubmissions7Df8Cb01Responses[keyof QuestionnaireListSubmissions7Df8Cb01Responses];

export type QuestionnaireGetSubmissionDetailA514Bfd5Data = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Submission Id
		 */
		submission_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/submissions/{submission_id}';
};

export type QuestionnaireGetSubmissionDetailA514Bfd5Responses = {
	/**
	 * OK
	 */
	200: SubmissionDetailSchema;
};

export type QuestionnaireGetSubmissionDetailA514Bfd5Response =
	QuestionnaireGetSubmissionDetailA514Bfd5Responses[keyof QuestionnaireGetSubmissionDetailA514Bfd5Responses];

export type QuestionnaireEvaluateSubmission5E1E9D9bData = {
	body: EvaluationCreateSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Submission Id
		 */
		submission_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/submissions/{submission_id}/evaluate';
};

export type QuestionnaireEvaluateSubmission5E1E9D9bErrors = {
	/**
	 * Bad Request
	 */
	400: ValidationErrorResponse;
};

export type QuestionnaireEvaluateSubmission5E1E9D9bError =
	QuestionnaireEvaluateSubmission5E1E9D9bErrors[keyof QuestionnaireEvaluateSubmission5E1E9D9bErrors];

export type QuestionnaireEvaluateSubmission5E1E9D9bResponses = {
	/**
	 * OK
	 */
	200: EvaluationResponseSchema;
};

export type QuestionnaireEvaluateSubmission5E1E9D9bResponse =
	QuestionnaireEvaluateSubmission5E1E9D9bResponses[keyof QuestionnaireEvaluateSubmission5E1E9D9bResponses];

export type QuestionnaireUpdateQuestionnaireStatusF3F8613eData = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Status
		 */
		status: 'draft' | 'ready' | 'published';
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/status/{status}';
};

export type QuestionnaireUpdateQuestionnaireStatusF3F8613eResponses = {
	/**
	 * OK
	 */
	200: OrganizationQuestionnaireSchema;
};

export type QuestionnaireUpdateQuestionnaireStatusF3F8613eResponse =
	QuestionnaireUpdateQuestionnaireStatusF3F8613eResponses[keyof QuestionnaireUpdateQuestionnaireStatusF3F8613eResponses];

export type QuestionnaireReplaceEventsE0Df2A52Data = {
	body: EventAssignmentSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/events';
};

export type QuestionnaireReplaceEventsE0Df2A52Responses = {
	/**
	 * OK
	 */
	200: OrganizationQuestionnaireSchema;
};

export type QuestionnaireReplaceEventsE0Df2A52Response =
	QuestionnaireReplaceEventsE0Df2A52Responses[keyof QuestionnaireReplaceEventsE0Df2A52Responses];

export type QuestionnaireUnassignEvent17704878Data = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/events/{event_id}';
};

export type QuestionnaireUnassignEvent17704878Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type QuestionnaireUnassignEvent17704878Response =
	QuestionnaireUnassignEvent17704878Responses[keyof QuestionnaireUnassignEvent17704878Responses];

export type QuestionnaireAssignEventBbb45Ad4Data = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/events/{event_id}';
};

export type QuestionnaireAssignEventBbb45Ad4Responses = {
	/**
	 * OK
	 */
	200: OrganizationQuestionnaireSchema;
};

export type QuestionnaireAssignEventBbb45Ad4Response =
	QuestionnaireAssignEventBbb45Ad4Responses[keyof QuestionnaireAssignEventBbb45Ad4Responses];

export type QuestionnaireReplaceEventSeriesE2Ae2A14Data = {
	body: EventSeriesAssignmentSchema;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/event-series';
};

export type QuestionnaireReplaceEventSeriesE2Ae2A14Responses = {
	/**
	 * OK
	 */
	200: OrganizationQuestionnaireSchema;
};

export type QuestionnaireReplaceEventSeriesE2Ae2A14Response =
	QuestionnaireReplaceEventSeriesE2Ae2A14Responses[keyof QuestionnaireReplaceEventSeriesE2Ae2A14Responses];

export type QuestionnaireUnassignEventSeries0B10B8D0Data = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/event-series/{series_id}';
};

export type QuestionnaireUnassignEventSeries0B10B8D0Responses = {
	/**
	 * No Content
	 */
	204: void;
};

export type QuestionnaireUnassignEventSeries0B10B8D0Response =
	QuestionnaireUnassignEventSeries0B10B8D0Responses[keyof QuestionnaireUnassignEventSeries0B10B8D0Responses];

export type QuestionnaireAssignEventSeries6Aa0E041Data = {
	body?: never;
	path: {
		/**
		 * Org Questionnaire Id
		 */
		org_questionnaire_id: string;
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/questionnaires/{org_questionnaire_id}/event-series/{series_id}';
};

export type QuestionnaireAssignEventSeries6Aa0E041Responses = {
	/**
	 * OK
	 */
	200: OrganizationQuestionnaireSchema;
};

export type QuestionnaireAssignEventSeries6Aa0E041Response =
	QuestionnaireAssignEventSeries6Aa0E041Responses[keyof QuestionnaireAssignEventSeries6Aa0E041Responses];

export type UserpreferencesGetGeneralPreferences20C76CacData = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/preferences/general';
};

export type UserpreferencesGetGeneralPreferences20C76CacResponses = {
	/**
	 * OK
	 */
	200: GeneralUserPreferencesSchema;
};

export type UserpreferencesGetGeneralPreferences20C76CacResponse =
	UserpreferencesGetGeneralPreferences20C76CacResponses[keyof UserpreferencesGetGeneralPreferences20C76CacResponses];

export type UserpreferencesUpdateGlobalPreferencesC78Cd0DeData = {
	body: GeneralUserPreferencesUpdateSchema;
	path?: never;
	query?: {
		/**
		 * Overwrite Children
		 */
		overwrite_children?: boolean;
	};
	url: '/api/preferences/general';
};

export type UserpreferencesUpdateGlobalPreferencesC78Cd0DeResponses = {
	/**
	 * OK
	 */
	200: GeneralUserPreferencesSchema;
};

export type UserpreferencesUpdateGlobalPreferencesC78Cd0DeResponse =
	UserpreferencesUpdateGlobalPreferencesC78Cd0DeResponses[keyof UserpreferencesUpdateGlobalPreferencesC78Cd0DeResponses];

export type UserpreferencesGetOrganizationPreferencesB552F1B8Data = {
	body?: never;
	path: {
		/**
		 * Organization Id
		 */
		organization_id: string;
	};
	query?: never;
	url: '/api/preferences/organization/{organization_id}';
};

export type UserpreferencesGetOrganizationPreferencesB552F1B8Responses = {
	/**
	 * OK
	 */
	200: UserOrganizationPreferencesSchema;
};

export type UserpreferencesGetOrganizationPreferencesB552F1B8Response =
	UserpreferencesGetOrganizationPreferencesB552F1B8Responses[keyof UserpreferencesGetOrganizationPreferencesB552F1B8Responses];

export type UserpreferencesUpdateOrganizationPreferences968F12C4Data = {
	body: UserOrganizationPreferencesUpdateSchema;
	path: {
		/**
		 * Organization Id
		 */
		organization_id: string;
	};
	query?: {
		/**
		 * Overwrite Children
		 */
		overwrite_children?: boolean;
	};
	url: '/api/preferences/organization/{organization_id}';
};

export type UserpreferencesUpdateOrganizationPreferences968F12C4Responses = {
	/**
	 * OK
	 */
	200: UserOrganizationPreferencesSchema;
};

export type UserpreferencesUpdateOrganizationPreferences968F12C4Response =
	UserpreferencesUpdateOrganizationPreferences968F12C4Responses[keyof UserpreferencesUpdateOrganizationPreferences968F12C4Responses];

export type UserpreferencesGetEventSeriesPreferences34C31Ff9Data = {
	body?: never;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: never;
	url: '/api/preferences/event-series/{series_id}';
};

export type UserpreferencesGetEventSeriesPreferences34C31Ff9Responses = {
	/**
	 * OK
	 */
	200: UserEventSeriesPreferencesSchema;
};

export type UserpreferencesGetEventSeriesPreferences34C31Ff9Response =
	UserpreferencesGetEventSeriesPreferences34C31Ff9Responses[keyof UserpreferencesGetEventSeriesPreferences34C31Ff9Responses];

export type UserpreferencesUpdateEventSeriesPreferencesAf354Ab0Data = {
	body: UserEventSeriesPreferencesUpdateSchema;
	path: {
		/**
		 * Series Id
		 */
		series_id: string;
	};
	query?: {
		/**
		 * Overwrite Children
		 */
		overwrite_children?: boolean;
	};
	url: '/api/preferences/event-series/{series_id}';
};

export type UserpreferencesUpdateEventSeriesPreferencesAf354Ab0Responses = {
	/**
	 * OK
	 */
	200: UserEventSeriesPreferencesSchema;
};

export type UserpreferencesUpdateEventSeriesPreferencesAf354Ab0Response =
	UserpreferencesUpdateEventSeriesPreferencesAf354Ab0Responses[keyof UserpreferencesUpdateEventSeriesPreferencesAf354Ab0Responses];

export type UserpreferencesGetEventPreferences3Ea4Bfb5Data = {
	body?: never;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: never;
	url: '/api/preferences/event/{event_id}';
};

export type UserpreferencesGetEventPreferences3Ea4Bfb5Responses = {
	/**
	 * OK
	 */
	200: UserEventPreferencesSchema;
};

export type UserpreferencesGetEventPreferences3Ea4Bfb5Response =
	UserpreferencesGetEventPreferences3Ea4Bfb5Responses[keyof UserpreferencesGetEventPreferences3Ea4Bfb5Responses];

export type UserpreferencesUpdateEventPreferences852F60EbData = {
	body: UserEventPreferencesUpdateSchema;
	path: {
		/**
		 * Event Id
		 */
		event_id: string;
	};
	query?: {
		/**
		 * Overwrite Children
		 */
		overwrite_children?: boolean;
	};
	url: '/api/preferences/event/{event_id}';
};

export type UserpreferencesUpdateEventPreferences852F60EbResponses = {
	/**
	 * OK
	 */
	200: UserEventPreferencesSchema;
};

export type UserpreferencesUpdateEventPreferences852F60EbResponse =
	UserpreferencesUpdateEventPreferences852F60EbResponses[keyof UserpreferencesUpdateEventPreferences852F60EbResponses];

export type StripewebhookHandleWebhookFd2Aa002Data = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/stripe/webhook';
};

export type StripewebhookHandleWebhookFd2Aa002Responses = {
	/**
	 * OK
	 */
	200: unknown;
};

export type TagListTagsB4554Ba7Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/tags/';
};

export type TagListTagsB4554Ba7Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaTagSchema;
};

export type TagListTagsB4554Ba7Response =
	TagListTagsB4554Ba7Responses[keyof TagListTagsB4554Ba7Responses];

export type CityListCities017E5Df2Data = {
	body?: never;
	path?: never;
	query?: {
		/**
		 * Country
		 */
		country?: string | null;
		/**
		 * Search
		 */
		search?: string | null;
		/**
		 * Page
		 */
		page?: number;
		/**
		 * Page Size
		 */
		page_size?: number;
	};
	url: '/api/cities/';
};

export type CityListCities017E5Df2Responses = {
	/**
	 * OK
	 */
	200: PaginatedResponseSchemaCitySchema;
};

export type CityListCities017E5Df2Response =
	CityListCities017E5Df2Responses[keyof CityListCities017E5Df2Responses];

export type CityListCountriesC4A1E830Data = {
	body?: never;
	path?: never;
	query?: never;
	url: '/api/cities/countries';
};

export type CityListCountriesC4A1E830Responses = {
	/**
	 * Response
	 *
	 * OK
	 */
	200: Array<string>;
};

export type CityListCountriesC4A1E830Response =
	CityListCountriesC4A1E830Responses[keyof CityListCountriesC4A1E830Responses];

export type CityGetCity4Bb7Fc00Data = {
	body?: never;
	path: {
		/**
		 * City Id
		 */
		city_id: number;
	};
	query?: never;
	url: '/api/cities/{city_id}';
};

export type CityGetCity4Bb7Fc00Responses = {
	/**
	 * OK
	 */
	200: CitySchema;
};

export type CityGetCity4Bb7Fc00Response =
	CityGetCity4Bb7Fc00Responses[keyof CityGetCity4Bb7Fc00Responses];
